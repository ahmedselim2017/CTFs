;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2020 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2020-04-15 23:52:59
;; Architecture: x86-64
;;

;;
;; Code Segment
;;

; section: .text
; function: __mingw_invalidParameterHandler at 0x401000 -- 0x401001
0x401000:   c3                                 	ret 
; data inside code section at 0x401001 -- 0x401010
0x401001:   0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: pre_c_init at 0x401010 -- 0x401151
0x401010:   48 83 ec 28                        	sub rsp, 0x28
0x401014:   48 8b 05 65 35 00 00               	mov rax, qword ptr [rip + 0x3565]
0x40101b:   31 d2                              	xor edx, edx
0x40101d:   c7 00 01 00 00 00                  	mov dword ptr [rax], 1
0x401023:   48 8b 05 66 35 00 00               	mov rax, qword ptr [rip + 0x3566]
0x40102a:   c7 00 01 00 00 00                  	mov dword ptr [rax], 1
0x401030:   48 8b 05 69 35 00 00               	mov rax, qword ptr [rip + 0x3569]
0x401037:   c7 00 01 00 00 00                  	mov dword ptr [rax], 1
0x40103d:   48 8b 05 2c 35 00 00               	mov rax, qword ptr [rip + 0x352c]
0x401044:   c7 00 01 00 00 00                  	mov dword ptr [rax], 1
0x40104a:   48 8b 05 df 33 00 00               	mov rax, qword ptr [rip + 0x33df]
0x401051:   66 81 38 4d 5a                     	cmp word ptr [rax], 0x5a4d
0x401056:   74 78                              	je 0x4010d0 <pre_c_init+0xc0>
0x401058:   48 8b 05 01 35 00 00               	mov rax, qword ptr [rip + 0x3501]
0x40105f:   89 15 a3 5f 00 00                  	mov dword ptr [rip + 0x5fa3], edx
0x401065:   8b 00                              	mov eax, dword ptr [rax]
0x401067:   85 c0                              	test eax, eax
0x401069:   74 57                              	je 0x4010c2 <pre_c_init+0xb2>
0x40106b:   b9 02 00 00 00                     	mov ecx, 2
0x401070:   e8 c3 1c 00 00                     	call 0x402d38 <__set_app_type>
0x401075:   48 c7 c1 ff ff ff ff               	mov rcx, -1
0x40107c:   e8 0f 0c 00 00                     	call 0x401c90 <_encode_pointer>
0x401081:   48 8b 15 38 34 00 00               	mov rdx, qword ptr [rip + 0x3438]
0x401088:   48 89 02                           	mov qword ptr [rdx], rax
0x40108b:   48 8b 15 1e 34 00 00               	mov rdx, qword ptr [rip + 0x341e]
0x401092:   48 89 02                           	mov qword ptr [rdx], rax
0x401095:   48 8b 05 84 34 00 00               	mov rax, qword ptr [rip + 0x3484]
0x40109c:   8b 10                              	mov edx, dword ptr [rax]
0x40109e:   48 8b 05 bb 33 00 00               	mov rax, qword ptr [rip + 0x33bb]
0x4010a5:   48 8b 00                           	mov rax, qword ptr [rax]
0x4010a8:   89 10                              	mov dword ptr [rax], edx
0x4010aa:   e8 d1 07 00 00                     	call 0x401880 <_setargv>
0x4010af:   48 8b 05 2a 33 00 00               	mov rax, qword ptr [rip + 0x332a]
0x4010b6:   83 38 01                           	cmp dword ptr [rax], 1
0x4010b9:   74 65                              	je 0x401120 <pre_c_init+0x110>
0x4010bb:   31 c0                              	xor eax, eax
0x4010bd:   48 83 c4 28                        	add rsp, 0x28
0x4010c1:   c3                                 	ret 
0x4010c2:   b9 01 00 00 00                     	mov ecx, 1
0x4010c7:   e8 6c 1c 00 00                     	call 0x402d38 <__set_app_type>
0x4010cc:   eb a7                              	jmp 0x401075 <pre_c_init+0x65>
; data inside code section at 0x4010ce -- 0x4010d0
0x4010ce:   66 90                                              |f.              |
0x4010d0:   48 63 48 3c                        	movsxd rcx, dword ptr [rax + 0x3c]
0x4010d4:   48 01 c8                           	add rax, rcx
0x4010d7:   81 38 50 45 00 00                  	cmp dword ptr [rax], 0x4550
0x4010dd:   0f 85 75 ff ff ff                  	jne 0x401058 <pre_c_init+0x48>
0x4010e3:   0f b7 48 18                        	movzx ecx, word ptr [rax + 0x18]
0x4010e7:   66 81 f9 0b 01                     	cmp cx, 0x10b
0x4010ec:   74 45                              	je 0x401133 <pre_c_init+0x123>
0x4010ee:   66 81 f9 0b 02                     	cmp cx, 0x20b
0x4010f3:   0f 85 5f ff ff ff                  	jne 0x401058 <pre_c_init+0x48>
0x4010f9:   83 b8 84 00 00 00 0e               	cmp dword ptr [rax + 0x84], 0xe
0x401100:   0f 86 52 ff ff ff                  	jbe 0x401058 <pre_c_init+0x48>
0x401106:   8b 88 f8 00 00 00                  	mov ecx, dword ptr [rax + 0xf8]
0x40110c:   31 d2                              	xor edx, edx
0x40110e:   85 c9                              	test ecx, ecx
0x401110:   0f 95 c2                           	setne dl
0x401113:   e9 40 ff ff ff                     	jmp 0x401058 <pre_c_init+0x48>
; data inside code section at 0x401118 -- 0x401120
0x401118:   0f 1f 84 00 00 00 00 00                            |........        |
0x401120:   48 8d 0d 59 0a 00 00               	lea rcx, [rip + 0xa59]
0x401127:   e8 44 0a 00 00                     	call 0x401b70 <__mingw_setusermatherr>
0x40112c:   31 c0                              	xor eax, eax
0x40112e:   48 83 c4 28                        	add rsp, 0x28
0x401132:   c3                                 	ret 
0x401133:   83 78 74 0e                        	cmp dword ptr [rax + 0x74], 0xe
0x401137:   0f 86 1b ff ff ff                  	jbe 0x401058 <pre_c_init+0x48>
0x40113d:   44 8b 80 e8 00 00 00               	mov r8d, dword ptr [rax + 0xe8]
0x401144:   31 d2                              	xor edx, edx
0x401146:   45 85 c0                           	test r8d, r8d
0x401149:   0f 95 c2                           	setne dl
0x40114c:   e9 07 ff ff ff                     	jmp 0x401058 <pre_c_init+0x48>
; data inside code section at 0x401151 -- 0x401160
0x401151:   0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: pre_cpp_init at 0x401160 -- 0x4011a9
0x401160:   48 83 ec 38                        	sub rsp, 0x38
0x401164:   48 8b 05 e5 33 00 00               	mov rax, qword ptr [rip + 0x33e5]
0x40116b:   4c 8d 05 9e 5e 00 00               	lea r8, [rip + 0x5e9e]
0x401172:   48 8d 15 9f 5e 00 00               	lea rdx, [rip + 0x5e9f]
0x401179:   48 8d 0d a0 5e 00 00               	lea rcx, [rip + 0x5ea0]
0x401180:   8b 00                              	mov eax, dword ptr [rax]
0x401182:   89 05 78 5e 00 00                  	mov dword ptr [rip + 0x5e78], eax
0x401188:   48 8d 05 71 5e 00 00               	lea rax, [rip + 0x5e71]
0x40118f:   48 89 44 24 20                     	mov qword ptr [rsp + 0x20], rax
0x401194:   48 8b 05 75 33 00 00               	mov rax, qword ptr [rip + 0x3375]
0x40119b:   44 8b 08                           	mov r9d, dword ptr [rax]
0x40119e:   e8 ad 1b 00 00                     	call 0x402d50 <__getmainargs>
0x4011a3:   90                                 	nop 
0x4011a4:   48 83 c4 38                        	add rsp, 0x38
0x4011a8:   c3                                 	ret 
; data inside code section at 0x4011a9 -- 0x4011b0
0x4011a9:   0f 1f 80 00 00 00 00                               |.......         |
; function: __tmainCRTStartup at 0x4011b0 -- 0x4014cd
0x4011b0:   41 55                              	push r13
0x4011b2:   41 54                              	push r12
0x4011b4:   55                                 	push rbp
0x4011b5:   57                                 	push rdi
0x4011b6:   56                                 	push rsi
0x4011b7:   53                                 	push rbx
0x4011b8:   48 81 ec 98 00 00 00               	sub rsp, 0x98
0x4011bf:   31 c0                              	xor eax, eax
0x4011c1:   b9 0d 00 00 00                     	mov ecx, 0xd
0x4011c6:   48 8d 54 24 20                     	lea rdx, [rsp + 0x20]
0x4011cb:   48 89 d7                           	mov rdi, rdx
0x4011ce:   f3 48 ab                           	rep stosq qword ptr [rdi], rax
0x4011d1:   48 8b 3d 88 33 00 00               	mov rdi, qword ptr [rip + 0x3388]
0x4011d8:   44 8b 0f                           	mov r9d, dword ptr [rdi]
0x4011db:   45 85 c9                           	test r9d, r9d
0x4011de:   0f 85 ac 02 00 00                  	jne 0x401490 <__tmainCRTStartup+0x2e0>
0x4011e4:   65 48 8b 04 25 30 00 00 00         	mov rax, qword ptr gs:[0x30]
0x4011ed:   48 8b 1d 9c 32 00 00               	mov rbx, qword ptr [rip + 0x329c]
0x4011f4:   48 8b 70 08                        	mov rsi, qword ptr [rax + 8]
0x4011f8:   31 ed                              	xor ebp, ebp
0x4011fa:   4c 8b 25 7b 70 00 00               	mov r12, qword ptr [rip + 0x707b]
0x401201:   eb 11                              	jmp 0x401214 <__tmainCRTStartup+0x64>
0x401203:   48 39 c6                           	cmp rsi, rax
0x401206:   0f 84 25 02 00 00                  	je 0x401431 <__tmainCRTStartup+0x281>
0x40120c:   b9 e8 03 00 00                     	mov ecx, 0x3e8
0x401211:   41 ff d4                           	call r12 <Sleep>
0x401214:   48 89 e8                           	mov rax, rbp
0x401217:   f0 48 0f b1 33                     	lock cmpxchg qword ptr [rbx], rsi
0x40121c:   48 85 c0                           	test rax, rax
0x40121f:   75 e2                              	jne 0x401203 <__tmainCRTStartup+0x53>
0x401221:   48 8b 35 78 32 00 00               	mov rsi, qword ptr [rip + 0x3278]
0x401228:   31 ed                              	xor ebp, ebp
0x40122a:   8b 06                              	mov eax, dword ptr [rsi]
0x40122c:   83 f8 01                           	cmp eax, 1
0x40122f:   0f 84 13 02 00 00                  	je 0x401448 <__tmainCRTStartup+0x298>
0x401235:   8b 06                              	mov eax, dword ptr [rsi]
0x401237:   85 c0                              	test eax, eax
0x401239:   0f 84 61 02 00 00                  	je 0x4014a0 <__tmainCRTStartup+0x2f0>
0x40123f:   c7 05 bb 5d 00 00 01 00 00 00      	mov dword ptr [rip + 0x5dbb], 1
0x401249:   8b 06                              	mov eax, dword ptr [rsi]
0x40124b:   83 f8 01                           	cmp eax, 1
0x40124e:   0f 84 09 02 00 00                  	je 0x40145d <__tmainCRTStartup+0x2ad>
0x401254:   85 ed                              	test ebp, ebp
0x401256:   0f 84 24 02 00 00                  	je 0x401480 <__tmainCRTStartup+0x2d0>
0x40125c:   48 8b 05 bd 31 00 00               	mov rax, qword ptr [rip + 0x31bd]
0x401263:   48 8b 00                           	mov rax, qword ptr [rax]
0x401266:   48 85 c0                           	test rax, rax
0x401269:   74 0c                              	je 0x401277 <__tmainCRTStartup+0xc7>
0x40126b:   45 31 c0                           	xor r8d, r8d
0x40126e:   ba 02 00 00 00                     	mov edx, 2
0x401273:   31 c9                              	xor ecx, ecx
0x401275:   ff d0                              	call rax <__dyn_tls_init>
0x401277:   e8 04 0c 00 00                     	call 0x401e80 <_pei386_runtime_relocator>
0x40127c:   48 8d 0d 5d 11 00 00               	lea rcx, [rip + 0x115d]
0x401283:   ff 15 eb 6f 00 00                  	call qword ptr [rip + 0x6feb] <SetUnhandledExceptionFilter>
0x401289:   48 8b 15 f0 31 00 00               	mov rdx, qword ptr [rip + 0x31f0]
0x401290:   48 89 02                           	mov qword ptr [rdx], rax
0x401293:   e8 58 10 00 00                     	call 0x4022f0 <__mingw_init_ehandler>
0x401298:   48 8d 0d 61 fd ff ff               	lea rcx, [rip - 0x29f]
0x40129f:   e8 dc 1a 00 00                     	call 0x402d80 <mingw_set_invalid_parameter_handler>
0x4012a4:   e8 c7 09 00 00                     	call 0x401c70 <_fpreset>
0x4012a9:   48 8b 05 80 31 00 00               	mov rax, qword ptr [rip + 0x3180]
0x4012b0:   48 89 05 b1 66 00 00               	mov qword ptr [rip + 0x66b1], rax
0x4012b7:   48 8b 05 92 31 00 00               	mov rax, qword ptr [rip + 0x3192]
0x4012be:   48 8b 00                           	mov rax, qword ptr [rax]
0x4012c1:   48 8b 00                           	mov rax, qword ptr [rax]
0x4012c4:   48 85 c0                           	test rax, rax
0x4012c7:   74 5e                              	je 0x401327 <__tmainCRTStartup+0x177>
0x4012c9:   31 c9                              	xor ecx, ecx
0x4012cb:   eb 15                              	jmp 0x4012e2 <__tmainCRTStartup+0x132>
; data inside code section at 0x4012cd -- 0x4012d0
0x4012cd:   0f 1f 00                                           |...             |
0x4012d0:   84 d2                              	test dl, dl
0x4012d2:   74 2c                              	je 0x401300 <__tmainCRTStartup+0x150>
0x4012d4:   83 e1 01                           	and ecx, 1
0x4012d7:   74 27                              	je 0x401300 <__tmainCRTStartup+0x150>
0x4012d9:   b9 01 00 00 00                     	mov ecx, 1
0x4012de:   48 83 c0 01                        	add rax, 1
0x4012e2:   0f b6 10                           	movzx edx, byte ptr [rax]
0x4012e5:   80 fa 20                           	cmp dl, 0x20
0x4012e8:   7e e6                              	jle 0x4012d0 <__tmainCRTStartup+0x120>
0x4012ea:   41 89 c8                           	mov r8d, ecx
0x4012ed:   41 83 f0 01                        	xor r8d, 1
0x4012f1:   80 fa 22                           	cmp dl, 0x22
0x4012f4:   41 0f 44 c8                        	cmove ecx, r8d
0x4012f8:   eb e4                              	jmp 0x4012de <__tmainCRTStartup+0x12e>
; data inside code section at 0x4012fa -- 0x401300
0x4012fa:   66 0f 1f 44 00 00                                  |f..D..          |
0x401300:   84 d2                              	test dl, dl
0x401302:   75 11                              	jne 0x401315 <__tmainCRTStartup+0x165>
0x401304:   eb 1a                              	jmp 0x401320 <__tmainCRTStartup+0x170>
; data inside code section at 0x401306 -- 0x401310
0x401306:   66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x401310:   80 fa 20                           	cmp dl, 0x20
0x401313:   7f 0b                              	jg 0x401320 <__tmainCRTStartup+0x170>
0x401315:   48 83 c0 01                        	add rax, 1
0x401319:   0f b6 10                           	movzx edx, byte ptr [rax]
0x40131c:   84 d2                              	test dl, dl
0x40131e:   75 f0                              	jne 0x401310 <__tmainCRTStartup+0x160>
0x401320:   48 89 05 39 66 00 00               	mov qword ptr [rip + 0x6639], rax
0x401327:   44 8b 07                           	mov r8d, dword ptr [rdi]
0x40132a:   45 85 c0                           	test r8d, r8d
0x40132d:   74 19                              	je 0x401348 <__tmainCRTStartup+0x198>
0x40132f:   f6 44 24 5c 01                     	test byte ptr [rsp + 0x5c], 1
0x401334:   b8 0a 00 00 00                     	mov eax, 0xa
0x401339:   66 0f 45 44 24 60                  	cmovne ax, word ptr [rsp + 0x60]
0x40133f:   0f b7 c0                           	movzx eax, ax
0x401342:   89 05 b8 1c 00 00                  	mov dword ptr [rip + 0x1cb8], eax
0x401348:   44 8b 25 d1 5c 00 00               	mov r12d, dword ptr [rip + 0x5cd1]
0x40134f:   45 8d 6c 24 01                     	lea r13d, [r12 + 1]
0x401354:   4d 63 ed                           	movsxd r13, r13d
0x401357:   49 c1 e5 03                        	shl r13, 3
0x40135b:   4c 89 e9                           	mov rcx, r13
0x40135e:   e8 5d 19 00 00                     	call 0x402cc0 <malloc>
0x401363:   45 85 e4                           	test r12d, r12d
0x401366:   48 89 c5                           	mov rbp, rax
0x401369:   48 8b 3d a8 5c 00 00               	mov rdi, qword ptr [rip + 0x5ca8]
0x401370:   0f 8e 48 01 00 00                  	jle 0x4014be <__tmainCRTStartup+0x30e>
0x401376:   31 db                              	xor ebx, ebx
0x401378:   0f 1f 84 00 00 00 00 00            	nop dword ptr [rax + rax]
0x401380:   48 8b 0c df                        	mov rcx, qword ptr [rdi + rbx*8]
0x401384:   e8 17 19 00 00                     	call 0x402ca0 <strlen>
0x401389:   48 8d 70 01                        	lea rsi, [rax + 1]
0x40138d:   48 89 f1                           	mov rcx, rsi
0x401390:   e8 2b 19 00 00                     	call 0x402cc0 <malloc>
0x401395:   48 89 44 dd 00                     	mov qword ptr [rbp + rbx*8], rax
0x40139a:   48 8b 14 df                        	mov rdx, qword ptr [rdi + rbx*8]
0x40139e:   49 89 f0                           	mov r8, rsi
0x4013a1:   48 89 c1                           	mov rcx, rax
0x4013a4:   48 83 c3 01                        	add rbx, 1
0x4013a8:   e8 0b 19 00 00                     	call 0x402cb8 <memcpy>
0x4013ad:   41 39 dc                           	cmp r12d, ebx
0x4013b0:   7f ce                              	jg 0x401380 <__tmainCRTStartup+0x1d0>
0x4013b2:   49 83 ed 08                        	sub r13, 8
0x4013b6:   4a c7 44 2d 00 00 00 00 00         	mov qword ptr [rbp + r13], 0
0x4013bf:   48 89 2d 52 5c 00 00               	mov qword ptr [rip + 0x5c52], rbp
0x4013c6:   e8 85 04 00 00                     	call 0x401850 <__main>
0x4013cb:   48 8b 05 6e 30 00 00               	mov rax, qword ptr [rip + 0x306e]
0x4013d2:   48 8b 15 37 5c 00 00               	mov rdx, qword ptr [rip + 0x5c37]
0x4013d9:   8b 0d 41 5c 00 00                  	mov ecx, dword ptr [rip + 0x5c41]
0x4013df:   48 8b 00                           	mov rax, qword ptr [rax]
0x4013e2:   48 89 10                           	mov qword ptr [rax], rdx
0x4013e5:   4c 8b 05 24 5c 00 00               	mov r8, qword ptr [rip + 0x5c24]
0x4013ec:   48 8b 15 25 5c 00 00               	mov rdx, qword ptr [rip + 0x5c25]
0x4013f3:   e8 df 01 00 00                     	call 0x4015d7 <main>
0x4013f8:   8b 0d 0a 5c 00 00                  	mov ecx, dword ptr [rip + 0x5c0a]
0x4013fe:   89 05 08 5c 00 00                  	mov dword ptr [rip + 0x5c08], eax
0x401404:   85 c9                              	test ecx, ecx
0x401406:   0f 84 ba 00 00 00                  	je 0x4014c6 <__tmainCRTStartup+0x316>
0x40140c:   8b 15 f2 5b 00 00                  	mov edx, dword ptr [rip + 0x5bf2]
0x401412:   85 d2                              	test edx, edx
0x401414:   75 0b                              	jne 0x401421 <__tmainCRTStartup+0x271>
0x401416:   e8 05 19 00 00                     	call 0x402d20 <_cexit>
0x40141b:   8b 05 eb 5b 00 00                  	mov eax, dword ptr [rip + 0x5beb]
0x401421:   48 81 c4 98 00 00 00               	add rsp, 0x98
0x401428:   5b                                 	pop rbx
0x401429:   5e                                 	pop rsi
0x40142a:   5f                                 	pop rdi
0x40142b:   5d                                 	pop rbp
0x40142c:   41 5c                              	pop r12
0x40142e:   41 5d                              	pop r13
0x401430:   c3                                 	ret 
0x401431:   48 8b 35 68 30 00 00               	mov rsi, qword ptr [rip + 0x3068]
0x401438:   bd 01 00 00 00                     	mov ebp, 1
0x40143d:   8b 06                              	mov eax, dword ptr [rsi]
0x40143f:   83 f8 01                           	cmp eax, 1
0x401442:   0f 85 ed fd ff ff                  	jne 0x401235 <__tmainCRTStartup+0x85>
0x401448:   b9 1f 00 00 00                     	mov ecx, 0x1f
0x40144d:   e8 d6 18 00 00                     	call 0x402d28 <_amsg_exit>
0x401452:   8b 06                              	mov eax, dword ptr [rsi]
0x401454:   83 f8 01                           	cmp eax, 1
0x401457:   0f 85 f7 fd ff ff                  	jne 0x401254 <__tmainCRTStartup+0xa4>
0x40145d:   48 8b 15 7c 30 00 00               	mov rdx, qword ptr [rip + 0x307c]
0x401464:   48 8b 0d 65 30 00 00               	mov rcx, qword ptr [rip + 0x3065]
0x40146b:   e8 a8 18 00 00                     	call 0x402d18 <_initterm>
0x401470:   85 ed                              	test ebp, ebp
0x401472:   c7 06 02 00 00 00                  	mov dword ptr [rsi], 2
0x401478:   0f 85 de fd ff ff                  	jne 0x40125c <__tmainCRTStartup+0xac>
0x40147e:   66 90                              	nop 
0x401480:   31 c0                              	xor eax, eax
0x401482:   48 87 03                           	xchg qword ptr [rbx], rax
0x401485:   e9 d2 fd ff ff                     	jmp 0x40125c <__tmainCRTStartup+0xac>
; data inside code section at 0x40148a -- 0x401490
0x40148a:   66 0f 1f 44 00 00                                  |f..D..          |
0x401490:   48 89 d1                           	mov rcx, rdx
0x401493:   ff 15 8b 6d 00 00                  	call qword ptr [rip + 0x6d8b] <GetStartupInfoA>
0x401499:   e9 46 fd ff ff                     	jmp 0x4011e4 <__tmainCRTStartup+0x34>
; data inside code section at 0x40149e -- 0x4014a0
0x40149e:   66 90                                              |f.              |
0x4014a0:   48 8b 15 59 30 00 00               	mov rdx, qword ptr [rip + 0x3059]
0x4014a7:   48 8b 0d 42 30 00 00               	mov rcx, qword ptr [rip + 0x3042]
0x4014ae:   c7 06 01 00 00 00                  	mov dword ptr [rsi], 1
0x4014b4:   e8 5f 18 00 00                     	call 0x402d18 <_initterm>
0x4014b9:   e9 8b fd ff ff                     	jmp 0x401249 <__tmainCRTStartup+0x99>
0x4014be:   45 31 ed                           	xor r13d, r13d
0x4014c1:   e9 f0 fe ff ff                     	jmp 0x4013b6 <__tmainCRTStartup+0x206>
0x4014c6:   89 c1                              	mov ecx, eax
0x4014c8:   e8 1b 18 00 00                     	call 0x402ce8 <exit>
; data inside code section at 0x4014cd -- 0x4014d0
0x4014cd:   90 66 90                                           |.f.             |
; function: WinMainCRTStartup at 0x4014d0 -- 0x4014f2
0x4014d0:   48 83 ec 28                        	sub rsp, 0x28
0x4014d4:   48 8b 05 85 30 00 00               	mov rax, qword ptr [rip + 0x3085]
0x4014db:   c7 00 01 00 00 00                  	mov dword ptr [rax], 1
0x4014e1:   e8 aa 03 00 00                     	call 0x401890 <__security_init_cookie>
0x4014e6:   e8 c5 fc ff ff                     	call 0x4011b0 <__tmainCRTStartup>
0x4014eb:   90                                 	nop 
0x4014ec:   90                                 	nop 
0x4014ed:   48 83 c4 28                        	add rsp, 0x28
0x4014f1:   c3                                 	ret 
; data inside code section at 0x4014f2 -- 0x401500
0x4014f2:   0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: mainCRTStartup at 0x401500 -- 0x401522
0x401500:   48 83 ec 28                        	sub rsp, 0x28
0x401504:   48 8b 05 55 30 00 00               	mov rax, qword ptr [rip + 0x3055]
0x40150b:   c7 00 00 00 00 00                  	mov dword ptr [rax], 0
0x401511:   e8 7a 03 00 00                     	call 0x401890 <__security_init_cookie>
0x401516:   e8 95 fc ff ff                     	call 0x4011b0 <__tmainCRTStartup>
0x40151b:   90                                 	nop 
0x40151c:   90                                 	nop 
0x40151d:   48 83 c4 28                        	add rsp, 0x28
0x401521:   c3                                 	ret 
; data inside code section at 0x401522 -- 0x401530
0x401522:   90 90 90 90 90 90 90 90  90 90 90 90 90 90         |..............  |
; function: __gcc_register_frame at 0x401530 -- 0x401541
0x401530:   55                                 	push rbp
0x401531:   48 89 e5                           	mov rbp, rsp
0x401534:   48 8d 0d 15 00 00 00               	lea rcx, [rip + 0x15]
0x40153b:   5d                                 	pop rbp
0x40153c:   e9 3f 02 00 00                     	jmp 0x401780 <atexit>
; data inside code section at 0x401541 -- 0x401550
0x401541:   0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: __gcc_deregister_frame at 0x401550 -- 0x401556
0x401550:   55                                 	push rbp
0x401551:   48 89 e5                           	mov rbp, rsp
0x401554:   5d                                 	pop rbp
0x401555:   c3                                 	ret 
; data inside code section at 0x401556 -- 0x401560
0x401556:   90 90 90 90 90 90 90 90  90 90                     |..........      |
; function: analyze at 0x401560 -- 0x4015d7
0x401560:   55                                 	push rbp
0x401561:   48 89 e5                           	mov rbp, rsp
0x401564:   48 89 4d 10                        	mov qword ptr [rbp + 0x10], rcx
0x401568:   89 55 18                           	mov dword ptr [rbp + 0x18], edx
0x40156b:   8b 45 18                           	mov eax, dword ptr [rbp + 0x18]
0x40156e:   48 63 d0                           	movsxd rdx, eax
0x401571:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x401575:   48 01 d0                           	add rax, rdx
0x401578:   0f b6 00                           	movzx eax, byte ptr [rax]
0x40157b:   0f be c0                           	movsx eax, al
0x40157e:   c1 e0 18                           	shl eax, 0x18
0x401581:   89 c2                              	mov edx, eax
0x401583:   8b 45 18                           	mov eax, dword ptr [rbp + 0x18]
0x401586:   48 98                              	cdqe 
0x401588:   48 8d 48 02                        	lea rcx, [rax + 2]
0x40158c:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x401590:   48 01 c8                           	add rax, rcx
0x401593:   0f b6 00                           	movzx eax, byte ptr [rax]
0x401596:   0f be c0                           	movsx eax, al
0x401599:   c1 e0 10                           	shl eax, 0x10
0x40159c:   01 c0                              	add eax, eax
0x40159e:   01 c2                              	add edx, eax
0x4015a0:   8b 45 18                           	mov eax, dword ptr [rbp + 0x18]
0x4015a3:   48 98                              	cdqe 
0x4015a5:   48 8d 48 04                        	lea rcx, [rax + 4]
0x4015a9:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x4015ad:   48 01 c8                           	add rax, rcx
0x4015b0:   0f b6 00                           	movzx eax, byte ptr [rax]
0x4015b3:   0f be c0                           	movsx eax, al
0x4015b6:   c1 e0 08                           	shl eax, 8
0x4015b9:   01 c2                              	add edx, eax
0x4015bb:   8b 45 18                           	mov eax, dword ptr [rbp + 0x18]
0x4015be:   48 98                              	cdqe 
0x4015c0:   48 8d 48 06                        	lea rcx, [rax + 6]
0x4015c4:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x4015c8:   48 01 c8                           	add rax, rcx
0x4015cb:   0f b6 00                           	movzx eax, byte ptr [rax]
0x4015ce:   0f be c0                           	movsx eax, al
0x4015d1:   01 c0                              	add eax, eax
0x4015d3:   01 d0                              	add eax, edx
0x4015d5:   5d                                 	pop rbp
0x4015d6:   c3                                 	ret 
; function: main at 0x4015d7 -- 0x4016cb
0x4015d7:   55                                 	push rbp
0x4015d8:   48 89 e5                           	mov rbp, rsp
0x4015db:   48 83 ec 30                        	sub rsp, 0x30
0x4015df:   e8 6c 02 00 00                     	call 0x401850 <__main>
0x4015e4:   48 8d 0d 15 2a 00 00               	lea rcx, [rip + 0x2a15]
0x4015eb:   e8 c0 16 00 00                     	call 0x402cb0 <puts>
0x4015f0:   48 8d 0d 61 2a 00 00               	lea rcx, [rip + 0x2a61]
0x4015f7:   e8 b4 16 00 00                     	call 0x402cb0 <puts>
0x4015fc:   48 8b 05 d1 6c 00 00               	mov rax, qword ptr [rip + 0x6cd1]
0x401603:   ff d0                              	call rax <__iob_func>
0x401605:   49 89 c0                           	mov r8, rax
0x401608:   ba 80 00 00 00                     	mov edx, 0x80
0x40160d:   48 8d 0d 8c 1a 00 00               	lea rcx, [rip + 0x1a8c]
0x401614:   e8 c7 16 00 00                     	call 0x402ce0 <fgets>
0x401619:   48 8d 0d 80 1a 00 00               	lea rcx, [rip + 0x1a80]
0x401620:   e8 7b 16 00 00                     	call 0x402ca0 <strlen>
0x401625:   83 e8 01                           	sub eax, 1
0x401628:   89 45 f8                           	mov dword ptr [rbp - 8], eax
0x40162b:   8b 45 f8                           	mov eax, dword ptr [rbp - 8]
0x40162e:   48 63 d0                           	movsxd rdx, eax
0x401631:   48 8d 05 68 1a 00 00               	lea rax, [rip + 0x1a68]
0x401638:   c6 04 02 00                        	mov byte ptr [rdx + rax], 0
0x40163c:   83 7d f8 26                        	cmp dword ptr [rbp - 8], 0x26
0x401640:   74 16                              	je 0x401658 <main+0x81>
0x401642:   48 8d 0d 4f 2a 00 00               	lea rcx, [rip + 0x2a4f]
0x401649:   e8 62 16 00 00                     	call 0x402cb0 <puts>
0x40164e:   b9 01 00 00 00                     	mov ecx, 1
0x401653:   e8 90 16 00 00                     	call 0x402ce8 <exit>
0x401658:   c7 45 fc 00 00 00 00               	mov dword ptr [rbp - 4], 0
0x40165f:   eb 48                              	jmp 0x4016a9 <main+0xd2>
0x401661:   8b 45 fc                           	mov eax, dword ptr [rbp - 4]
0x401664:   89 c2                              	mov edx, eax
0x401666:   48 8d 0d 33 1a 00 00               	lea rcx, [rip + 0x1a33]
0x40166d:   e8 ee fe ff ff                     	call 0x401560 <analyze>
0x401672:   89 c1                              	mov ecx, eax
0x401674:   8b 45 fc                           	mov eax, dword ptr [rbp - 4]
0x401677:   48 98                              	cdqe 
0x401679:   48 8d 14 85 00 00 00 00            	lea rdx, [rax*4]
0x401681:   48 8d 05 98 19 00 00               	lea rax, [rip + 0x1998]
0x401688:   8b 04 02                           	mov eax, dword ptr [rdx + rax]
0x40168b:   39 c1                              	cmp ecx, eax
0x40168d:   74 16                              	je 0x4016a5 <main+0xce>
0x40168f:   48 8d 0d 3a 2a 00 00               	lea rcx, [rip + 0x2a3a]
0x401696:   e8 15 16 00 00                     	call 0x402cb0 <puts>
0x40169b:   b9 01 00 00 00                     	mov ecx, 1
0x4016a0:   e8 43 16 00 00                     	call 0x402ce8 <exit>
0x4016a5:   83 45 fc 01                        	add dword ptr [rbp - 4], 1
0x4016a9:   8b 45 f8                           	mov eax, dword ptr [rbp - 8]
0x4016ac:   83 e8 06                           	sub eax, 6
0x4016af:   39 45 fc                           	cmp dword ptr [rbp - 4], eax
0x4016b2:   7c ad                              	jl 0x401661 <main+0x8a>
0x4016b4:   48 8d 0d 77 2a 00 00               	lea rcx, [rip + 0x2a77]
0x4016bb:   e8 f0 15 00 00                     	call 0x402cb0 <puts>
0x4016c0:   b8 00 00 00 00                     	mov eax, 0
0x4016c5:   48 83 c4 30                        	add rsp, 0x30
0x4016c9:   5d                                 	pop rbp
0x4016ca:   c3                                 	ret 
; data inside code section at 0x4016cb -- 0x4016d0
0x4016cb:   90 90 90 90 90                                     |.....           |
; function: mingw_onexit at 0x4016d0 -- 0x40177d
0x4016d0:   53                                 	push rbx
0x4016d1:   48 83 ec 30                        	sub rsp, 0x30
0x4016d5:   48 89 cb                           	mov rbx, rcx
0x4016d8:   48 8b 0d 91 62 00 00               	mov rcx, qword ptr [rip + 0x6291]
0x4016df:   e8 9c 05 00 00                     	call 0x401c80 <_decode_pointer>
0x4016e4:   48 83 f8 ff                        	cmp rax, -1
0x4016e8:   48 89 44 24 20                     	mov qword ptr [rsp + 0x20], rax
0x4016ed:   74 76                              	je 0x401765 <mingw_onexit+0x95>
0x4016ef:   b9 08 00 00 00                     	mov ecx, 8
0x4016f4:   e8 17 16 00 00                     	call 0x402d10 <_lock>
0x4016f9:   48 8b 0d 70 62 00 00               	mov rcx, qword ptr [rip + 0x6270]
0x401700:   e8 7b 05 00 00                     	call 0x401c80 <_decode_pointer>
0x401705:   48 8b 0d 6c 62 00 00               	mov rcx, qword ptr [rip + 0x626c]
0x40170c:   48 89 44 24 20                     	mov qword ptr [rsp + 0x20], rax
0x401711:   e8 6a 05 00 00                     	call 0x401c80 <_decode_pointer>
0x401716:   48 8d 54 24 20                     	lea rdx, [rsp + 0x20]
0x40171b:   4c 8d 44 24 28                     	lea r8, [rsp + 0x28]
0x401720:   48 89 d9                           	mov rcx, rbx
0x401723:   48 89 44 24 28                     	mov qword ptr [rsp + 0x28], rax
0x401728:   e8 2b 16 00 00                     	call 0x402d58 <__dllonexit>
0x40172d:   48 8b 4c 24 20                     	mov rcx, qword ptr [rsp + 0x20]
0x401732:   48 89 c3                           	mov rbx, rax
0x401735:   e8 56 05 00 00                     	call 0x401c90 <_encode_pointer>
0x40173a:   48 8b 4c 24 28                     	mov rcx, qword ptr [rsp + 0x28]
0x40173f:   48 89 05 2a 62 00 00               	mov qword ptr [rip + 0x622a], rax
0x401746:   e8 45 05 00 00                     	call 0x401c90 <_encode_pointer>
0x40174b:   b9 08 00 00 00                     	mov ecx, 8
0x401750:   48 89 05 21 62 00 00               	mov qword ptr [rip + 0x6221], rax
0x401757:   e8 a4 15 00 00                     	call 0x402d00 <_unlock>
0x40175c:   48 89 d8                           	mov rax, rbx
0x40175f:   48 83 c4 30                        	add rsp, 0x30
0x401763:   5b                                 	pop rbx
0x401764:   c3                                 	ret 
0x401765:   48 8b 05 04 2d 00 00               	mov rax, qword ptr [rip + 0x2d04]
0x40176c:   48 89 d9                           	mov rcx, rbx
0x40176f:   ff 10                              	call qword ptr [rax] <_onexit>
0x401771:   48 89 c3                           	mov rbx, rax
0x401774:   48 89 d8                           	mov rax, rbx
0x401777:   48 83 c4 30                        	add rsp, 0x30
0x40177b:   5b                                 	pop rbx
0x40177c:   c3                                 	ret 
; data inside code section at 0x40177d -- 0x401780
0x40177d:   0f 1f 00                                           |...             |
; function: atexit at 0x401780 -- 0x401799
0x401780:   48 83 ec 28                        	sub rsp, 0x28
0x401784:   e8 47 ff ff ff                     	call 0x4016d0 <mingw_onexit>
0x401789:   48 85 c0                           	test rax, rax
0x40178c:   0f 94 c0                           	sete al
0x40178f:   0f b6 c0                           	movzx eax, al
0x401792:   f7 d8                              	neg eax
0x401794:   48 83 c4 28                        	add rsp, 0x28
0x401798:   c3                                 	ret 
; data inside code section at 0x401799 -- 0x4017a0
0x401799:   90 90 90 90 90 90 90                               |.......         |
; function: __do_global_dtors at 0x4017a0 -- 0x4017d5
0x4017a0:   48 83 ec 28                        	sub rsp, 0x28
0x4017a4:   48 8b 05 75 19 00 00               	mov rax, qword ptr [rip + 0x1975]
0x4017ab:   48 8b 00                           	mov rax, qword ptr [rax]
0x4017ae:   48 85 c0                           	test rax, rax
0x4017b1:   74 1d                              	je 0x4017d0 <__do_global_dtors+0x30>
0x4017b3:   ff d0                              	call rax
0x4017b5:   48 8b 05 64 19 00 00               	mov rax, qword ptr [rip + 0x1964]
0x4017bc:   48 8d 50 08                        	lea rdx, [rax + 8]
0x4017c0:   48 8b 40 08                        	mov rax, qword ptr [rax + 8]
0x4017c4:   48 89 15 55 19 00 00               	mov qword ptr [rip + 0x1955], rdx
0x4017cb:   48 85 c0                           	test rax, rax
0x4017ce:   75 e3                              	jne 0x4017b3 <__do_global_dtors+0x13>
0x4017d0:   48 83 c4 28                        	add rsp, 0x28
0x4017d4:   c3                                 	ret 
; data inside code section at 0x4017d5 -- 0x4017e0
0x4017d5:   90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: __do_global_ctors at 0x4017e0 -- 0x401846
0x4017e0:   56                                 	push rsi
0x4017e1:   53                                 	push rbx
0x4017e2:   48 83 ec 28                        	sub rsp, 0x28
0x4017e6:   48 8b 0d 03 2c 00 00               	mov rcx, qword ptr [rip + 0x2c03]
0x4017ed:   48 8b 11                           	mov rdx, qword ptr [rcx]
0x4017f0:   83 fa ff                           	cmp edx, -1
0x4017f3:   89 d0                              	mov eax, edx
0x4017f5:   74 39                              	je 0x401830 <__do_global_ctors+0x50>
0x4017f7:   85 c0                              	test eax, eax
0x4017f9:   74 20                              	je 0x40181b <__do_global_ctors+0x3b>
0x4017fb:   89 c2                              	mov edx, eax
0x4017fd:   83 e8 01                           	sub eax, 1
0x401800:   48 8d 1c d1                        	lea rbx, [rcx + rdx*8]
0x401804:   48 29 c2                           	sub rdx, rax
0x401807:   48 8d 74 d1 f8                     	lea rsi, [rcx + rdx*8 - 8]
0x40180c:   0f 1f 40 00                        	nop dword ptr [rax]
0x401810:   ff 13                              	call qword ptr [rbx]
0x401812:   48 83 eb 08                        	sub rbx, 8
0x401816:   48 39 f3                           	cmp rbx, rsi
0x401819:   75 f5                              	jne 0x401810 <__do_global_ctors+0x30>
0x40181b:   48 8d 0d 7e ff ff ff               	lea rcx, [rip - 0x82]
0x401822:   48 83 c4 28                        	add rsp, 0x28
0x401826:   5b                                 	pop rbx
0x401827:   5e                                 	pop rsi
0x401828:   e9 53 ff ff ff                     	jmp 0x401780 <atexit>
; data inside code section at 0x40182d -- 0x401830
0x40182d:   0f 1f 00                                           |...             |
0x401830:   31 c0                              	xor eax, eax
0x401832:   eb 02                              	jmp 0x401836 <__do_global_ctors+0x56>
0x401834:   89 d0                              	mov eax, edx
0x401836:   44 8d 40 01                        	lea r8d, [rax + 1]
0x40183a:   4a 83 3c c1 00                     	cmp qword ptr [rcx + r8*8], 0
0x40183f:   4c 89 c2                           	mov rdx, r8
0x401842:   75 f0                              	jne 0x401834 <__do_global_ctors+0x54>
0x401844:   eb b1                              	jmp 0x4017f7 <__do_global_ctors+0x17>
; data inside code section at 0x401846 -- 0x401850
0x401846:   66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: __main at 0x401850 -- 0x40186f
0x401850:   8b 05 da 57 00 00                  	mov eax, dword ptr [rip + 0x57da]
0x401856:   85 c0                              	test eax, eax
0x401858:   74 06                              	je 0x401860 <__main+0x10>
0x40185a:   f3 c3                              	ret 
; data inside code section at 0x40185c -- 0x401860
0x40185c:   0f 1f 40 00                                        |..@.            |
0x401860:   c7 05 c6 57 00 00 01 00 00 00      	mov dword ptr [rip + 0x57c6], 1
0x40186a:   e9 71 ff ff ff                     	jmp 0x4017e0 <__do_global_ctors>
; data inside code section at 0x40186f -- 0x401870
0x40186f:   90                                                 |.               |
; function: my_lconv_init at 0x401870 -- 0x401877
0x401870:   48 ff 25 65 6a 00 00               	jmp qword ptr [rip + 0x6a65] <__lconv_init>
; data inside code section at 0x401877 -- 0x401880
0x401877:   90 90 90 90 90 90 90 90  90                        |.........       |
; function: _setargv at 0x401880 -- 0x401883
0x401880:   31 c0                              	xor eax, eax
0x401882:   c3                                 	ret 
; data inside code section at 0x401883 -- 0x401890
0x401883:   90 90 90 90 90 90 90 90  90 90 90 90 90            |.............   |
; function: __security_init_cookie at 0x401890 -- 0x401966
0x401890:   41 54                              	push r12
0x401892:   55                                 	push rbp
0x401893:   57                                 	push rdi
0x401894:   56                                 	push rsi
0x401895:   53                                 	push rbx
0x401896:   48 83 ec 30                        	sub rsp, 0x30
0x40189a:   48 8b 1d df 18 00 00               	mov rbx, qword ptr [rip + 0x18df]
0x4018a1:   48 b8 32 a2 df 2d 99 2b 00 00      	movabs rax, 0x2b992ddfa232
0x4018ab:   48 c7 44 24 20 00 00 00 00         	mov qword ptr [rsp + 0x20], 0
0x4018b4:   48 39 c3                           	cmp rbx, rax
0x4018b7:   74 17                              	je 0x4018d0 <__security_init_cookie+0x40>
0x4018b9:   48 f7 d3                           	not rbx
0x4018bc:   48 89 1d cd 18 00 00               	mov qword ptr [rip + 0x18cd], rbx
0x4018c3:   48 83 c4 30                        	add rsp, 0x30
0x4018c7:   5b                                 	pop rbx
0x4018c8:   5e                                 	pop rsi
0x4018c9:   5f                                 	pop rdi
0x4018ca:   5d                                 	pop rbp
0x4018cb:   41 5c                              	pop r12
0x4018cd:   c3                                 	ret 
; data inside code section at 0x4018ce -- 0x4018d0
0x4018ce:   66 90                                              |f.              |
0x4018d0:   48 8d 4c 24 20                     	lea rcx, [rsp + 0x20]
0x4018d5:   ff 15 51 69 00 00                  	call qword ptr [rip + 0x6951] <GetSystemTimeAsFileTime>
0x4018db:   48 8b 7c 24 20                     	mov rdi, qword ptr [rsp + 0x20]
0x4018e0:   ff 15 26 69 00 00                  	call qword ptr [rip + 0x6926] <GetCurrentProcessId>
0x4018e6:   41 89 c4                           	mov r12d, eax
0x4018e9:   ff 15 25 69 00 00                  	call qword ptr [rip + 0x6925] <GetCurrentThreadId>
0x4018ef:   89 c5                              	mov ebp, eax
0x4018f1:   ff 15 3d 69 00 00                  	call qword ptr [rip + 0x693d] <GetTickCount>
0x4018f7:   48 8d 4c 24 28                     	lea rcx, [rsp + 0x28]
0x4018fc:   89 c6                              	mov esi, eax
0x4018fe:   ff 15 48 69 00 00                  	call qword ptr [rip + 0x6948] <QueryPerformanceCounter>
0x401904:   48 33 7c 24 28                     	xor rdi, qword ptr [rsp + 0x28]
0x401909:   44 89 e0                           	mov eax, r12d
0x40190c:   48 ba ff ff ff ff ff ff 00 00      	movabs rdx, 0xffffffffffff
0x401916:   48 31 f8                           	xor rax, rdi
0x401919:   89 ef                              	mov edi, ebp
0x40191b:   48 31 c7                           	xor rdi, rax
0x40191e:   89 f0                              	mov eax, esi
0x401920:   48 31 f8                           	xor rax, rdi
0x401923:   48 21 d0                           	and rax, rdx
0x401926:   48 39 d8                           	cmp rax, rbx
0x401929:   74 25                              	je 0x401950 <__security_init_cookie+0xc0>
0x40192b:   48 89 c2                           	mov rdx, rax
0x40192e:   48 f7 d2                           	not rdx
0x401931:   48 89 05 48 18 00 00               	mov qword ptr [rip + 0x1848], rax
0x401938:   48 89 15 51 18 00 00               	mov qword ptr [rip + 0x1851], rdx
0x40193f:   48 83 c4 30                        	add rsp, 0x30
0x401943:   5b                                 	pop rbx
0x401944:   5e                                 	pop rsi
0x401945:   5f                                 	pop rdi
0x401946:   5d                                 	pop rbp
0x401947:   41 5c                              	pop r12
0x401949:   c3                                 	ret 
; data inside code section at 0x40194a -- 0x401950
0x40194a:   66 0f 1f 44 00 00                                  |f..D..          |
0x401950:   48 ba cc 5d 20 d2 66 d4 ff ff      	movabs rdx, 0xffffd466d2205dcc
0x40195a:   48 b8 33 a2 df 2d 99 2b 00 00      	movabs rax, 0x2b992ddfa233
0x401964:   eb cb                              	jmp 0x401931 <__security_init_cookie+0xa1>
; data inside code section at 0x401966 -- 0x401970
0x401966:   66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: __report_gsfailure at 0x401970 -- 0x401a6b
0x401970:   55                                 	push rbp
0x401971:   56                                 	push rsi
0x401972:   53                                 	push rbx
0x401973:   48 89 e5                           	mov rbp, rsp
0x401976:   48 83 ec 70                        	sub rsp, 0x70
0x40197a:   48 89 ce                           	mov rsi, rcx
0x40197d:   48 8d 0d dc 56 00 00               	lea rcx, [rip + 0x56dc]
0x401984:   ff 15 d2 68 00 00                  	call qword ptr [rip + 0x68d2] <RtlCaptureContext>
0x40198a:   48 8b 1d c7 57 00 00               	mov rbx, qword ptr [rip + 0x57c7]
0x401991:   45 31 c0                           	xor r8d, r8d
0x401994:   48 8d 55 d8                        	lea rdx, [rbp - 0x28]
0x401998:   48 89 d9                           	mov rcx, rbx
0x40199b:   ff 15 c3 68 00 00                  	call qword ptr [rip + 0x68c3] <RtlLookupFunctionEntry>
0x4019a1:   48 85 c0                           	test rax, rax
0x4019a4:   49 89 c1                           	mov r9, rax
0x4019a7:   0f 84 a3 00 00 00                  	je 0x401a50 <__report_gsfailure+0xe0>
0x4019ad:   48 8d 45 e0                        	lea rax, [rbp - 0x20]
0x4019b1:   48 c7 44 24 38 00 00 00 00         	mov qword ptr [rsp + 0x38], 0
0x4019ba:   49 89 d8                           	mov r8, rbx
0x4019bd:   48 8b 55 d8                        	mov rdx, qword ptr [rbp - 0x28]
0x4019c1:   31 c9                              	xor ecx, ecx
0x4019c3:   48 89 44 24 30                     	mov qword ptr [rsp + 0x30], rax
0x4019c8:   48 8d 45 e8                        	lea rax, [rbp - 0x18]
0x4019cc:   48 89 44 24 28                     	mov qword ptr [rsp + 0x28], rax
0x4019d1:   48 8d 05 88 56 00 00               	lea rax, [rip + 0x5688]
0x4019d8:   48 89 44 24 20                     	mov qword ptr [rsp + 0x20], rax
0x4019dd:   ff 15 89 68 00 00                  	call qword ptr [rip + 0x6889] <RtlVirtualUnwind>
0x4019e3:   48 8b 05 6e 57 00 00               	mov rax, qword ptr [rip + 0x576e]
0x4019ea:   31 c9                              	xor ecx, ecx
0x4019ec:   48 89 35 ed 56 00 00               	mov qword ptr [rip + 0x56ed], rsi
0x4019f3:   c7 05 43 5b 00 00 09 04 00 c0      	mov dword ptr [rip + 0x5b43], 0xc0000409
0x4019fd:   c7 05 3d 5b 00 00 01 00 00 00      	mov dword ptr [rip + 0x5b3d], 1
0x401a07:   48 89 05 42 5b 00 00               	mov qword ptr [rip + 0x5b42], rax
0x401a0e:   48 8b 05 6b 17 00 00               	mov rax, qword ptr [rip + 0x176b]
0x401a15:   48 89 45 f0                        	mov qword ptr [rbp - 0x10], rax
0x401a19:   48 8b 05 70 17 00 00               	mov rax, qword ptr [rip + 0x1770]
0x401a20:   48 89 45 f8                        	mov qword ptr [rbp - 8], rax
0x401a24:   ff 15 4a 68 00 00                  	call qword ptr [rip + 0x684a] <SetUnhandledExceptionFilter>
0x401a2a:   48 8d 0d 1f 27 00 00               	lea rcx, [rip + 0x271f]
0x401a31:   ff 15 5d 68 00 00                  	call qword ptr [rip + 0x685d] <UnhandledExceptionFilter>
0x401a37:   ff 15 c7 67 00 00                  	call qword ptr [rip + 0x67c7] <GetCurrentProcess>
0x401a3d:   ba 09 04 00 c0                     	mov edx, 0xc0000409
0x401a42:   48 89 c1                           	mov rcx, rax
0x401a45:   ff 15 39 68 00 00                  	call qword ptr [rip + 0x6839] <TerminateProcess>
0x401a4b:   e8 a8 12 00 00                     	call 0x402cf8 <abort>
0x401a50:   48 8b 45 18                        	mov rax, qword ptr [rbp + 0x18]
0x401a54:   48 89 05 fd 56 00 00               	mov qword ptr [rip + 0x56fd], rax
0x401a5b:   48 8d 45 08                        	lea rax, [rbp + 8]
0x401a5f:   48 89 05 92 56 00 00               	mov qword ptr [rip + 0x5692], rax
0x401a66:   e9 78 ff ff ff                     	jmp 0x4019e3 <__report_gsfailure+0x73>
; data inside code section at 0x401a6b -- 0x401a70
0x401a6b:   90 90 90 90 90                                     |.....           |
; function: __dyn_tls_dtor at 0x401a70 -- 0x401a9f
0x401a70:   48 83 ec 28                        	sub rsp, 0x28
0x401a74:   83 fa 03                           	cmp edx, 3
0x401a77:   74 17                              	je 0x401a90 <__dyn_tls_dtor+0x20>
0x401a79:   85 d2                              	test edx, edx
0x401a7b:   74 13                              	je 0x401a90 <__dyn_tls_dtor+0x20>
0x401a7d:   b8 01 00 00 00                     	mov eax, 1
0x401a82:   48 83 c4 28                        	add rsp, 0x28
0x401a86:   c3                                 	ret 
; data inside code section at 0x401a87 -- 0x401a90
0x401a87:   66 0f 1f 84 00 00 00 00  00                        |f........       |
0x401a90:   e8 bb 0c 00 00                     	call 0x402750 <__mingw_TLScallback>
0x401a95:   b8 01 00 00 00                     	mov eax, 1
0x401a9a:   48 83 c4 28                        	add rsp, 0x28
0x401a9e:   c3                                 	ret 
; data inside code section at 0x401a9f -- 0x401aa0
0x401a9f:   90                                                 |.               |
; function: __dyn_tls_init at 0x401aa0 -- 0x401b09
0x401aa0:   56                                 	push rsi
0x401aa1:   53                                 	push rbx
0x401aa2:   48 83 ec 28                        	sub rsp, 0x28
0x401aa6:   48 8b 05 23 29 00 00               	mov rax, qword ptr [rip + 0x2923]
0x401aad:   83 38 02                           	cmp dword ptr [rax], 2
0x401ab0:   74 06                              	je 0x401ab8 <__dyn_tls_init+0x18>
0x401ab2:   c7 00 02 00 00 00                  	mov dword ptr [rax], 2
0x401ab8:   83 fa 02                           	cmp edx, 2
0x401abb:   74 13                              	je 0x401ad0 <__dyn_tls_init+0x30>
0x401abd:   83 fa 01                           	cmp edx, 1
0x401ac0:   74 40                              	je 0x401b02 <__dyn_tls_init+0x62>
0x401ac2:   b8 01 00 00 00                     	mov eax, 1
0x401ac7:   48 83 c4 28                        	add rsp, 0x28
0x401acb:   5b                                 	pop rbx
0x401acc:   5e                                 	pop rsi
0x401acd:   c3                                 	ret 
; data inside code section at 0x401ace -- 0x401ad0
0x401ace:   66 90                                              |f.              |
0x401ad0:   48 8d 1d 89 75 00 00               	lea rbx, [rip + 0x7589]
0x401ad7:   48 8d 35 82 75 00 00               	lea rsi, [rip + 0x7582]
0x401ade:   48 39 de                           	cmp rsi, rbx
0x401ae1:   74 df                              	je 0x401ac2 <__dyn_tls_init+0x22>
0x401ae3:   48 8b 03                           	mov rax, qword ptr [rbx]
0x401ae6:   48 85 c0                           	test rax, rax
0x401ae9:   74 02                              	je 0x401aed <__dyn_tls_init+0x4d>
0x401aeb:   ff d0                              	call rax
0x401aed:   48 83 c3 08                        	add rbx, 8
0x401af1:   48 39 de                           	cmp rsi, rbx
0x401af4:   75 ed                              	jne 0x401ae3 <__dyn_tls_init+0x43>
0x401af6:   b8 01 00 00 00                     	mov eax, 1
0x401afb:   48 83 c4 28                        	add rsp, 0x28
0x401aff:   5b                                 	pop rbx
0x401b00:   5e                                 	pop rsi
0x401b01:   c3                                 	ret 
0x401b02:   e8 49 0c 00 00                     	call 0x402750 <__mingw_TLScallback>
0x401b07:   eb b9                              	jmp 0x401ac2 <__dyn_tls_init+0x22>
; data inside code section at 0x401b09 -- 0x401b10
0x401b09:   0f 1f 80 00 00 00 00                               |.......         |
; function: __tlregdtor at 0x401b10 -- 0x401b13
0x401b10:   31 c0                              	xor eax, eax
0x401b12:   c3                                 	ret 
; data inside code section at 0x401b13 -- 0x401b20
0x401b13:   90 90 90 90 90 90 90 90  90 90 90 90 90            |.............   |
; function: __mingw_raise_matherr at 0x401b20 -- 0x401b61
0x401b20:   48 83 ec 58                        	sub rsp, 0x58
0x401b24:   48 8b 05 d5 5a 00 00               	mov rax, qword ptr [rip + 0x5ad5]
0x401b2b:   48 85 c0                           	test rax, rax
0x401b2e:   74 2c                              	je 0x401b5c <__mingw_raise_matherr+0x3c>
0x401b30:   f2 0f 10 84 24 80 00 00 00         	movsd xmm0, qword ptr [rsp + 0x80]
0x401b39:   89 4c 24 20                        	mov dword ptr [rsp + 0x20], ecx
0x401b3d:   48 8d 4c 24 20                     	lea rcx, [rsp + 0x20]
0x401b42:   48 89 54 24 28                     	mov qword ptr [rsp + 0x28], rdx
0x401b47:   f2 0f 11 54 24 30                  	movsd qword ptr [rsp + 0x30], xmm2
0x401b4d:   f2 0f 11 5c 24 38                  	movsd qword ptr [rsp + 0x38], xmm3
0x401b53:   f2 0f 11 44 24 40                  	movsd qword ptr [rsp + 0x40], xmm0
0x401b59:   ff d0                              	call rax
0x401b5b:   90                                 	nop 
0x401b5c:   48 83 c4 58                        	add rsp, 0x58
0x401b60:   c3                                 	ret 
; data inside code section at 0x401b61 -- 0x401b70
0x401b61:   0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: __mingw_setusermatherr at 0x401b70 -- 0x401b7c
0x401b70:   48 89 0d 89 5a 00 00               	mov qword ptr [rip + 0x5a89], rcx
0x401b77:   e9 b4 11 00 00                     	jmp 0x402d30 <__setusermatherr>
; data inside code section at 0x401b7c -- 0x401b80
0x401b7c:   0f 1f 40 00                                        |..@.            |
; function: _matherr at 0x401b80 -- 0x401c6c
0x401b80:   56                                 	push rsi
0x401b81:   53                                 	push rbx
0x401b82:   48 83 ec 78                        	sub rsp, 0x78
0x401b86:   0f 29 74 24 40                     	movaps xmmword ptr [rsp + 0x40], xmm6
0x401b8b:   0f 29 7c 24 50                     	movaps xmmword ptr [rsp + 0x50], xmm7
0x401b90:   44 0f 29 44 24 60                  	movaps xmmword ptr [rsp + 0x60], xmm8
0x401b96:   83 39 06                           	cmp dword ptr [rcx], 6
0x401b99:   0f 87 c1 00 00 00                  	ja 0x401c60 <_matherr+0xe0>
0x401b9f:   8b 01                              	mov eax, dword ptr [rcx]
0x401ba1:   48 8d 15 ec 26 00 00               	lea rdx, [rip + 0x26ec]
0x401ba8:   48 63 04 82                        	movsxd rax, dword ptr [rdx + rax*4]
0x401bac:   48 01 d0                           	add rax, rdx
0x401baf:   ff e0                              	jmp rax
0x401bb1:   48 8d 1d b8 25 00 00               	lea rbx, [rip + 0x25b8]
0x401bb8:   f2 44 0f 10 41 20                  	movsd xmm8, qword ptr [rcx + 0x20]
0x401bbe:   48 8b 71 08                        	mov rsi, qword ptr [rcx + 8]
0x401bc2:   f2 0f 10 79 18                     	movsd xmm7, qword ptr [rcx + 0x18]
0x401bc7:   f2 0f 10 71 10                     	movsd xmm6, qword ptr [rcx + 0x10]
0x401bcc:   e8 77 11 00 00                     	call 0x402d48 <__iob_func>
0x401bd1:   f2 44 0f 11 44 24 30               	movsd qword ptr [rsp + 0x30], xmm8
0x401bd8:   48 8d 48 60                        	lea rcx, [rax + 0x60]
0x401bdc:   48 8d 15 85 26 00 00               	lea rdx, [rip + 0x2685]
0x401be3:   f2 0f 11 7c 24 28                  	movsd qword ptr [rsp + 0x28], xmm7
0x401be9:   49 89 f1                           	mov r9, rsi
0x401bec:   49 89 d8                           	mov r8, rbx
0x401bef:   f2 0f 11 74 24 20                  	movsd qword ptr [rsp + 0x20], xmm6
0x401bf5:   e8 de 10 00 00                     	call 0x402cd8 <fprintf>
0x401bfa:   90                                 	nop 
0x401bfb:   0f 28 74 24 40                     	movaps xmm6, xmmword ptr [rsp + 0x40]
0x401c00:   31 c0                              	xor eax, eax
0x401c02:   0f 28 7c 24 50                     	movaps xmm7, xmmword ptr [rsp + 0x50]
0x401c07:   44 0f 28 44 24 60                  	movaps xmm8, xmmword ptr [rsp + 0x60]
0x401c0d:   48 83 c4 78                        	add rsp, 0x78
0x401c11:   5b                                 	pop rbx
0x401c12:   5e                                 	pop rsi
0x401c13:   c3                                 	ret 
0x401c14:   48 8d 1d 74 25 00 00               	lea rbx, [rip + 0x2574]
0x401c1b:   eb 9b                              	jmp 0x401bb8 <_matherr+0x38>
; data inside code section at 0x401c1d -- 0x401c20
0x401c1d:   0f 1f 00                                           |...             |
0x401c20:   48 8d 1d 89 25 00 00               	lea rbx, [rip + 0x2589]
0x401c27:   eb 8f                              	jmp 0x401bb8 <_matherr+0x38>
; data inside code section at 0x401c29 -- 0x401c30
0x401c29:   0f 1f 80 00 00 00 00                               |.......         |
0x401c30:   48 8d 1d e9 25 00 00               	lea rbx, [rip + 0x25e9]
0x401c37:   e9 7c ff ff ff                     	jmp 0x401bb8 <_matherr+0x38>
; data inside code section at 0x401c3c -- 0x401c40
0x401c3c:   0f 1f 40 00                                        |..@.            |
0x401c40:   48 8d 1d b1 25 00 00               	lea rbx, [rip + 0x25b1]
0x401c47:   e9 6c ff ff ff                     	jmp 0x401bb8 <_matherr+0x38>
; data inside code section at 0x401c4c -- 0x401c50
0x401c4c:   0f 1f 40 00                                        |..@.            |
0x401c50:   48 8d 1d 79 25 00 00               	lea rbx, [rip + 0x2579]
0x401c57:   e9 5c ff ff ff                     	jmp 0x401bb8 <_matherr+0x38>
; data inside code section at 0x401c5c -- 0x401c60
0x401c5c:   0f 1f 40 00                                        |..@.            |
0x401c60:   48 8d 1d ef 25 00 00               	lea rbx, [rip + 0x25ef]
0x401c67:   e9 4c ff ff ff                     	jmp 0x401bb8 <_matherr+0x38>
; data inside code section at 0x401c6c -- 0x401c70
0x401c6c:   90 90 90 90                                        |....            |
; function: _fpreset at 0x401c70 -- 0x401c73
0x401c70:   db e3                              	fninit 
0x401c72:   c3                                 	ret 
; data inside code section at 0x401c73 -- 0x401c80
0x401c73:   90 90 90 90 90 90 90 90  90 90 90 90 90            |.............   |
; function: _decode_pointer at 0x401c80 -- 0x401c84
0x401c80:   48 89 c8                           	mov rax, rcx
0x401c83:   c3                                 	ret 
; data inside code section at 0x401c84 -- 0x401c90
0x401c84:   66 90 66 2e 0f 1f 84 00  00 00 00 00               |f.f.........    |
; function: _encode_pointer at 0x401c90 -- 0x401c94
0x401c90:   48 89 c8                           	mov rax, rcx
0x401c93:   c3                                 	ret 
; data inside code section at 0x401c94 -- 0x401ca0
0x401c94:   90 90 90 90 90 90 90 90  90 90 90 90               |............    |
; function: __report_error at 0x401ca0 -- 0x401d00
0x401ca0:   56                                 	push rsi
0x401ca1:   53                                 	push rbx
0x401ca2:   48 83 ec 38                        	sub rsp, 0x38
0x401ca6:   48 8d 44 24 58                     	lea rax, [rsp + 0x58]
0x401cab:   48 89 cb                           	mov rbx, rcx
0x401cae:   48 89 54 24 58                     	mov qword ptr [rsp + 0x58], rdx
0x401cb3:   4c 89 44 24 60                     	mov qword ptr [rsp + 0x60], r8
0x401cb8:   4c 89 4c 24 68                     	mov qword ptr [rsp + 0x68], r9
0x401cbd:   48 89 44 24 28                     	mov qword ptr [rsp + 0x28], rax
0x401cc2:   e8 81 10 00 00                     	call 0x402d48 <__iob_func>
0x401cc7:   48 8d 0d e2 25 00 00               	lea rcx, [rip + 0x25e2]
0x401cce:   4c 8d 48 60                        	lea r9, [rax + 0x60]
0x401cd2:   41 b8 1b 00 00 00                  	mov r8d, 0x1b
0x401cd8:   ba 01 00 00 00                     	mov edx, 1
0x401cdd:   e8 e6 0f 00 00                     	call 0x402cc8 <fwrite>
0x401ce2:   48 8b 74 24 28                     	mov rsi, qword ptr [rsp + 0x28]
0x401ce7:   e8 5c 10 00 00                     	call 0x402d48 <__iob_func>
0x401cec:   48 8d 48 60                        	lea rcx, [rax + 0x60]
0x401cf0:   48 89 da                           	mov rdx, rbx
0x401cf3:   49 89 f0                           	mov r8, rsi
0x401cf6:   e8 95 0f 00 00                     	call 0x402c90 <vfprintf>
0x401cfb:   e8 f8 0f 00 00                     	call 0x402cf8 <abort>
; data inside code section at 0x401d00 -- 0x401d10
0x401d00:   90 0f 1f 44 00 00 66 2e  0f 1f 84 00 00 00 00 00   |...D..f.........|
; function: __write_memory.part.0 at 0x401d10 -- 0x401e77
0x401d10:   41 55                              	push r13
0x401d12:   41 54                              	push r12
0x401d14:   55                                 	push rbp
0x401d15:   57                                 	push rdi
0x401d16:   56                                 	push rsi
0x401d17:   53                                 	push rbx
0x401d18:   48 83 ec 58                        	sub rsp, 0x58
0x401d1c:   48 89 ce                           	mov rsi, rcx
0x401d1f:   8b 0d ff 58 00 00                  	mov ecx, dword ptr [rip + 0x58ff]
0x401d25:   48 89 d7                           	mov rdi, rdx
0x401d28:   4c 89 c5                           	mov rbp, r8
0x401d2b:   85 c9                              	test ecx, ecx
0x401d2d:   0f 8e fd 00 00 00                  	jle 0x401e30 <__write_memory.part.0+0x120>
0x401d33:   48 8b 05 ee 58 00 00               	mov rax, qword ptr [rip + 0x58ee]
0x401d3a:   31 db                              	xor ebx, ebx
0x401d3c:   48 83 c0 18                        	add rax, 0x18
0x401d40:   48 8b 10                           	mov rdx, qword ptr [rax]
0x401d43:   48 39 d6                           	cmp rsi, rdx
0x401d46:   72 14                              	jb 0x401d5c <__write_memory.part.0+0x4c>
0x401d48:   4c 8b 40 08                        	mov r8, qword ptr [rax + 8]
0x401d4c:   45 8b 40 08                        	mov r8d, dword ptr [r8 + 8]
0x401d50:   4c 01 c2                           	add rdx, r8
0x401d53:   48 39 d6                           	cmp rsi, rdx
0x401d56:   0f 82 ba 00 00 00                  	jb 0x401e16 <__write_memory.part.0+0x106>
0x401d5c:   83 c3 01                           	add ebx, 1
0x401d5f:   48 83 c0 28                        	add rax, 0x28
0x401d63:   39 cb                              	cmp ebx, ecx
0x401d65:   75 d9                              	jne 0x401d40 <__write_memory.part.0+0x30>
0x401d67:   48 89 f1                           	mov rcx, rsi
0x401d6a:   e8 e1 0b 00 00                     	call 0x402950 <__mingw_GetSectionForAddress>
0x401d6f:   48 85 c0                           	test rax, rax
0x401d72:   49 89 c4                           	mov r12, rax
0x401d75:   0f 84 ed 00 00 00                  	je 0x401e68 <__write_memory.part.0+0x158>
0x401d7b:   48 63 db                           	movsxd rbx, ebx
0x401d7e:   48 8d 1c 9b                        	lea rbx, [rbx + rbx*4]
0x401d82:   48 c1 e3 03                        	shl rbx, 3
0x401d86:   49 89 dd                           	mov r13, rbx
0x401d89:   4c 03 2d 98 58 00 00               	add r13, qword ptr [rip + 0x5898]
0x401d90:   49 89 45 20                        	mov qword ptr [r13 + 0x20], rax
0x401d94:   41 c7 45 00 00 00 00 00            	mov dword ptr [r13], 0
0x401d9c:   e8 ff 0c 00 00                     	call 0x402aa0 <_GetPEImageBase>
0x401da1:   41 8b 54 24 0c                     	mov edx, dword ptr [r12 + 0xc]
0x401da6:   41 b8 30 00 00 00                  	mov r8d, 0x30
0x401dac:   48 01 d0                           	add rax, rdx
0x401daf:   48 8d 54 24 20                     	lea rdx, [rsp + 0x20]
0x401db4:   49 89 45 18                        	mov qword ptr [r13 + 0x18], rax
0x401db8:   48 8b 05 69 58 00 00               	mov rax, qword ptr [rip + 0x5869]
0x401dbf:   48 8b 4c 18 18                     	mov rcx, qword ptr [rax + rbx + 0x18]
0x401dc4:   ff 15 da 64 00 00                  	call qword ptr [rip + 0x64da] <VirtualQuery>
0x401dca:   48 85 c0                           	test rax, rax
0x401dcd:   74 7c                              	je 0x401e4b <__write_memory.part.0+0x13b>
0x401dcf:   8b 44 24 44                        	mov eax, dword ptr [rsp + 0x44]
0x401dd3:   8d 50 fc                           	lea edx, [rax - 4]
0x401dd6:   83 e2 fb                           	and edx, 0xfffffffb
0x401dd9:   74 34                              	je 0x401e0f <__write_memory.part.0+0xff>
0x401ddb:   83 e8 40                           	sub eax, 0x40
0x401dde:   83 e0 bf                           	and eax, 0xffffffbf
0x401de1:   74 2c                              	je 0x401e0f <__write_memory.part.0+0xff>
0x401de3:   48 03 1d 3e 58 00 00               	add rbx, qword ptr [rip + 0x583e]
0x401dea:   48 8b 4c 24 20                     	mov rcx, qword ptr [rsp + 0x20]
0x401def:   41 b8 40 00 00 00                  	mov r8d, 0x40
0x401df5:   48 8b 54 24 38                     	mov rdx, qword ptr [rsp + 0x38]
0x401dfa:   49 89 d9                           	mov r9, rbx
0x401dfd:   48 89 4b 08                        	mov qword ptr [rbx + 8], rcx
0x401e01:   48 89 53 10                        	mov qword ptr [rbx + 0x10], rdx
0x401e05:   ff 15 91 64 00 00                  	call qword ptr [rip + 0x6491] <VirtualProtect>
0x401e0b:   85 c0                              	test eax, eax
0x401e0d:   74 28                              	je 0x401e37 <__write_memory.part.0+0x127>
0x401e0f:   83 05 0e 58 00 00 01               	add dword ptr [rip + 0x580e], 1
0x401e16:   49 89 e8                           	mov r8, rbp
0x401e19:   48 89 fa                           	mov rdx, rdi
0x401e1c:   48 89 f1                           	mov rcx, rsi
0x401e1f:   48 83 c4 58                        	add rsp, 0x58
0x401e23:   5b                                 	pop rbx
0x401e24:   5e                                 	pop rsi
0x401e25:   5f                                 	pop rdi
0x401e26:   5d                                 	pop rbp
0x401e27:   41 5c                              	pop r12
0x401e29:   41 5d                              	pop r13
0x401e2b:   e9 88 0e 00 00                     	jmp 0x402cb8 <memcpy>
0x401e30:   31 db                              	xor ebx, ebx
0x401e32:   e9 30 ff ff ff                     	jmp 0x401d67 <__write_memory.part.0+0x57>
0x401e37:   ff 15 df 63 00 00                  	call qword ptr [rip + 0x63df] <GetLastError>
0x401e3d:   48 8d 0d e4 24 00 00               	lea rcx, [rip + 0x24e4]
0x401e44:   89 c2                              	mov edx, eax
0x401e46:   e8 55 fe ff ff                     	call 0x401ca0 <__report_error>
0x401e4b:   48 8b 05 d6 57 00 00               	mov rax, qword ptr [rip + 0x57d6]
0x401e52:   41 8b 54 24 08                     	mov edx, dword ptr [r12 + 8]
0x401e57:   48 8d 0d 92 24 00 00               	lea rcx, [rip + 0x2492]
0x401e5e:   4c 8b 44 18 18                     	mov r8, qword ptr [rax + rbx + 0x18]
0x401e63:   e8 38 fe ff ff                     	call 0x401ca0 <__report_error>
0x401e68:   48 8d 0d 61 24 00 00               	lea rcx, [rip + 0x2461]
0x401e6f:   48 89 f2                           	mov rdx, rsi
0x401e72:   e8 29 fe ff ff                     	call 0x401ca0 <__report_error>
; data inside code section at 0x401e77 -- 0x401e80
0x401e77:   90 0f 1f 84 00 00 00 00  00                        |.........       |
; function: _pei386_runtime_relocator at 0x401e80 -- 0x40214a
0x401e80:   55                                 	push rbp
0x401e81:   41 57                              	push r15
0x401e83:   41 56                              	push r14
0x401e85:   41 55                              	push r13
0x401e87:   41 54                              	push r12
0x401e89:   57                                 	push rdi
0x401e8a:   56                                 	push rsi
0x401e8b:   53                                 	push rbx
0x401e8c:   48 83 ec 38                        	sub rsp, 0x38
0x401e90:   48 8d ac 24 80 00 00 00            	lea rbp, [rsp + 0x80]
0x401e98:   8b 1d 82 57 00 00                  	mov ebx, dword ptr [rip + 0x5782]
0x401e9e:   85 db                              	test ebx, ebx
0x401ea0:   74 11                              	je 0x401eb3 <_pei386_runtime_relocator+0x33>
0x401ea2:   48 8d 65 b8                        	lea rsp, [rbp - 0x48]
0x401ea6:   5b                                 	pop rbx
0x401ea7:   5e                                 	pop rsi
0x401ea8:   5f                                 	pop rdi
0x401ea9:   41 5c                              	pop r12
0x401eab:   41 5d                              	pop r13
0x401ead:   41 5e                              	pop r14
0x401eaf:   41 5f                              	pop r15
0x401eb1:   5d                                 	pop rbp
0x401eb2:   c3                                 	ret 
0x401eb3:   c7 05 63 57 00 00 01 00 00 00      	mov dword ptr [rip + 0x5763], 1
0x401ebd:   e8 1e 0b 00 00                     	call 0x4029e0 <__mingw_GetSectionCount>
0x401ec2:   48 98                              	cdqe 
0x401ec4:   48 8d 04 80                        	lea rax, [rax + rax*4]
0x401ec8:   48 8d 04 c5 1e 00 00 00            	lea rax, [rax*8 + 0x1e]
0x401ed0:   48 83 e0 f0                        	and rax, 0xfffffffffffffff0
0x401ed4:   e8 77 0d 00 00                     	call 0x402c50 <___chkstk_ms>
0x401ed9:   4c 8b 25 20 25 00 00               	mov r12, qword ptr [rip + 0x2520]
0x401ee0:   48 8b 35 29 25 00 00               	mov rsi, qword ptr [rip + 0x2529]
0x401ee7:   48 29 c4                           	sub rsp, rax
0x401eea:   c7 05 30 57 00 00 00 00 00 00      	mov dword ptr [rip + 0x5730], 0
0x401ef4:   48 8d 44 24 20                     	lea rax, [rsp + 0x20]
0x401ef9:   48 89 05 28 57 00 00               	mov qword ptr [rip + 0x5728], rax
0x401f00:   4c 89 e0                           	mov rax, r12
0x401f03:   48 29 f0                           	sub rax, rsi
0x401f06:   48 83 f8 07                        	cmp rax, 7
0x401f0a:   7e 96                              	jle 0x401ea2 <_pei386_runtime_relocator+0x22>
0x401f0c:   48 83 f8 0b                        	cmp rax, 0xb
0x401f10:   7e 2e                              	jle 0x401f40 <_pei386_runtime_relocator+0xc0>
0x401f12:   44 8b 0e                           	mov r9d, dword ptr [rsi]
0x401f15:   45 85 c9                           	test r9d, r9d
0x401f18:   0f 85 17 01 00 00                  	jne 0x402035 <_pei386_runtime_relocator+0x1b5>
0x401f1e:   44 8b 46 04                        	mov r8d, dword ptr [rsi + 4]
0x401f22:   45 85 c0                           	test r8d, r8d
0x401f25:   0f 85 0a 01 00 00                  	jne 0x402035 <_pei386_runtime_relocator+0x1b5>
0x401f2b:   8b 4e 08                           	mov ecx, dword ptr [rsi + 8]
0x401f2e:   85 c9                              	test ecx, ecx
0x401f30:   75 23                              	jne 0x401f55 <_pei386_runtime_relocator+0xd5>
0x401f32:   48 83 c6 0c                        	add rsi, 0xc
0x401f36:   66 2e 0f 1f 84 00 00 00 00 00      	nop word ptr cs:[rax + rax]
0x401f40:   8b 16                              	mov edx, dword ptr [rsi]
0x401f42:   85 d2                              	test edx, edx
0x401f44:   0f 85 eb 00 00 00                  	jne 0x402035 <_pei386_runtime_relocator+0x1b5>
0x401f4a:   8b 46 04                           	mov eax, dword ptr [rsi + 4]
0x401f4d:   85 c0                              	test eax, eax
0x401f4f:   0f 85 e0 00 00 00                  	jne 0x402035 <_pei386_runtime_relocator+0x1b5>
0x401f55:   8b 56 08                           	mov edx, dword ptr [rsi + 8]
0x401f58:   83 fa 01                           	cmp edx, 1
0x401f5b:   0f 85 dd 01 00 00                  	jne 0x40213e <_pei386_runtime_relocator+0x2be>
0x401f61:   48 83 c6 0c                        	add rsi, 0xc
0x401f65:   4c 39 e6                           	cmp rsi, r12
0x401f68:   0f 83 34 ff ff ff                  	jae 0x401ea2 <_pei386_runtime_relocator+0x22>
0x401f6e:   4c 8b 2d bb 24 00 00               	mov r13, qword ptr [rip + 0x24bb]
0x401f75:   4c 8d 75 a8                        	lea r14, [rbp - 0x58]
0x401f79:   49 bf 00 00 00 00 ff ff ff ff      	movabs r15, 0xffffffff00000000
0x401f83:   8b 4e 04                           	mov ecx, dword ptr [rsi + 4]
0x401f86:   8b 06                              	mov eax, dword ptr [rsi]
0x401f88:   0f b6 56 08                        	movzx edx, byte ptr [rsi + 8]
0x401f8c:   4c 01 e8                           	add rax, r13
0x401f8f:   4c 01 e9                           	add rcx, r13
0x401f92:   83 fa 10                           	cmp edx, 0x10
0x401f95:   4c 8b 00                           	mov r8, qword ptr [rax]
0x401f98:   0f 84 22 01 00 00                  	je 0x4020c0 <_pei386_runtime_relocator+0x240>
0x401f9e:   0f 86 dc 00 00 00                  	jbe 0x402080 <_pei386_runtime_relocator+0x200>
0x401fa4:   83 fa 20                           	cmp edx, 0x20
0x401fa7:   0f 84 63 01 00 00                  	je 0x402110 <_pei386_runtime_relocator+0x290>
0x401fad:   83 fa 40                           	cmp edx, 0x40
0x401fb0:   0f 85 3e 01 00 00                  	jne 0x4020f4 <_pei386_runtime_relocator+0x274>
0x401fb6:   48 8b 39                           	mov rdi, qword ptr [rcx]
0x401fb9:   4c 89 f2                           	mov rdx, r14
0x401fbc:   48 29 c7                           	sub rdi, rax
0x401fbf:   49 01 f8                           	add r8, rdi
0x401fc2:   4c 89 f7                           	mov rdi, r14
0x401fc5:   4c 89 45 a8                        	mov qword ptr [rbp - 0x58], r8
0x401fc9:   41 b8 08 00 00 00                  	mov r8d, 8
0x401fcf:   e8 3c fd ff ff                     	call 0x401d10 <__write_memory.part.0>
0x401fd4:   48 83 c6 0c                        	add rsi, 0xc
0x401fd8:   4c 39 e6                           	cmp rsi, r12
0x401fdb:   72 a6                              	jb 0x401f83 <_pei386_runtime_relocator+0x103>
0x401fdd:   0f 1f 00                           	nop dword ptr [rax]
0x401fe0:   8b 05 3e 56 00 00                  	mov eax, dword ptr [rip + 0x563e]
0x401fe6:   31 f6                              	xor esi, esi
0x401fe8:   4c 8b 25 ad 62 00 00               	mov r12, qword ptr [rip + 0x62ad]
0x401fef:   85 c0                              	test eax, eax
0x401ff1:   7f 20                              	jg 0x402013 <_pei386_runtime_relocator+0x193>
0x401ff3:   e9 aa fe ff ff                     	jmp 0x401ea2 <_pei386_runtime_relocator+0x22>
; data inside code section at 0x401ff8 -- 0x402000
0x401ff8:   0f 1f 84 00 00 00 00 00                            |........        |
0x402000:   83 c3 01                           	add ebx, 1
0x402003:   48 83 c6 28                        	add rsi, 0x28
0x402007:   3b 1d 17 56 00 00                  	cmp ebx, dword ptr [rip + 0x5617]
0x40200d:   0f 8d 8f fe ff ff                  	jge 0x401ea2 <_pei386_runtime_relocator+0x22>
0x402013:   48 89 f0                           	mov rax, rsi
0x402016:   48 03 05 0b 56 00 00               	add rax, qword ptr [rip + 0x560b]
0x40201d:   44 8b 00                           	mov r8d, dword ptr [rax]
0x402020:   45 85 c0                           	test r8d, r8d
0x402023:   74 db                              	je 0x402000 <_pei386_runtime_relocator+0x180>
0x402025:   48 8b 50 10                        	mov rdx, qword ptr [rax + 0x10]
0x402029:   48 8b 48 08                        	mov rcx, qword ptr [rax + 8]
0x40202d:   49 89 f9                           	mov r9, rdi
0x402030:   41 ff d4                           	call r12 <VirtualProtect>
0x402033:   eb cb                              	jmp 0x402000 <_pei386_runtime_relocator+0x180>
0x402035:   4c 39 e6                           	cmp rsi, r12
0x402038:   0f 83 64 fe ff ff                  	jae 0x401ea2 <_pei386_runtime_relocator+0x22>
0x40203e:   4c 8b 2d eb 23 00 00               	mov r13, qword ptr [rip + 0x23eb]
0x402045:   48 8d 7d a8                        	lea rdi, [rbp - 0x58]
0x402049:   0f 1f 80 00 00 00 00               	nop dword ptr [rax]
0x402050:   8b 4e 04                           	mov ecx, dword ptr [rsi + 4]
0x402053:   8b 06                              	mov eax, dword ptr [rsi]
0x402055:   41 b8 04 00 00 00                  	mov r8d, 4
0x40205b:   48 89 fa                           	mov rdx, rdi
0x40205e:   48 83 c6 08                        	add rsi, 8
0x402062:   4c 01 e9                           	add rcx, r13
0x402065:   03 01                              	add eax, dword ptr [rcx]
0x402067:   89 45 a8                           	mov dword ptr [rbp - 0x58], eax
0x40206a:   e8 a1 fc ff ff                     	call 0x401d10 <__write_memory.part.0>
0x40206f:   4c 39 e6                           	cmp rsi, r12
0x402072:   72 dc                              	jb 0x402050 <_pei386_runtime_relocator+0x1d0>
0x402074:   e9 67 ff ff ff                     	jmp 0x401fe0 <_pei386_runtime_relocator+0x160>
; data inside code section at 0x402079 -- 0x402080
0x402079:   0f 1f 80 00 00 00 00                               |.......         |
0x402080:   83 fa 08                           	cmp edx, 8
0x402083:   75 6f                              	jne 0x4020f4 <_pei386_runtime_relocator+0x274>
0x402085:   0f b6 11                           	movzx edx, byte ptr [rcx]
0x402088:   4c 89 f7                           	mov rdi, r14
0x40208b:   49 89 d2                           	mov r10, rdx
0x40208e:   49 81 ca 00 ff ff ff               	or r10, 0xffffffffffffff00
0x402095:   84 d2                              	test dl, dl
0x402097:   49 0f 48 d2                        	cmovs rdx, r10
0x40209b:   48 29 c2                           	sub rdx, rax
0x40209e:   49 01 d0                           	add r8, rdx
0x4020a1:   4c 89 f2                           	mov rdx, r14
0x4020a4:   4c 89 45 a8                        	mov qword ptr [rbp - 0x58], r8
0x4020a8:   41 b8 01 00 00 00                  	mov r8d, 1
0x4020ae:   e8 5d fc ff ff                     	call 0x401d10 <__write_memory.part.0>
0x4020b3:   e9 1c ff ff ff                     	jmp 0x401fd4 <_pei386_runtime_relocator+0x154>
; data inside code section at 0x4020b8 -- 0x4020c0
0x4020b8:   0f 1f 84 00 00 00 00 00                            |........        |
0x4020c0:   0f b7 11                           	movzx edx, word ptr [rcx]
0x4020c3:   4c 89 f7                           	mov rdi, r14
0x4020c6:   49 89 d2                           	mov r10, rdx
0x4020c9:   49 81 ca 00 00 ff ff               	or r10, 0xffffffffffff0000
0x4020d0:   66 85 d2                           	test dx, dx
0x4020d3:   49 0f 48 d2                        	cmovs rdx, r10
0x4020d7:   48 29 c2                           	sub rdx, rax
0x4020da:   49 01 d0                           	add r8, rdx
0x4020dd:   4c 89 f2                           	mov rdx, r14
0x4020e0:   4c 89 45 a8                        	mov qword ptr [rbp - 0x58], r8
0x4020e4:   41 b8 02 00 00 00                  	mov r8d, 2
0x4020ea:   e8 21 fc ff ff                     	call 0x401d10 <__write_memory.part.0>
0x4020ef:   e9 e0 fe ff ff                     	jmp 0x401fd4 <_pei386_runtime_relocator+0x154>
0x4020f4:   48 8d 0d 8d 22 00 00               	lea rcx, [rip + 0x228d]
0x4020fb:   48 c7 45 a8 00 00 00 00            	mov qword ptr [rbp - 0x58], 0
0x402103:   e8 98 fb ff ff                     	call 0x401ca0 <__report_error>
; data inside code section at 0x402108 -- 0x402110
0x402108:   0f 1f 84 00 00 00 00 00                            |........        |
0x402110:   8b 11                              	mov edx, dword ptr [rcx]
0x402112:   4c 89 f7                           	mov rdi, r14
0x402115:   49 89 d2                           	mov r10, rdx
0x402118:   4d 09 fa                           	or r10, r15
0x40211b:   85 d2                              	test edx, edx
0x40211d:   49 0f 48 d2                        	cmovs rdx, r10
0x402121:   48 29 c2                           	sub rdx, rax
0x402124:   49 01 d0                           	add r8, rdx
0x402127:   4c 89 f2                           	mov rdx, r14
0x40212a:   4c 89 45 a8                        	mov qword ptr [rbp - 0x58], r8
0x40212e:   41 b8 04 00 00 00                  	mov r8d, 4
0x402134:   e8 d7 fb ff ff                     	call 0x401d10 <__write_memory.part.0>
0x402139:   e9 96 fe ff ff                     	jmp 0x401fd4 <_pei386_runtime_relocator+0x154>
0x40213e:   48 8d 0d 0b 22 00 00               	lea rcx, [rip + 0x220b]
0x402145:   e8 56 fb ff ff                     	call 0x401ca0 <__report_error>
; data inside code section at 0x40214a -- 0x402150
0x40214a:   90 90 90 90 90 90                                  |......          |
; function: __mingw_SEH_error_handler at 0x402150 -- 0x4022e8
0x402150:   48 83 ec 28                        	sub rsp, 0x28
0x402154:   8b 01                              	mov eax, dword ptr [rcx]
0x402156:   3d 91 00 00 c0                     	cmp eax, 0xc0000091
0x40215b:   77 63                              	ja 0x4021c0 <__mingw_SEH_error_handler+0x70>
0x40215d:   3d 8d 00 00 c0                     	cmp eax, 0xc000008d
0x402162:   73 7b                              	jae 0x4021df <__mingw_SEH_error_handler+0x8f>
0x402164:   3d 08 00 00 c0                     	cmp eax, 0xc0000008
0x402169:   0f 84 0d 01 00 00                  	je 0x40227c <__mingw_SEH_error_handler+0x12c>
0x40216f:   0f 87 db 00 00 00                  	ja 0x402250 <__mingw_SEH_error_handler+0x100>
0x402175:   3d 02 00 00 80                     	cmp eax, 0x80000002
0x40217a:   0f 84 fc 00 00 00                  	je 0x40227c <__mingw_SEH_error_handler+0x12c>
0x402180:   3d 05 00 00 c0                     	cmp eax, 0xc0000005
0x402185:   0f 85 d3 00 00 00                  	jne 0x40225e <__mingw_SEH_error_handler+0x10e>
0x40218b:   31 d2                              	xor edx, edx
0x40218d:   b9 0b 00 00 00                     	mov ecx, 0xb
0x402192:   e8 11 0b 00 00                     	call 0x402ca8 <signal>
0x402197:   48 83 f8 01                        	cmp rax, 1
0x40219b:   0f 84 31 01 00 00                  	je 0x4022d2 <__mingw_SEH_error_handler+0x182>
0x4021a1:   48 85 c0                           	test rax, rax
0x4021a4:   0f 84 08 01 00 00                  	je 0x4022b2 <__mingw_SEH_error_handler+0x162>
0x4021aa:   b9 0b 00 00 00                     	mov ecx, 0xb
0x4021af:   ff d0                              	call rax
0x4021b1:   31 c0                              	xor eax, eax
0x4021b3:   48 83 c4 28                        	add rsp, 0x28
0x4021b7:   c3                                 	ret 
; data inside code section at 0x4021b8 -- 0x4021c0
0x4021b8:   0f 1f 84 00 00 00 00 00                            |........        |
0x4021c0:   3d 94 00 00 c0                     	cmp eax, 0xc0000094
0x4021c5:   0f 84 b8 00 00 00                  	je 0x402283 <__mingw_SEH_error_handler+0x133>
0x4021cb:   77 43                              	ja 0x402210 <__mingw_SEH_error_handler+0xc0>
0x4021cd:   3d 92 00 00 c0                     	cmp eax, 0xc0000092
0x4021d2:   0f 84 a4 00 00 00                  	je 0x40227c <__mingw_SEH_error_handler+0x12c>
0x4021d8:   3d 93 00 00 c0                     	cmp eax, 0xc0000093
0x4021dd:   75 7f                              	jne 0x40225e <__mingw_SEH_error_handler+0x10e>
0x4021df:   31 d2                              	xor edx, edx
0x4021e1:   b9 08 00 00 00                     	mov ecx, 8
0x4021e6:   e8 bd 0a 00 00                     	call 0x402ca8 <signal>
0x4021eb:   48 83 f8 01                        	cmp rax, 1
0x4021ef:   48 89 c2                           	mov rdx, rax
0x4021f2:   74 74                              	je 0x402268 <__mingw_SEH_error_handler+0x118>
0x4021f4:   48 85 d2                           	test rdx, rdx
0x4021f7:   b8 01 00 00 00                     	mov eax, 1
0x4021fc:   74 b5                              	je 0x4021b3 <__mingw_SEH_error_handler+0x63>
0x4021fe:   b9 08 00 00 00                     	mov ecx, 8
0x402203:   ff d2                              	call rdx
0x402205:   31 c0                              	xor eax, eax
0x402207:   48 83 c4 28                        	add rsp, 0x28
0x40220b:   c3                                 	ret 
; data inside code section at 0x40220c -- 0x402210
0x40220c:   0f 1f 40 00                                        |..@.            |
0x402210:   3d 95 00 00 c0                     	cmp eax, 0xc0000095
0x402215:   74 65                              	je 0x40227c <__mingw_SEH_error_handler+0x12c>
0x402217:   3d 96 00 00 c0                     	cmp eax, 0xc0000096
0x40221c:   75 40                              	jne 0x40225e <__mingw_SEH_error_handler+0x10e>
0x40221e:   31 d2                              	xor edx, edx
0x402220:   b9 04 00 00 00                     	mov ecx, 4
0x402225:   e8 7e 0a 00 00                     	call 0x402ca8 <signal>
0x40222a:   48 83 f8 01                        	cmp rax, 1
0x40222e:   0f 84 88 00 00 00                  	je 0x4022bc <__mingw_SEH_error_handler+0x16c>
0x402234:   48 85 c0                           	test rax, rax
0x402237:   74 79                              	je 0x4022b2 <__mingw_SEH_error_handler+0x162>
0x402239:   b9 04 00 00 00                     	mov ecx, 4
0x40223e:   ff d0                              	call rax
0x402240:   31 c0                              	xor eax, eax
0x402242:   e9 6c ff ff ff                     	jmp 0x4021b3 <__mingw_SEH_error_handler+0x63>
; data inside code section at 0x402247 -- 0x402250
0x402247:   66 0f 1f 84 00 00 00 00  00                        |f........       |
0x402250:   3d 1d 00 00 c0                     	cmp eax, 0xc000001d
0x402255:   74 c7                              	je 0x40221e <__mingw_SEH_error_handler+0xce>
0x402257:   3d 8c 00 00 c0                     	cmp eax, 0xc000008c
0x40225c:   74 1e                              	je 0x40227c <__mingw_SEH_error_handler+0x12c>
0x40225e:   b8 01 00 00 00                     	mov eax, 1
0x402263:   48 83 c4 28                        	add rsp, 0x28
0x402267:   c3                                 	ret 
0x402268:   ba 01 00 00 00                     	mov edx, 1
0x40226d:   b9 08 00 00 00                     	mov ecx, 8
0x402272:   e8 31 0a 00 00                     	call 0x402ca8 <signal>
0x402277:   e8 f4 f9 ff ff                     	call 0x401c70 <_fpreset>
0x40227c:   31 c0                              	xor eax, eax
0x40227e:   48 83 c4 28                        	add rsp, 0x28
0x402282:   c3                                 	ret 
0x402283:   31 d2                              	xor edx, edx
0x402285:   b9 08 00 00 00                     	mov ecx, 8
0x40228a:   e8 19 0a 00 00                     	call 0x402ca8 <signal>
0x40228f:   48 83 f8 01                        	cmp rax, 1
0x402293:   48 89 c2                           	mov rdx, rax
0x402296:   0f 85 58 ff ff ff                  	jne 0x4021f4 <__mingw_SEH_error_handler+0xa4>
0x40229c:   ba 01 00 00 00                     	mov edx, 1
0x4022a1:   b9 08 00 00 00                     	mov ecx, 8
0x4022a6:   e8 fd 09 00 00                     	call 0x402ca8 <signal>
0x4022ab:   31 c0                              	xor eax, eax
0x4022ad:   e9 01 ff ff ff                     	jmp 0x4021b3 <__mingw_SEH_error_handler+0x63>
0x4022b2:   b8 04 00 00 00                     	mov eax, 4
0x4022b7:   48 83 c4 28                        	add rsp, 0x28
0x4022bb:   c3                                 	ret 
0x4022bc:   ba 01 00 00 00                     	mov edx, 1
0x4022c1:   b9 04 00 00 00                     	mov ecx, 4
0x4022c6:   e8 dd 09 00 00                     	call 0x402ca8 <signal>
0x4022cb:   31 c0                              	xor eax, eax
0x4022cd:   e9 e1 fe ff ff                     	jmp 0x4021b3 <__mingw_SEH_error_handler+0x63>
0x4022d2:   ba 01 00 00 00                     	mov edx, 1
0x4022d7:   b9 0b 00 00 00                     	mov ecx, 0xb
0x4022dc:   e8 c7 09 00 00                     	call 0x402ca8 <signal>
0x4022e1:   31 c0                              	xor eax, eax
0x4022e3:   e9 cb fe ff ff                     	jmp 0x4021b3 <__mingw_SEH_error_handler+0x63>
; data inside code section at 0x4022e8 -- 0x4022f0
0x4022e8:   0f 1f 84 00 00 00 00 00                            |........        |
; function: __mingw_init_ehandler at 0x4022f0 -- 0x4023dc
0x4022f0:   41 54                              	push r12
0x4022f2:   55                                 	push rbp
0x4022f3:   57                                 	push rdi
0x4022f4:   56                                 	push rsi
0x4022f5:   53                                 	push rbx
0x4022f6:   48 83 ec 20                        	sub rsp, 0x20
0x4022fa:   e8 a1 07 00 00                     	call 0x402aa0 <_GetPEImageBase>
0x4022ff:   48 89 c5                           	mov rbp, rax
0x402302:   8b 05 40 53 00 00                  	mov eax, dword ptr [rip + 0x5340]
0x402308:   85 c0                              	test eax, eax
0x40230a:   75 25                              	jne 0x402331 <__mingw_init_ehandler+0x41>
0x40230c:   48 85 ed                           	test rbp, rbp
0x40230f:   74 20                              	je 0x402331 <__mingw_init_ehandler+0x41>
0x402311:   48 8d 0d a8 20 00 00               	lea rcx, [rip + 0x20a8]
0x402318:   c7 05 26 53 00 00 01 00 00 00      	mov dword ptr [rip + 0x5326], 1
0x402322:   e8 99 05 00 00                     	call 0x4028c0 <_FindPESectionByName>
0x402327:   48 85 c0                           	test rax, rax
0x40232a:   74 14                              	je 0x402340 <__mingw_init_ehandler+0x50>
0x40232c:   b8 01 00 00 00                     	mov eax, 1
0x402331:   48 83 c4 20                        	add rsp, 0x20
0x402335:   5b                                 	pop rbx
0x402336:   5e                                 	pop rsi
0x402337:   5f                                 	pop rdi
0x402338:   5d                                 	pop rbp
0x402339:   41 5c                              	pop r12
0x40233b:   c3                                 	ret 
; data inside code section at 0x40233c -- 0x402340
0x40233c:   0f 1f 40 00                                        |..@.            |
0x402340:   48 8d 1d 19 54 00 00               	lea rbx, [rip + 0x5419]
0x402347:   48 8d 15 12 53 00 00               	lea rdx, [rip + 0x5312]
0x40234e:   b9 30 00 00 00                     	mov ecx, 0x30
0x402353:   4c 8d 25 f6 fd ff ff               	lea r12, [rip - 0x20a]
0x40235a:   31 f6                              	xor esi, esi
0x40235c:   48 89 df                           	mov rdi, rbx
0x40235f:   f3 48 ab                           	rep stosq qword ptr [rdi], rax
0x402362:   b9 20 00 00 00                     	mov ecx, 0x20
0x402367:   48 89 d7                           	mov rdi, rdx
0x40236a:   49 29 ec                           	sub r12, rbp
0x40236d:   f3 48 ab                           	rep stosq qword ptr [rdi], rax
0x402370:   48 89 d7                           	mov rdi, rdx
0x402373:   eb 2e                              	jmp 0x4023a3 <__mingw_init_ehandler+0xb3>
0x402375:   c6 07 09                           	mov byte ptr [rdi], 9
0x402378:   44 89 67 04                        	mov dword ptr [rdi + 4], r12d
0x40237c:   48 83 c6 01                        	add rsi, 1
0x402380:   8b 50 0c                           	mov edx, dword ptr [rax + 0xc]
0x402383:   48 83 c3 0c                        	add rbx, 0xc
0x402387:   89 53 f4                           	mov dword ptr [rbx - 0xc], edx
0x40238a:   03 50 08                           	add edx, dword ptr [rax + 8]
0x40238d:   48 89 f8                           	mov rax, rdi
0x402390:   48 29 e8                           	sub rax, rbp
0x402393:   48 83 c7 08                        	add rdi, 8
0x402397:   89 43 fc                           	mov dword ptr [rbx - 4], eax
0x40239a:   89 53 f8                           	mov dword ptr [rbx - 8], edx
0x40239d:   48 83 fe 20                        	cmp rsi, 0x20
0x4023a1:   74 32                              	je 0x4023d5 <__mingw_init_ehandler+0xe5>
0x4023a3:   48 89 f1                           	mov rcx, rsi
0x4023a6:   e8 75 06 00 00                     	call 0x402a20 <_FindPESectionExec>
0x4023ab:   48 85 c0                           	test rax, rax
0x4023ae:   75 c5                              	jne 0x402375 <__mingw_init_ehandler+0x85>
0x4023b0:   48 85 f6                           	test rsi, rsi
0x4023b3:   0f 84 73 ff ff ff                  	je 0x40232c <__mingw_init_ehandler+0x3c>
0x4023b9:   89 f2                              	mov edx, esi
0x4023bb:   0f 1f 44 00 00                     	nop dword ptr [rax + rax]
0x4023c0:   49 89 e8                           	mov r8, rbp
0x4023c3:   48 8d 0d 96 53 00 00               	lea rcx, [rip + 0x5396]
0x4023ca:   ff 15 84 5e 00 00                  	call qword ptr [rip + 0x5e84] <RtlAddFunctionTable>
0x4023d0:   e9 57 ff ff ff                     	jmp 0x40232c <__mingw_init_ehandler+0x3c>
0x4023d5:   ba 20 00 00 00                     	mov edx, 0x20
0x4023da:   eb e4                              	jmp 0x4023c0 <__mingw_init_ehandler+0xd0>
; data inside code section at 0x4023dc -- 0x4023e0
0x4023dc:   0f 1f 40 00                                        |..@.            |
; function: _gnu_exception_handler at 0x4023e0 -- 0x4025b2
0x4023e0:   53                                 	push rbx
0x4023e1:   48 83 ec 20                        	sub rsp, 0x20
0x4023e5:   48 8b 11                           	mov rdx, qword ptr [rcx]
0x4023e8:   48 89 cb                           	mov rbx, rcx
0x4023eb:   8b 02                              	mov eax, dword ptr [rdx]
0x4023ed:   89 c1                              	mov ecx, eax
0x4023ef:   81 e1 ff ff ff 20                  	and ecx, 0x20ffffff
0x4023f5:   81 f9 43 43 47 20                  	cmp ecx, 0x20474343
0x4023fb:   0f 84 df 00 00 00                  	je 0x4024e0 <_gnu_exception_handler+0x100>
0x402401:   3d 91 00 00 c0                     	cmp eax, 0xc0000091
0x402406:   0f 87 84 00 00 00                  	ja 0x402490 <_gnu_exception_handler+0xb0>
0x40240c:   3d 8d 00 00 c0                     	cmp eax, 0xc000008d
0x402411:   0f 83 94 00 00 00                  	jae 0x4024ab <_gnu_exception_handler+0xcb>
0x402417:   3d 08 00 00 c0                     	cmp eax, 0xc0000008
0x40241c:   0f 84 c8 00 00 00                  	je 0x4024ea <_gnu_exception_handler+0x10a>
0x402422:   77 3f                              	ja 0x402463 <_gnu_exception_handler+0x83>
0x402424:   3d 02 00 00 80                     	cmp eax, 0x80000002
0x402429:   0f 84 bb 00 00 00                  	je 0x4024ea <_gnu_exception_handler+0x10a>
0x40242f:   3d 05 00 00 c0                     	cmp eax, 0xc0000005
0x402434:   75 3f                              	jne 0x402475 <_gnu_exception_handler+0x95>
0x402436:   31 d2                              	xor edx, edx
0x402438:   b9 0b 00 00 00                     	mov ecx, 0xb
0x40243d:   e8 66 08 00 00                     	call 0x402ca8 <signal>
0x402442:   48 83 f8 01                        	cmp rax, 1
0x402446:   0f 84 34 01 00 00                  	je 0x402580 <_gnu_exception_handler+0x1a0>
0x40244c:   48 85 c0                           	test rax, rax
0x40244f:   74 24                              	je 0x402475 <_gnu_exception_handler+0x95>
0x402451:   b9 0b 00 00 00                     	mov ecx, 0xb
0x402456:   ff d0                              	call rax
0x402458:   b8 ff ff ff ff                     	mov eax, 0xffffffff
0x40245d:   48 83 c4 20                        	add rsp, 0x20
0x402461:   5b                                 	pop rbx
0x402462:   c3                                 	ret 
0x402463:   3d 1d 00 00 c0                     	cmp eax, 0xc000001d
0x402468:   0f 84 99 00 00 00                  	je 0x402507 <_gnu_exception_handler+0x127>
0x40246e:   3d 8c 00 00 c0                     	cmp eax, 0xc000008c
0x402473:   74 75                              	je 0x4024ea <_gnu_exception_handler+0x10a>
0x402475:   48 8b 05 c4 51 00 00               	mov rax, qword ptr [rip + 0x51c4]
0x40247c:   48 85 c0                           	test rax, rax
0x40247f:   74 dc                              	je 0x40245d <_gnu_exception_handler+0x7d>
0x402481:   48 89 d9                           	mov rcx, rbx
0x402484:   48 83 c4 20                        	add rsp, 0x20
0x402488:   5b                                 	pop rbx
0x402489:   48 ff e0                           	jmp rax
; data inside code section at 0x40248c -- 0x402490
0x40248c:   0f 1f 40 00                                        |..@.            |
0x402490:   3d 94 00 00 c0                     	cmp eax, 0xc0000094
0x402495:   0f 84 99 00 00 00                  	je 0x402534 <_gnu_exception_handler+0x154>
0x40249b:   77 58                              	ja 0x4024f5 <_gnu_exception_handler+0x115>
0x40249d:   3d 92 00 00 c0                     	cmp eax, 0xc0000092
0x4024a2:   74 46                              	je 0x4024ea <_gnu_exception_handler+0x10a>
0x4024a4:   3d 93 00 00 c0                     	cmp eax, 0xc0000093
0x4024a9:   75 ca                              	jne 0x402475 <_gnu_exception_handler+0x95>
0x4024ab:   31 d2                              	xor edx, edx
0x4024ad:   b9 08 00 00 00                     	mov ecx, 8
0x4024b2:   e8 f1 07 00 00                     	call 0x402ca8 <signal>
0x4024b7:   48 83 f8 01                        	cmp rax, 1
0x4024bb:   0f 84 d8 00 00 00                  	je 0x402599 <_gnu_exception_handler+0x1b9>
0x4024c1:   48 85 c0                           	test rax, rax
0x4024c4:   74 af                              	je 0x402475 <_gnu_exception_handler+0x95>
0x4024c6:   b9 08 00 00 00                     	mov ecx, 8
0x4024cb:   ff d0                              	call rax
0x4024cd:   b8 ff ff ff ff                     	mov eax, 0xffffffff
0x4024d2:   48 83 c4 20                        	add rsp, 0x20
0x4024d6:   5b                                 	pop rbx
0x4024d7:   c3                                 	ret 
; data inside code section at 0x4024d8 -- 0x4024e0
0x4024d8:   0f 1f 84 00 00 00 00 00                            |........        |
0x4024e0:   f6 42 04 01                        	test byte ptr [rdx + 4], 1
0x4024e4:   0f 85 17 ff ff ff                  	jne 0x402401 <_gnu_exception_handler+0x21>
0x4024ea:   b8 ff ff ff ff                     	mov eax, 0xffffffff
0x4024ef:   48 83 c4 20                        	add rsp, 0x20
0x4024f3:   5b                                 	pop rbx
0x4024f4:   c3                                 	ret 
0x4024f5:   3d 95 00 00 c0                     	cmp eax, 0xc0000095
0x4024fa:   74 ee                              	je 0x4024ea <_gnu_exception_handler+0x10a>
0x4024fc:   3d 96 00 00 c0                     	cmp eax, 0xc0000096
0x402501:   0f 85 6e ff ff ff                  	jne 0x402475 <_gnu_exception_handler+0x95>
0x402507:   31 d2                              	xor edx, edx
0x402509:   b9 04 00 00 00                     	mov ecx, 4
0x40250e:   e8 95 07 00 00                     	call 0x402ca8 <signal>
0x402513:   48 83 f8 01                        	cmp rax, 1
0x402517:   74 4a                              	je 0x402563 <_gnu_exception_handler+0x183>
0x402519:   48 85 c0                           	test rax, rax
0x40251c:   0f 84 53 ff ff ff                  	je 0x402475 <_gnu_exception_handler+0x95>
0x402522:   b9 04 00 00 00                     	mov ecx, 4
0x402527:   ff d0                              	call rax
0x402529:   b8 ff ff ff ff                     	mov eax, 0xffffffff
0x40252e:   48 83 c4 20                        	add rsp, 0x20
0x402532:   5b                                 	pop rbx
0x402533:   c3                                 	ret 
0x402534:   31 d2                              	xor edx, edx
0x402536:   b9 08 00 00 00                     	mov ecx, 8
0x40253b:   e8 68 07 00 00                     	call 0x402ca8 <signal>
0x402540:   48 83 f8 01                        	cmp rax, 1
0x402544:   0f 85 77 ff ff ff                  	jne 0x4024c1 <_gnu_exception_handler+0xe1>
0x40254a:   ba 01 00 00 00                     	mov edx, 1
0x40254f:   b9 08 00 00 00                     	mov ecx, 8
0x402554:   e8 4f 07 00 00                     	call 0x402ca8 <signal>
0x402559:   b8 ff ff ff ff                     	mov eax, 0xffffffff
0x40255e:   e9 fa fe ff ff                     	jmp 0x40245d <_gnu_exception_handler+0x7d>
0x402563:   ba 01 00 00 00                     	mov edx, 1
0x402568:   b9 04 00 00 00                     	mov ecx, 4
0x40256d:   e8 36 07 00 00                     	call 0x402ca8 <signal>
0x402572:   b8 ff ff ff ff                     	mov eax, 0xffffffff
0x402577:   e9 e1 fe ff ff                     	jmp 0x40245d <_gnu_exception_handler+0x7d>
; data inside code section at 0x40257c -- 0x402580
0x40257c:   0f 1f 40 00                                        |..@.            |
0x402580:   ba 01 00 00 00                     	mov edx, 1
0x402585:   b9 0b 00 00 00                     	mov ecx, 0xb
0x40258a:   e8 19 07 00 00                     	call 0x402ca8 <signal>
0x40258f:   b8 ff ff ff ff                     	mov eax, 0xffffffff
0x402594:   e9 c4 fe ff ff                     	jmp 0x40245d <_gnu_exception_handler+0x7d>
0x402599:   ba 01 00 00 00                     	mov edx, 1
0x40259e:   b9 08 00 00 00                     	mov ecx, 8
0x4025a3:   e8 00 07 00 00                     	call 0x402ca8 <signal>
0x4025a8:   e8 c3 f6 ff ff                     	call 0x401c70 <_fpreset>
0x4025ad:   e9 38 ff ff ff                     	jmp 0x4024ea <_gnu_exception_handler+0x10a>
; data inside code section at 0x4025b2 -- 0x4025c0
0x4025b2:   90 90 90 90 90 90 90 90  90 90 90 90 90 90         |..............  |
; function: __mingwthr_run_key_dtors.part.0 at 0x4025c0 -- 0x40262a
0x4025c0:   55                                 	push rbp
0x4025c1:   57                                 	push rdi
0x4025c2:   56                                 	push rsi
0x4025c3:   53                                 	push rbx
0x4025c4:   48 83 ec 28                        	sub rsp, 0x28
0x4025c8:   48 8d 0d 31 53 00 00               	lea rcx, [rip + 0x5331]
0x4025cf:   ff 15 27 5c 00 00                  	call qword ptr [rip + 0x5c27] <EnterCriticalSection>
0x4025d5:   48 8b 1d 04 53 00 00               	mov rbx, qword ptr [rip + 0x5304]
0x4025dc:   48 85 db                           	test rbx, rbx
0x4025df:   74 33                              	je 0x402614 <__mingwthr_run_key_dtors.part.0+0x54>
0x4025e1:   48 8b 2d a4 5c 00 00               	mov rbp, qword ptr [rip + 0x5ca4]
0x4025e8:   48 8b 3d 2d 5c 00 00               	mov rdi, qword ptr [rip + 0x5c2d]
0x4025ef:   90                                 	nop 
0x4025f0:   8b 0b                              	mov ecx, dword ptr [rbx]
0x4025f2:   ff d5                              	call rbp <TlsGetValue>
0x4025f4:   48 89 c6                           	mov rsi, rax
0x4025f7:   ff d7                              	call rdi <GetLastError>
0x4025f9:   85 c0                              	test eax, eax
0x4025fb:   75 0e                              	jne 0x40260b <__mingwthr_run_key_dtors.part.0+0x4b>
0x4025fd:   48 85 f6                           	test rsi, rsi
0x402600:   74 09                              	je 0x40260b <__mingwthr_run_key_dtors.part.0+0x4b>
0x402602:   48 8b 43 08                        	mov rax, qword ptr [rbx + 8]
0x402606:   48 89 f1                           	mov rcx, rsi
0x402609:   ff d0                              	call rax
0x40260b:   48 8b 5b 10                        	mov rbx, qword ptr [rbx + 0x10]
0x40260f:   48 85 db                           	test rbx, rbx
0x402612:   75 dc                              	jne 0x4025f0 <__mingwthr_run_key_dtors.part.0+0x30>
0x402614:   48 8d 0d e5 52 00 00               	lea rcx, [rip + 0x52e5]
0x40261b:   48 83 c4 28                        	add rsp, 0x28
0x40261f:   5b                                 	pop rbx
0x402620:   5e                                 	pop rsi
0x402621:   5f                                 	pop rdi
0x402622:   5d                                 	pop rbp
0x402623:   48 ff 25 1a 5c 00 00               	jmp qword ptr [rip + 0x5c1a] <LeaveCriticalSection>
; data inside code section at 0x40262a -- 0x402630
0x40262a:   66 0f 1f 44 00 00                                  |f..D..          |
; function: ___w64_mingwthr_add_key_dtor at 0x402630 -- 0x4026af
0x402630:   55                                 	push rbp
0x402631:   57                                 	push rdi
0x402632:   56                                 	push rsi
0x402633:   53                                 	push rbx
0x402634:   48 83 ec 28                        	sub rsp, 0x28
0x402638:   8b 05 aa 52 00 00                  	mov eax, dword ptr [rip + 0x52aa]
0x40263e:   31 f6                              	xor esi, esi
0x402640:   89 cd                              	mov ebp, ecx
0x402642:   48 89 d7                           	mov rdi, rdx
0x402645:   85 c0                              	test eax, eax
0x402647:   75 0b                              	jne 0x402654 <___w64_mingwthr_add_key_dtor+0x24>
0x402649:   89 f0                              	mov eax, esi
0x40264b:   48 83 c4 28                        	add rsp, 0x28
0x40264f:   5b                                 	pop rbx
0x402650:   5e                                 	pop rsi
0x402651:   5f                                 	pop rdi
0x402652:   5d                                 	pop rbp
0x402653:   c3                                 	ret 
0x402654:   ba 18 00 00 00                     	mov edx, 0x18
0x402659:   b9 01 00 00 00                     	mov ecx, 1
0x40265e:   e8 8d 06 00 00                     	call 0x402cf0 <calloc>
0x402663:   48 85 c0                           	test rax, rax
0x402666:   48 89 c3                           	mov rbx, rax
0x402669:   74 3d                              	je 0x4026a8 <___w64_mingwthr_add_key_dtor+0x78>
0x40266b:   89 28                              	mov dword ptr [rax], ebp
0x40266d:   48 89 78 08                        	mov qword ptr [rax + 8], rdi
0x402671:   48 8d 0d 88 52 00 00               	lea rcx, [rip + 0x5288]
0x402678:   ff 15 7e 5b 00 00                  	call qword ptr [rip + 0x5b7e] <EnterCriticalSection>
0x40267e:   48 8b 05 5b 52 00 00               	mov rax, qword ptr [rip + 0x525b]
0x402685:   48 8d 0d 74 52 00 00               	lea rcx, [rip + 0x5274]
0x40268c:   48 89 1d 4d 52 00 00               	mov qword ptr [rip + 0x524d], rbx
0x402693:   48 89 43 10                        	mov qword ptr [rbx + 0x10], rax
0x402697:   ff 15 a7 5b 00 00                  	call qword ptr [rip + 0x5ba7] <LeaveCriticalSection>
0x40269d:   89 f0                              	mov eax, esi
0x40269f:   48 83 c4 28                        	add rsp, 0x28
0x4026a3:   5b                                 	pop rbx
0x4026a4:   5e                                 	pop rsi
0x4026a5:   5f                                 	pop rdi
0x4026a6:   5d                                 	pop rbp
0x4026a7:   c3                                 	ret 
0x4026a8:   be ff ff ff ff                     	mov esi, 0xffffffff
0x4026ad:   eb 9a                              	jmp 0x402649 <___w64_mingwthr_add_key_dtor+0x19>
; data inside code section at 0x4026af -- 0x4026b0
0x4026af:   90                                                 |.               |
; function: ___w64_mingwthr_remove_key_dtor at 0x4026b0 -- 0x40274c
0x4026b0:   53                                 	push rbx
0x4026b1:   48 83 ec 20                        	sub rsp, 0x20
0x4026b5:   8b 05 2d 52 00 00                  	mov eax, dword ptr [rip + 0x522d]
0x4026bb:   89 cb                              	mov ebx, ecx
0x4026bd:   85 c0                              	test eax, eax
0x4026bf:   75 0f                              	jne 0x4026d0 <___w64_mingwthr_remove_key_dtor+0x20>
0x4026c1:   31 c0                              	xor eax, eax
0x4026c3:   48 83 c4 20                        	add rsp, 0x20
0x4026c7:   5b                                 	pop rbx
0x4026c8:   c3                                 	ret 
; data inside code section at 0x4026c9 -- 0x4026d0
0x4026c9:   0f 1f 80 00 00 00 00                               |.......         |
0x4026d0:   48 8d 0d 29 52 00 00               	lea rcx, [rip + 0x5229]
0x4026d7:   ff 15 1f 5b 00 00                  	call qword ptr [rip + 0x5b1f] <EnterCriticalSection>
0x4026dd:   48 8b 05 fc 51 00 00               	mov rax, qword ptr [rip + 0x51fc]
0x4026e4:   48 85 c0                           	test rax, rax
0x4026e7:   74 1a                              	je 0x402703 <___w64_mingwthr_remove_key_dtor+0x53>
0x4026e9:   8b 10                              	mov edx, dword ptr [rax]
0x4026eb:   39 d3                              	cmp ebx, edx
0x4026ed:   75 0b                              	jne 0x4026fa <___w64_mingwthr_remove_key_dtor+0x4a>
0x4026ef:   eb 4b                              	jmp 0x40273c <___w64_mingwthr_remove_key_dtor+0x8c>
0x4026f1:   8b 11                              	mov edx, dword ptr [rcx]
0x4026f3:   39 da                              	cmp edx, ebx
0x4026f5:   74 29                              	je 0x402720 <___w64_mingwthr_remove_key_dtor+0x70>
0x4026f7:   48 89 c8                           	mov rax, rcx
0x4026fa:   48 8b 48 10                        	mov rcx, qword ptr [rax + 0x10]
0x4026fe:   48 85 c9                           	test rcx, rcx
0x402701:   75 ee                              	jne 0x4026f1 <___w64_mingwthr_remove_key_dtor+0x41>
0x402703:   48 8d 0d f6 51 00 00               	lea rcx, [rip + 0x51f6]
0x40270a:   ff 15 34 5b 00 00                  	call qword ptr [rip + 0x5b34] <LeaveCriticalSection>
0x402710:   31 c0                              	xor eax, eax
0x402712:   48 83 c4 20                        	add rsp, 0x20
0x402716:   5b                                 	pop rbx
0x402717:   c3                                 	ret 
; data inside code section at 0x402718 -- 0x402720
0x402718:   0f 1f 84 00 00 00 00 00                            |........        |
0x402720:   48 8b 51 10                        	mov rdx, qword ptr [rcx + 0x10]
0x402724:   48 89 50 10                        	mov qword ptr [rax + 0x10], rdx
0x402728:   e8 a3 05 00 00                     	call 0x402cd0 <free>
0x40272d:   48 8d 0d cc 51 00 00               	lea rcx, [rip + 0x51cc]
0x402734:   ff 15 0a 5b 00 00                  	call qword ptr [rip + 0x5b0a] <LeaveCriticalSection>
0x40273a:   eb d4                              	jmp 0x402710 <___w64_mingwthr_remove_key_dtor+0x60>
0x40273c:   48 8b 50 10                        	mov rdx, qword ptr [rax + 0x10]
0x402740:   48 89 c1                           	mov rcx, rax
0x402743:   48 89 15 96 51 00 00               	mov qword ptr [rip + 0x5196], rdx
0x40274a:   eb dc                              	jmp 0x402728 <___w64_mingwthr_remove_key_dtor+0x78>
; data inside code section at 0x40274c -- 0x402750
0x40274c:   0f 1f 40 00                                        |..@.            |
; function: __mingw_TLScallback at 0x402750 -- 0x40282a
0x402750:   53                                 	push rbx
0x402751:   48 83 ec 20                        	sub rsp, 0x20
0x402755:   83 fa 01                           	cmp edx, 1
0x402758:   0f 84 92 00 00 00                  	je 0x4027f0 <__mingw_TLScallback+0xa0>
0x40275e:   72 30                              	jb 0x402790 <__mingw_TLScallback+0x40>
0x402760:   83 fa 02                           	cmp edx, 2
0x402763:   74 1b                              	je 0x402780 <__mingw_TLScallback+0x30>
0x402765:   83 fa 03                           	cmp edx, 3
0x402768:   75 1b                              	jne 0x402785 <__mingw_TLScallback+0x35>
0x40276a:   8b 05 78 51 00 00                  	mov eax, dword ptr [rip + 0x5178]
0x402770:   85 c0                              	test eax, eax
0x402772:   74 11                              	je 0x402785 <__mingw_TLScallback+0x35>
0x402774:   e8 47 fe ff ff                     	call 0x4025c0 <__mingwthr_run_key_dtors.part.0>
0x402779:   eb 0a                              	jmp 0x402785 <__mingw_TLScallback+0x35>
; data inside code section at 0x40277b -- 0x402780
0x40277b:   0f 1f 44 00 00                                     |..D..           |
0x402780:   e8 eb f4 ff ff                     	call 0x401c70 <_fpreset>
0x402785:   b8 01 00 00 00                     	mov eax, 1
0x40278a:   48 83 c4 20                        	add rsp, 0x20
0x40278e:   5b                                 	pop rbx
0x40278f:   c3                                 	ret 
0x402790:   8b 05 52 51 00 00                  	mov eax, dword ptr [rip + 0x5152]
0x402796:   85 c0                              	test eax, eax
0x402798:   0f 85 82 00 00 00                  	jne 0x402820 <__mingw_TLScallback+0xd0>
0x40279e:   8b 05 44 51 00 00                  	mov eax, dword ptr [rip + 0x5144]
0x4027a4:   83 f8 01                           	cmp eax, 1
0x4027a7:   75 dc                              	jne 0x402785 <__mingw_TLScallback+0x35>
0x4027a9:   48 8b 0d 30 51 00 00               	mov rcx, qword ptr [rip + 0x5130]
0x4027b0:   48 85 c9                           	test rcx, rcx
0x4027b3:   74 11                              	je 0x4027c6 <__mingw_TLScallback+0x76>
0x4027b5:   48 8b 59 10                        	mov rbx, qword ptr [rcx + 0x10]
0x4027b9:   e8 12 05 00 00                     	call 0x402cd0 <free>
0x4027be:   48 85 db                           	test rbx, rbx
0x4027c1:   48 89 d9                           	mov rcx, rbx
0x4027c4:   75 ef                              	jne 0x4027b5 <__mingw_TLScallback+0x65>
0x4027c6:   48 8d 0d 33 51 00 00               	lea rcx, [rip + 0x5133]
0x4027cd:   48 c7 05 08 51 00 00 00 00 00 00   	mov qword ptr [rip + 0x5108], 0
0x4027d8:   c7 05 06 51 00 00 00 00 00 00      	mov dword ptr [rip + 0x5106], 0
0x4027e2:   ff 15 0c 5a 00 00                  	call qword ptr [rip + 0x5a0c] <DeleteCriticalSection>
0x4027e8:   eb 9b                              	jmp 0x402785 <__mingw_TLScallback+0x35>
; data inside code section at 0x4027ea -- 0x4027f0
0x4027ea:   66 0f 1f 44 00 00                                  |f..D..          |
0x4027f0:   8b 05 f2 50 00 00                  	mov eax, dword ptr [rip + 0x50f2]
0x4027f6:   85 c0                              	test eax, eax
0x4027f8:   74 16                              	je 0x402810 <__mingw_TLScallback+0xc0>
0x4027fa:   b8 01 00 00 00                     	mov eax, 1
0x4027ff:   c7 05 df 50 00 00 01 00 00 00      	mov dword ptr [rip + 0x50df], 1
0x402809:   48 83 c4 20                        	add rsp, 0x20
0x40280d:   5b                                 	pop rbx
0x40280e:   c3                                 	ret 
; data inside code section at 0x40280f -- 0x402810
0x40280f:   90                                                 |.               |
0x402810:   48 8d 0d e9 50 00 00               	lea rcx, [rip + 0x50e9]
0x402817:   ff 15 1f 5a 00 00                  	call qword ptr [rip + 0x5a1f] <InitializeCriticalSection>
0x40281d:   eb db                              	jmp 0x4027fa <__mingw_TLScallback+0xaa>
; data inside code section at 0x40281f -- 0x402820
0x40281f:   90                                                 |.               |
0x402820:   e8 9b fd ff ff                     	call 0x4025c0 <__mingwthr_run_key_dtors.part.0>
0x402825:   e9 74 ff ff ff                     	jmp 0x40279e <__mingw_TLScallback+0x4e>
; data inside code section at 0x40282a -- 0x402830
0x40282a:   90 90 90 90 90 90                                  |......          |
; function: _ValidateImageBase.part.0 at 0x402830 -- 0x40284e
0x402830:   48 63 41 3c                        	movsxd rax, dword ptr [rcx + 0x3c]
0x402834:   48 01 c1                           	add rcx, rax
0x402837:   31 c0                              	xor eax, eax
0x402839:   81 39 50 45 00 00                  	cmp dword ptr [rcx], 0x4550
0x40283f:   75 09                              	jne 0x40284a <_ValidateImageBase.part.0+0x1a>
0x402841:   66 81 79 18 0b 02                  	cmp word ptr [rcx + 0x18], 0x20b
0x402847:   0f 94 c0                           	sete al
0x40284a:   0f b6 c0                           	movzx eax, al
0x40284d:   c3                                 	ret 
; data inside code section at 0x40284e -- 0x402850
0x40284e:   66 90                                              |f.              |
; function: _ValidateImageBase at 0x402850 -- 0x402862
0x402850:   66 81 39 4d 5a                     	cmp word ptr [rcx], 0x5a4d
0x402855:   74 09                              	je 0x402860 <_ValidateImageBase+0x10>
0x402857:   31 c0                              	xor eax, eax
0x402859:   c3                                 	ret 
; data inside code section at 0x40285a -- 0x402860
0x40285a:   66 0f 1f 44 00 00                                  |f..D..          |
0x402860:   eb ce                              	jmp 0x402830 <_ValidateImageBase.part.0>
; data inside code section at 0x402862 -- 0x402870
0x402862:   0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: _FindPESection at 0x402870 -- 0x4028b5
0x402870:   48 63 41 3c                        	movsxd rax, dword ptr [rcx + 0x3c]
0x402874:   48 01 c1                           	add rcx, rax
0x402877:   0f b7 41 14                        	movzx eax, word ptr [rcx + 0x14]
0x40287b:   48 8d 44 01 18                     	lea rax, [rcx + rax + 0x18]
0x402880:   0f b7 49 06                        	movzx ecx, word ptr [rcx + 6]
0x402884:   85 c9                              	test ecx, ecx
0x402886:   74 29                              	je 0x4028b1 <_FindPESection+0x41>
0x402888:   83 e9 01                           	sub ecx, 1
0x40288b:   48 8d 0c 89                        	lea rcx, [rcx + rcx*4]
0x40288f:   4c 8d 4c c8 28                     	lea r9, [rax + rcx*8 + 0x28]
0x402894:   44 8b 40 0c                        	mov r8d, dword ptr [rax + 0xc]
0x402898:   49 39 d0                           	cmp r8, rdx
0x40289b:   4c 89 c1                           	mov rcx, r8
0x40289e:   77 08                              	ja 0x4028a8 <_FindPESection+0x38>
0x4028a0:   03 48 08                           	add ecx, dword ptr [rax + 8]
0x4028a3:   48 39 ca                           	cmp rdx, rcx
0x4028a6:   72 0b                              	jb 0x4028b3 <_FindPESection+0x43>
0x4028a8:   48 83 c0 28                        	add rax, 0x28
0x4028ac:   4c 39 c8                           	cmp rax, r9
0x4028af:   75 e3                              	jne 0x402894 <_FindPESection+0x24>
0x4028b1:   31 c0                              	xor eax, eax
0x4028b3:   f3 c3                              	ret 
; data inside code section at 0x4028b5 -- 0x4028c0
0x4028b5:   90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: _FindPESectionByName at 0x4028c0 -- 0x40294b
0x4028c0:   57                                 	push rdi
0x4028c1:   56                                 	push rsi
0x4028c2:   53                                 	push rbx
0x4028c3:   48 83 ec 20                        	sub rsp, 0x20
0x4028c7:   48 89 ce                           	mov rsi, rcx
0x4028ca:   e8 d1 03 00 00                     	call 0x402ca0 <strlen>
0x4028cf:   48 83 f8 08                        	cmp rax, 8
0x4028d3:   77 69                              	ja 0x40293e <_FindPESectionByName+0x7e>
0x4028d5:   48 8b 15 54 1b 00 00               	mov rdx, qword ptr [rip + 0x1b54]
0x4028dc:   31 db                              	xor ebx, ebx
0x4028de:   66 81 3a 4d 5a                     	cmp word ptr [rdx], 0x5a4d
0x4028e3:   74 0b                              	je 0x4028f0 <_FindPESectionByName+0x30>
0x4028e5:   48 89 d8                           	mov rax, rbx
0x4028e8:   48 83 c4 20                        	add rsp, 0x20
0x4028ec:   5b                                 	pop rbx
0x4028ed:   5e                                 	pop rsi
0x4028ee:   5f                                 	pop rdi
0x4028ef:   c3                                 	ret 
0x4028f0:   48 89 d1                           	mov rcx, rdx
0x4028f3:   e8 38 ff ff ff                     	call 0x402830 <_ValidateImageBase.part.0>
0x4028f8:   85 c0                              	test eax, eax
0x4028fa:   74 e9                              	je 0x4028e5 <_FindPESectionByName+0x25>
0x4028fc:   48 63 42 3c                        	movsxd rax, dword ptr [rdx + 0x3c]
0x402900:   48 01 d0                           	add rax, rdx
0x402903:   0f b7 50 14                        	movzx edx, word ptr [rax + 0x14]
0x402907:   48 8d 5c 10 18                     	lea rbx, [rax + rdx + 0x18]
0x40290c:   0f b7 40 06                        	movzx eax, word ptr [rax + 6]
0x402910:   85 c0                              	test eax, eax
0x402912:   74 2a                              	je 0x40293e <_FindPESectionByName+0x7e>
0x402914:   83 e8 01                           	sub eax, 1
0x402917:   48 8d 04 80                        	lea rax, [rax + rax*4]
0x40291b:   48 8d 7c c3 28                     	lea rdi, [rbx + rax*8 + 0x28]
0x402920:   41 b8 08 00 00 00                  	mov r8d, 8
0x402926:   48 89 f2                           	mov rdx, rsi
0x402929:   48 89 d9                           	mov rcx, rbx
0x40292c:   e8 67 03 00 00                     	call 0x402c98 <strncmp>
0x402931:   85 c0                              	test eax, eax
0x402933:   74 b0                              	je 0x4028e5 <_FindPESectionByName+0x25>
0x402935:   48 83 c3 28                        	add rbx, 0x28
0x402939:   48 39 fb                           	cmp rbx, rdi
0x40293c:   75 e2                              	jne 0x402920 <_FindPESectionByName+0x60>
0x40293e:   31 db                              	xor ebx, ebx
0x402940:   48 89 d8                           	mov rax, rbx
0x402943:   48 83 c4 20                        	add rsp, 0x20
0x402947:   5b                                 	pop rbx
0x402948:   5e                                 	pop rsi
0x402949:   5f                                 	pop rdi
0x40294a:   c3                                 	ret 
; data inside code section at 0x40294b -- 0x402950
0x40294b:   0f 1f 44 00 00                                     |..D..           |
; function: __mingw_GetSectionForAddress at 0x402950 -- 0x4029d7
0x402950:   48 83 ec 28                        	sub rsp, 0x28
0x402954:   4c 8b 0d d5 1a 00 00               	mov r9, qword ptr [rip + 0x1ad5]
0x40295b:   31 d2                              	xor edx, edx
0x40295d:   49 89 c8                           	mov r8, rcx
0x402960:   66 41 81 39 4d 5a                  	cmp word ptr [r9], 0x5a4d
0x402966:   74 08                              	je 0x402970 <__mingw_GetSectionForAddress+0x20>
0x402968:   48 89 d0                           	mov rax, rdx
0x40296b:   48 83 c4 28                        	add rsp, 0x28
0x40296f:   c3                                 	ret 
0x402970:   4c 89 c9                           	mov rcx, r9
0x402973:   e8 b8 fe ff ff                     	call 0x402830 <_ValidateImageBase.part.0>
0x402978:   85 c0                              	test eax, eax
0x40297a:   74 ec                              	je 0x402968 <__mingw_GetSectionForAddress+0x18>
0x40297c:   49 63 41 3c                        	movsxd rax, dword ptr [r9 + 0x3c]
0x402980:   4c 89 c1                           	mov rcx, r8
0x402983:   4c 29 c9                           	sub rcx, r9
0x402986:   4c 01 c8                           	add rax, r9
0x402989:   0f b7 50 14                        	movzx edx, word ptr [rax + 0x14]
0x40298d:   48 8d 54 10 18                     	lea rdx, [rax + rdx + 0x18]
0x402992:   0f b7 40 06                        	movzx eax, word ptr [rax + 6]
0x402996:   85 c0                              	test eax, eax
0x402998:   74 33                              	je 0x4029cd <__mingw_GetSectionForAddress+0x7d>
0x40299a:   83 e8 01                           	sub eax, 1
0x40299d:   48 8d 04 80                        	lea rax, [rax + rax*4]
0x4029a1:   4c 8d 4c c2 28                     	lea r9, [rdx + rax*8 + 0x28]
0x4029a6:   66 2e 0f 1f 84 00 00 00 00 00      	nop word ptr cs:[rax + rax]
0x4029b0:   44 8b 42 0c                        	mov r8d, dword ptr [rdx + 0xc]
0x4029b4:   4c 39 c1                           	cmp rcx, r8
0x4029b7:   4c 89 c0                           	mov rax, r8
0x4029ba:   72 08                              	jb 0x4029c4 <__mingw_GetSectionForAddress+0x74>
0x4029bc:   03 42 08                           	add eax, dword ptr [rdx + 8]
0x4029bf:   48 39 c1                           	cmp rcx, rax
0x4029c2:   72 a4                              	jb 0x402968 <__mingw_GetSectionForAddress+0x18>
0x4029c4:   48 83 c2 28                        	add rdx, 0x28
0x4029c8:   4c 39 ca                           	cmp rdx, r9
0x4029cb:   75 e3                              	jne 0x4029b0 <__mingw_GetSectionForAddress+0x60>
0x4029cd:   31 d2                              	xor edx, edx
0x4029cf:   48 89 d0                           	mov rax, rdx
0x4029d2:   48 83 c4 28                        	add rsp, 0x28
0x4029d6:   c3                                 	ret 
; data inside code section at 0x4029d7 -- 0x4029e0
0x4029d7:   66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: __mingw_GetSectionCount at 0x4029e0 -- 0x402a1e
0x4029e0:   48 83 ec 28                        	sub rsp, 0x28
0x4029e4:   48 8b 15 45 1a 00 00               	mov rdx, qword ptr [rip + 0x1a45]
0x4029eb:   45 31 c0                           	xor r8d, r8d
0x4029ee:   66 81 3a 4d 5a                     	cmp word ptr [rdx], 0x5a4d
0x4029f3:   74 0b                              	je 0x402a00 <__mingw_GetSectionCount+0x20>
0x4029f5:   44 89 c0                           	mov eax, r8d
0x4029f8:   48 83 c4 28                        	add rsp, 0x28
0x4029fc:   c3                                 	ret 
; data inside code section at 0x4029fd -- 0x402a00
0x4029fd:   0f 1f 00                                           |...             |
0x402a00:   48 89 d1                           	mov rcx, rdx
0x402a03:   e8 28 fe ff ff                     	call 0x402830 <_ValidateImageBase.part.0>
0x402a08:   85 c0                              	test eax, eax
0x402a0a:   74 e9                              	je 0x4029f5 <__mingw_GetSectionCount+0x15>
0x402a0c:   48 63 42 3c                        	movsxd rax, dword ptr [rdx + 0x3c]
0x402a10:   44 0f b7 44 10 06                  	movzx r8d, word ptr [rax + rdx + 6]
0x402a16:   44 89 c0                           	mov eax, r8d
0x402a19:   48 83 c4 28                        	add rsp, 0x28
0x402a1d:   c3                                 	ret 
; data inside code section at 0x402a1e -- 0x402a20
0x402a1e:   66 90                                              |f.              |
; function: _FindPESectionExec at 0x402a20 -- 0x402a92
0x402a20:   48 83 ec 28                        	sub rsp, 0x28
0x402a24:   4c 8b 0d 05 1a 00 00               	mov r9, qword ptr [rip + 0x1a05]
0x402a2b:   31 d2                              	xor edx, edx
0x402a2d:   49 89 c8                           	mov r8, rcx
0x402a30:   66 41 81 39 4d 5a                  	cmp word ptr [r9], 0x5a4d
0x402a36:   74 08                              	je 0x402a40 <_FindPESectionExec+0x20>
0x402a38:   48 89 d0                           	mov rax, rdx
0x402a3b:   48 83 c4 28                        	add rsp, 0x28
0x402a3f:   c3                                 	ret 
0x402a40:   4c 89 c9                           	mov rcx, r9
0x402a43:   e8 e8 fd ff ff                     	call 0x402830 <_ValidateImageBase.part.0>
0x402a48:   85 c0                              	test eax, eax
0x402a4a:   74 ec                              	je 0x402a38 <_FindPESectionExec+0x18>
0x402a4c:   49 63 41 3c                        	movsxd rax, dword ptr [r9 + 0x3c]
0x402a50:   4c 01 c8                           	add rax, r9
0x402a53:   0f b7 50 14                        	movzx edx, word ptr [rax + 0x14]
0x402a57:   48 8d 54 10 18                     	lea rdx, [rax + rdx + 0x18]
0x402a5c:   0f b7 40 06                        	movzx eax, word ptr [rax + 6]
0x402a60:   85 c0                              	test eax, eax
0x402a62:   74 24                              	je 0x402a88 <_FindPESectionExec+0x68>
0x402a64:   83 e8 01                           	sub eax, 1
0x402a67:   48 8d 04 80                        	lea rax, [rax + rax*4]
0x402a6b:   48 8d 44 c2 28                     	lea rax, [rdx + rax*8 + 0x28]
0x402a70:   f6 42 27 20                        	test byte ptr [rdx + 0x27], 0x20
0x402a74:   74 09                              	je 0x402a7f <_FindPESectionExec+0x5f>
0x402a76:   4d 85 c0                           	test r8, r8
0x402a79:   74 bd                              	je 0x402a38 <_FindPESectionExec+0x18>
0x402a7b:   49 83 e8 01                        	sub r8, 1
0x402a7f:   48 83 c2 28                        	add rdx, 0x28
0x402a83:   48 39 c2                           	cmp rdx, rax
0x402a86:   75 e8                              	jne 0x402a70 <_FindPESectionExec+0x50>
0x402a88:   31 d2                              	xor edx, edx
0x402a8a:   48 89 d0                           	mov rax, rdx
0x402a8d:   48 83 c4 28                        	add rsp, 0x28
0x402a91:   c3                                 	ret 
; data inside code section at 0x402a92 -- 0x402aa0
0x402a92:   0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: _GetPEImageBase at 0x402aa0 -- 0x402ad6
0x402aa0:   48 83 ec 28                        	sub rsp, 0x28
0x402aa4:   4c 8b 05 85 19 00 00               	mov r8, qword ptr [rip + 0x1985]
0x402aab:   31 d2                              	xor edx, edx
0x402aad:   66 41 81 38 4d 5a                  	cmp word ptr [r8], 0x5a4d
0x402ab3:   74 0b                              	je 0x402ac0 <_GetPEImageBase+0x20>
0x402ab5:   48 89 d0                           	mov rax, rdx
0x402ab8:   48 83 c4 28                        	add rsp, 0x28
0x402abc:   c3                                 	ret 
; data inside code section at 0x402abd -- 0x402ac0
0x402abd:   0f 1f 00                                           |...             |
0x402ac0:   4c 89 c1                           	mov rcx, r8
0x402ac3:   e8 68 fd ff ff                     	call 0x402830 <_ValidateImageBase.part.0>
0x402ac8:   85 c0                              	test eax, eax
0x402aca:   49 0f 45 d0                        	cmovne rdx, r8
0x402ace:   48 89 d0                           	mov rax, rdx
0x402ad1:   48 83 c4 28                        	add rsp, 0x28
0x402ad5:   c3                                 	ret 
; data inside code section at 0x402ad6 -- 0x402ae0
0x402ad6:   66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: _IsNonwritableInCurrentImage at 0x402ae0 -- 0x402b71
0x402ae0:   48 83 ec 28                        	sub rsp, 0x28
0x402ae4:   4c 8b 05 45 19 00 00               	mov r8, qword ptr [rip + 0x1945]
0x402aeb:   31 c0                              	xor eax, eax
0x402aed:   48 89 ca                           	mov rdx, rcx
0x402af0:   66 41 81 38 4d 5a                  	cmp word ptr [r8], 0x5a4d
0x402af6:   74 08                              	je 0x402b00 <_IsNonwritableInCurrentImage+0x20>
0x402af8:   48 83 c4 28                        	add rsp, 0x28
0x402afc:   c3                                 	ret 
; data inside code section at 0x402afd -- 0x402b00
0x402afd:   0f 1f 00                                           |...             |
0x402b00:   4c 89 c1                           	mov rcx, r8
0x402b03:   e8 28 fd ff ff                     	call 0x402830 <_ValidateImageBase.part.0>
0x402b08:   85 c0                              	test eax, eax
0x402b0a:   74 ec                              	je 0x402af8 <_IsNonwritableInCurrentImage+0x18>
0x402b0c:   49 63 40 3c                        	movsxd rax, dword ptr [r8 + 0x3c]
0x402b10:   48 89 d1                           	mov rcx, rdx
0x402b13:   4c 29 c1                           	sub rcx, r8
0x402b16:   49 01 c0                           	add r8, rax
0x402b19:   41 0f b7 50 06                     	movzx edx, word ptr [r8 + 6]
0x402b1e:   41 0f b7 40 14                     	movzx eax, word ptr [r8 + 0x14]
0x402b23:   85 d2                              	test edx, edx
0x402b25:   49 8d 44 00 18                     	lea rax, [r8 + rax + 0x18]
0x402b2a:   74 31                              	je 0x402b5d <_IsNonwritableInCurrentImage+0x7d>
0x402b2c:   83 ea 01                           	sub edx, 1
0x402b2f:   48 8d 14 92                        	lea rdx, [rdx + rdx*4]
0x402b33:   4c 8d 4c d0 28                     	lea r9, [rax + rdx*8 + 0x28]
0x402b38:   0f 1f 84 00 00 00 00 00            	nop dword ptr [rax + rax]
0x402b40:   44 8b 40 0c                        	mov r8d, dword ptr [rax + 0xc]
0x402b44:   4c 39 c1                           	cmp rcx, r8
0x402b47:   4c 89 c2                           	mov rdx, r8
0x402b4a:   72 08                              	jb 0x402b54 <_IsNonwritableInCurrentImage+0x74>
0x402b4c:   03 50 08                           	add edx, dword ptr [rax + 8]
0x402b4f:   48 39 d1                           	cmp rcx, rdx
0x402b52:   72 10                              	jb 0x402b64 <_IsNonwritableInCurrentImage+0x84>
0x402b54:   48 83 c0 28                        	add rax, 0x28
0x402b58:   4c 39 c8                           	cmp rax, r9
0x402b5b:   75 e3                              	jne 0x402b40 <_IsNonwritableInCurrentImage+0x60>
0x402b5d:   31 c0                              	xor eax, eax
0x402b5f:   48 83 c4 28                        	add rsp, 0x28
0x402b63:   c3                                 	ret 
0x402b64:   8b 40 24                           	mov eax, dword ptr [rax + 0x24]
0x402b67:   f7 d0                              	not eax
0x402b69:   c1 e8 1f                           	shr eax, 0x1f
0x402b6c:   48 83 c4 28                        	add rsp, 0x28
0x402b70:   c3                                 	ret 
; data inside code section at 0x402b71 -- 0x402b80
0x402b71:   0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: __mingw_enum_import_library_names at 0x402b80 -- 0x402c4a
0x402b80:   48 83 ec 28                        	sub rsp, 0x28
0x402b84:   4c 8b 1d a5 18 00 00               	mov r11, qword ptr [rip + 0x18a5]
0x402b8b:   45 31 c9                           	xor r9d, r9d
0x402b8e:   41 89 c8                           	mov r8d, ecx
0x402b91:   66 41 81 3b 4d 5a                  	cmp word ptr [r11], 0x5a4d
0x402b97:   74 08                              	je 0x402ba1 <__mingw_enum_import_library_names+0x21>
0x402b99:   4c 89 c8                           	mov rax, r9
0x402b9c:   48 83 c4 28                        	add rsp, 0x28
0x402ba0:   c3                                 	ret 
0x402ba1:   4c 89 d9                           	mov rcx, r11
0x402ba4:   e8 87 fc ff ff                     	call 0x402830 <_ValidateImageBase.part.0>
0x402ba9:   85 c0                              	test eax, eax
0x402bab:   74 ec                              	je 0x402b99 <__mingw_enum_import_library_names+0x19>
0x402bad:   49 63 4b 3c                        	movsxd rcx, dword ptr [r11 + 0x3c]
0x402bb1:   4c 01 d9                           	add rcx, r11
0x402bb4:   8b 81 90 00 00 00                  	mov eax, dword ptr [rcx + 0x90]
0x402bba:   85 c0                              	test eax, eax
0x402bbc:   74 db                              	je 0x402b99 <__mingw_enum_import_library_names+0x19>
0x402bbe:   0f b7 51 14                        	movzx edx, word ptr [rcx + 0x14]
0x402bc2:   48 8d 54 11 18                     	lea rdx, [rcx + rdx + 0x18]
0x402bc7:   0f b7 49 06                        	movzx ecx, word ptr [rcx + 6]
0x402bcb:   85 c9                              	test ecx, ecx
0x402bcd:   74 ca                              	je 0x402b99 <__mingw_enum_import_library_names+0x19>
0x402bcf:   83 e9 01                           	sub ecx, 1
0x402bd2:   48 8d 0c 89                        	lea rcx, [rcx + rcx*4]
0x402bd6:   4c 8d 54 ca 28                     	lea r10, [rdx + rcx*8 + 0x28]
0x402bdb:   0f 1f 44 00 00                     	nop dword ptr [rax + rax]
0x402be0:   44 8b 4a 0c                        	mov r9d, dword ptr [rdx + 0xc]
0x402be4:   4c 39 c8                           	cmp rax, r9
0x402be7:   4c 89 c9                           	mov rcx, r9
0x402bea:   72 08                              	jb 0x402bf4 <__mingw_enum_import_library_names+0x74>
0x402bec:   03 4a 08                           	add ecx, dword ptr [rdx + 8]
0x402bef:   48 39 c8                           	cmp rax, rcx
0x402bf2:   72 1c                              	jb 0x402c10 <__mingw_enum_import_library_names+0x90>
0x402bf4:   48 83 c2 28                        	add rdx, 0x28
0x402bf8:   4c 39 d2                           	cmp rdx, r10
0x402bfb:   75 e3                              	jne 0x402be0 <__mingw_enum_import_library_names+0x60>
0x402bfd:   45 31 c9                           	xor r9d, r9d
0x402c00:   4c 89 c8                           	mov rax, r9
0x402c03:   48 83 c4 28                        	add rsp, 0x28
0x402c07:   c3                                 	ret 
; data inside code section at 0x402c08 -- 0x402c10
0x402c08:   0f 1f 84 00 00 00 00 00                            |........        |
0x402c10:   4c 01 d8                           	add rax, r11
0x402c13:   75 13                              	jne 0x402c28 <__mingw_enum_import_library_names+0xa8>
0x402c15:   eb e6                              	jmp 0x402bfd <__mingw_enum_import_library_names+0x7d>
; data inside code section at 0x402c17 -- 0x402c20
0x402c17:   66 0f 1f 84 00 00 00 00  00                        |f........       |
0x402c20:   41 83 e8 01                        	sub r8d, 1
0x402c24:   48 83 c0 14                        	add rax, 0x14
0x402c28:   8b 48 04                           	mov ecx, dword ptr [rax + 4]
0x402c2b:   85 c9                              	test ecx, ecx
0x402c2d:   75 07                              	jne 0x402c36 <__mingw_enum_import_library_names+0xb6>
0x402c2f:   8b 50 0c                           	mov edx, dword ptr [rax + 0xc]
0x402c32:   85 d2                              	test edx, edx
0x402c34:   74 c7                              	je 0x402bfd <__mingw_enum_import_library_names+0x7d>
0x402c36:   45 85 c0                           	test r8d, r8d
0x402c39:   7f e5                              	jg 0x402c20 <__mingw_enum_import_library_names+0xa0>
0x402c3b:   44 8b 48 0c                        	mov r9d, dword ptr [rax + 0xc]
0x402c3f:   4d 01 d9                           	add r9, r11
0x402c42:   4c 89 c8                           	mov rax, r9
0x402c45:   48 83 c4 28                        	add rsp, 0x28
0x402c49:   c3                                 	ret 
; data inside code section at 0x402c4a -- 0x402c50
0x402c4a:   90 90 90 90 90 90                                  |......          |
; function: ___chkstk_ms at 0x402c50 -- 0x402c82
0x402c50:   51                                 	push rcx
0x402c51:   50                                 	push rax
0x402c52:   48 3d 00 10 00 00                  	cmp rax, 0x1000
0x402c58:   48 8d 4c 24 18                     	lea rcx, [rsp + 0x18]
0x402c5d:   72 19                              	jb 0x402c78 <___chkstk_ms+0x28>
0x402c5f:   48 81 e9 00 10 00 00               	sub rcx, 0x1000
0x402c66:   48 83 09 00                        	or qword ptr [rcx], 0
0x402c6a:   48 2d 00 10 00 00                  	sub rax, 0x1000
0x402c70:   48 3d 00 10 00 00                  	cmp rax, 0x1000
0x402c76:   77 e7                              	ja 0x402c5f <___chkstk_ms+0xf>
0x402c78:   48 29 c1                           	sub rcx, rax
0x402c7b:   48 83 09 00                        	or qword ptr [rcx], 0
0x402c7f:   58                                 	pop rax
0x402c80:   59                                 	pop rcx
0x402c81:   c3                                 	ret 
; data inside code section at 0x402c82 -- 0x402c90
0x402c82:   90 90 90 90 90 90 90 90  90 90 90 90 90 90         |..............  |
; function: vfprintf at 0x402c90 -- 0x402c96
0x402c90:   ff 25 06 57 00 00                  	jmp qword ptr [rip + 0x5706] <vfprintf>
; data inside code section at 0x402c96 -- 0x402c98
0x402c96:   90 90                                              |..              |
; function: strncmp at 0x402c98 -- 0x402c9e
0x402c98:   ff 25 f6 56 00 00                  	jmp qword ptr [rip + 0x56f6] <strncmp>
; data inside code section at 0x402c9e -- 0x402ca0
0x402c9e:   90 90                                              |..              |
; function: strlen at 0x402ca0 -- 0x402ca6
0x402ca0:   ff 25 e6 56 00 00                  	jmp qword ptr [rip + 0x56e6] <strlen>
; data inside code section at 0x402ca6 -- 0x402ca8
0x402ca6:   90 90                                              |..              |
; function: signal at 0x402ca8 -- 0x402cae
0x402ca8:   ff 25 d6 56 00 00                  	jmp qword ptr [rip + 0x56d6] <signal>
; data inside code section at 0x402cae -- 0x402cb0
0x402cae:   90 90                                              |..              |
; function: puts at 0x402cb0 -- 0x402cb6
0x402cb0:   ff 25 c6 56 00 00                  	jmp qword ptr [rip + 0x56c6] <puts>
; data inside code section at 0x402cb6 -- 0x402cb8
0x402cb6:   90 90                                              |..              |
; function: memcpy at 0x402cb8 -- 0x402cbe
0x402cb8:   ff 25 b6 56 00 00                  	jmp qword ptr [rip + 0x56b6] <memcpy>
; data inside code section at 0x402cbe -- 0x402cc0
0x402cbe:   90 90                                              |..              |
; function: malloc at 0x402cc0 -- 0x402cc6
0x402cc0:   ff 25 a6 56 00 00                  	jmp qword ptr [rip + 0x56a6] <malloc>
; data inside code section at 0x402cc6 -- 0x402cc8
0x402cc6:   90 90                                              |..              |
; function: fwrite at 0x402cc8 -- 0x402cce
0x402cc8:   ff 25 96 56 00 00                  	jmp qword ptr [rip + 0x5696] <fwrite>
; data inside code section at 0x402cce -- 0x402cd0
0x402cce:   90 90                                              |..              |
; function: free at 0x402cd0 -- 0x402cd6
0x402cd0:   ff 25 86 56 00 00                  	jmp qword ptr [rip + 0x5686] <free>
; data inside code section at 0x402cd6 -- 0x402cd8
0x402cd6:   90 90                                              |..              |
; function: fprintf at 0x402cd8 -- 0x402cde
0x402cd8:   ff 25 76 56 00 00                  	jmp qword ptr [rip + 0x5676] <fprintf>
; data inside code section at 0x402cde -- 0x402ce0
0x402cde:   90 90                                              |..              |
; function: fgets at 0x402ce0 -- 0x402ce6
0x402ce0:   ff 25 66 56 00 00                  	jmp qword ptr [rip + 0x5666] <fgets>
; data inside code section at 0x402ce6 -- 0x402ce8
0x402ce6:   90 90                                              |..              |
; function: exit at 0x402ce8 -- 0x402cee
0x402ce8:   ff 25 56 56 00 00                  	jmp qword ptr [rip + 0x5656] <exit>
; data inside code section at 0x402cee -- 0x402cf0
0x402cee:   90 90                                              |..              |
; function: calloc at 0x402cf0 -- 0x402cf6
0x402cf0:   ff 25 46 56 00 00                  	jmp qword ptr [rip + 0x5646] <calloc>
; data inside code section at 0x402cf6 -- 0x402cf8
0x402cf6:   90 90                                              |..              |
; function: abort at 0x402cf8 -- 0x402cfe
0x402cf8:   ff 25 36 56 00 00                  	jmp qword ptr [rip + 0x5636] <abort>
; data inside code section at 0x402cfe -- 0x402d00
0x402cfe:   90 90                                              |..              |
; function: _unlock at 0x402d00 -- 0x402d06
0x402d00:   ff 25 26 56 00 00                  	jmp qword ptr [rip + 0x5626] <_unlock>
; data inside code section at 0x402d06 -- 0x402d08
0x402d06:   90 90                                              |..              |
; function: _onexit at 0x402d08 -- 0x402d0e
0x402d08:   ff 25 16 56 00 00                  	jmp qword ptr [rip + 0x5616] <_onexit>
; data inside code section at 0x402d0e -- 0x402d10
0x402d0e:   90 90                                              |..              |
; function: _lock at 0x402d10 -- 0x402d16
0x402d10:   ff 25 06 56 00 00                  	jmp qword ptr [rip + 0x5606] <_lock>
; data inside code section at 0x402d16 -- 0x402d18
0x402d16:   90 90                                              |..              |
; function: _initterm at 0x402d18 -- 0x402d1e
0x402d18:   ff 25 f6 55 00 00                  	jmp qword ptr [rip + 0x55f6] <_initterm>
; data inside code section at 0x402d1e -- 0x402d20
0x402d1e:   90 90                                              |..              |
; function: _cexit at 0x402d20 -- 0x402d26
0x402d20:   ff 25 de 55 00 00                  	jmp qword ptr [rip + 0x55de] <_cexit>
; data inside code section at 0x402d26 -- 0x402d28
0x402d26:   90 90                                              |..              |
; function: _amsg_exit at 0x402d28 -- 0x402d2e
0x402d28:   ff 25 ce 55 00 00                  	jmp qword ptr [rip + 0x55ce] <_amsg_exit>
; data inside code section at 0x402d2e -- 0x402d30
0x402d2e:   90 90                                              |..              |
; function: __setusermatherr at 0x402d30 -- 0x402d36
0x402d30:   ff 25 b6 55 00 00                  	jmp qword ptr [rip + 0x55b6] <__setusermatherr>
; data inside code section at 0x402d36 -- 0x402d38
0x402d36:   90 90                                              |..              |
; function: __set_app_type at 0x402d38 -- 0x402d3e
0x402d38:   ff 25 a6 55 00 00                  	jmp qword ptr [rip + 0x55a6] <__set_app_type>
; data inside code section at 0x402d3e -- 0x402d40
0x402d3e:   90 90                                              |..              |
; function: __lconv_init at 0x402d40 -- 0x402d46
0x402d40:   ff 25 96 55 00 00                  	jmp qword ptr [rip + 0x5596] <__lconv_init>
; data inside code section at 0x402d46 -- 0x402d48
0x402d46:   90 90                                              |..              |
; function: __iob_func at 0x402d48 -- 0x402d4e
0x402d48:   ff 25 86 55 00 00                  	jmp qword ptr [rip + 0x5586] <__iob_func>
; data inside code section at 0x402d4e -- 0x402d50
0x402d4e:   90 90                                              |..              |
; function: __getmainargs at 0x402d50 -- 0x402d56
0x402d50:   ff 25 6e 55 00 00                  	jmp qword ptr [rip + 0x556e] <__getmainargs>
; data inside code section at 0x402d56 -- 0x402d58
0x402d56:   90 90                                              |..              |
; function: __dllonexit at 0x402d58 -- 0x402d5e
0x402d58:   ff 25 5e 55 00 00                  	jmp qword ptr [rip + 0x555e] <__dllonexit>
; data inside code section at 0x402d5e -- 0x402d60
0x402d5e:   90 90                                              |..              |
; function: __C_specific_handler at 0x402d60 -- 0x402d66
0x402d60:   ff 25 4e 55 00 00                  	jmp qword ptr [rip + 0x554e] <__C_specific_handler>
; data inside code section at 0x402d66 -- 0x402d70
0x402d66:   90 90 0f 1f 84 00 00 00  00 00                     |..........      |
; function: mingw_get_invalid_parameter_handler at 0x402d70 -- 0x402d78
0x402d70:   48 8b 05 d9 4b 00 00               	mov rax, qword ptr [rip + 0x4bd9]
0x402d77:   c3                                 	ret 
; data inside code section at 0x402d78 -- 0x402d80
0x402d78:   0f 1f 84 00 00 00 00 00                            |........        |
; function: mingw_set_invalid_parameter_handler at 0x402d80 -- 0x402d8b
0x402d80:   48 89 c8                           	mov rax, rcx
0x402d83:   48 87 05 c6 4b 00 00               	xchg qword ptr [rip + 0x4bc6], rax
0x402d8a:   c3                                 	ret 
; data inside code section at 0x402d8b -- 0x402d90
0x402d8b:   90 90 90 90 90                                     |.....           |
; function: VirtualQuery at 0x402d90 -- 0x402d96
0x402d90:   ff 25 0e 55 00 00                  	jmp qword ptr [rip + 0x550e] <VirtualQuery>
; data inside code section at 0x402d96 -- 0x402d98
0x402d96:   90 90                                              |..              |
; function: VirtualProtect at 0x402d98 -- 0x402d9e
0x402d98:   ff 25 fe 54 00 00                  	jmp qword ptr [rip + 0x54fe] <VirtualProtect>
; data inside code section at 0x402d9e -- 0x402da0
0x402d9e:   90 90                                              |..              |
; function: UnhandledExceptionFilter at 0x402da0 -- 0x402da6
0x402da0:   ff 25 ee 54 00 00                  	jmp qword ptr [rip + 0x54ee] <UnhandledExceptionFilter>
; data inside code section at 0x402da6 -- 0x402da8
0x402da6:   90 90                                              |..              |
; function: TlsGetValue at 0x402da8 -- 0x402dae
0x402da8:   ff 25 de 54 00 00                  	jmp qword ptr [rip + 0x54de] <TlsGetValue>
; data inside code section at 0x402dae -- 0x402db0
0x402dae:   90 90                                              |..              |
; function: TerminateProcess at 0x402db0 -- 0x402db6
0x402db0:   ff 25 ce 54 00 00                  	jmp qword ptr [rip + 0x54ce] <TerminateProcess>
; data inside code section at 0x402db6 -- 0x402db8
0x402db6:   90 90                                              |..              |
; function: Sleep at 0x402db8 -- 0x402dbe
0x402db8:   ff 25 be 54 00 00                  	jmp qword ptr [rip + 0x54be] <Sleep>
; data inside code section at 0x402dbe -- 0x402dc0
0x402dbe:   90 90                                              |..              |
; function: SetUnhandledExceptionFilter at 0x402dc0 -- 0x402dc6
0x402dc0:   ff 25 ae 54 00 00                  	jmp qword ptr [rip + 0x54ae] <SetUnhandledExceptionFilter>
; data inside code section at 0x402dc6 -- 0x402dc8
0x402dc6:   90 90                                              |..              |
; function: RtlVirtualUnwind at 0x402dc8 -- 0x402dce
0x402dc8:   ff 25 9e 54 00 00                  	jmp qword ptr [rip + 0x549e] <RtlVirtualUnwind>
; data inside code section at 0x402dce -- 0x402dd0
0x402dce:   90 90                                              |..              |
; function: RtlLookupFunctionEntry at 0x402dd0 -- 0x402dd6
0x402dd0:   ff 25 8e 54 00 00                  	jmp qword ptr [rip + 0x548e] <RtlLookupFunctionEntry>
; data inside code section at 0x402dd6 -- 0x402dd8
0x402dd6:   90 90                                              |..              |
; function: RtlCaptureContext at 0x402dd8 -- 0x402dde
0x402dd8:   ff 25 7e 54 00 00                  	jmp qword ptr [rip + 0x547e] <RtlCaptureContext>
; data inside code section at 0x402dde -- 0x402de0
0x402dde:   90 90                                              |..              |
; function: RtlAddFunctionTable at 0x402de0 -- 0x402de6
0x402de0:   ff 25 6e 54 00 00                  	jmp qword ptr [rip + 0x546e] <RtlAddFunctionTable>
; data inside code section at 0x402de6 -- 0x402de8
0x402de6:   90 90                                              |..              |
; function: QueryPerformanceCounter at 0x402de8 -- 0x402dee
0x402de8:   ff 25 5e 54 00 00                  	jmp qword ptr [rip + 0x545e] <QueryPerformanceCounter>
; data inside code section at 0x402dee -- 0x402df0
0x402dee:   90 90                                              |..              |
; function: LeaveCriticalSection at 0x402df0 -- 0x402df6
0x402df0:   ff 25 4e 54 00 00                  	jmp qword ptr [rip + 0x544e] <LeaveCriticalSection>
; data inside code section at 0x402df6 -- 0x402df8
0x402df6:   90 90                                              |..              |
; function: InitializeCriticalSection at 0x402df8 -- 0x402dfe
0x402df8:   ff 25 3e 54 00 00                  	jmp qword ptr [rip + 0x543e] <InitializeCriticalSection>
; data inside code section at 0x402dfe -- 0x402e00
0x402dfe:   90 90                                              |..              |
; function: GetTickCount at 0x402e00 -- 0x402e06
0x402e00:   ff 25 2e 54 00 00                  	jmp qword ptr [rip + 0x542e] <GetTickCount>
; data inside code section at 0x402e06 -- 0x402e08
0x402e06:   90 90                                              |..              |
; function: GetSystemTimeAsFileTime at 0x402e08 -- 0x402e0e
0x402e08:   ff 25 1e 54 00 00                  	jmp qword ptr [rip + 0x541e] <GetSystemTimeAsFileTime>
; data inside code section at 0x402e0e -- 0x402e10
0x402e0e:   90 90                                              |..              |
; function: GetStartupInfoA at 0x402e10 -- 0x402e16
0x402e10:   ff 25 0e 54 00 00                  	jmp qword ptr [rip + 0x540e] <GetStartupInfoA>
; data inside code section at 0x402e16 -- 0x402e18
0x402e16:   90 90                                              |..              |
; function: GetLastError at 0x402e18 -- 0x402e1e
0x402e18:   ff 25 fe 53 00 00                  	jmp qword ptr [rip + 0x53fe] <GetLastError>
; data inside code section at 0x402e1e -- 0x402e20
0x402e1e:   90 90                                              |..              |
; function: GetCurrentThreadId at 0x402e20 -- 0x402e26
0x402e20:   ff 25 ee 53 00 00                  	jmp qword ptr [rip + 0x53ee] <GetCurrentThreadId>
; data inside code section at 0x402e26 -- 0x402e28
0x402e26:   90 90                                              |..              |
; function: GetCurrentProcessId at 0x402e28 -- 0x402e2e
0x402e28:   ff 25 de 53 00 00                  	jmp qword ptr [rip + 0x53de] <GetCurrentProcessId>
; data inside code section at 0x402e2e -- 0x402e30
0x402e2e:   90 90                                              |..              |
; function: GetCurrentProcess at 0x402e30 -- 0x402e36
0x402e30:   ff 25 ce 53 00 00                  	jmp qword ptr [rip + 0x53ce] <GetCurrentProcess>
; data inside code section at 0x402e36 -- 0x402e38
0x402e36:   90 90                                              |..              |
; function: EnterCriticalSection at 0x402e38 -- 0x402e3e
0x402e38:   ff 25 be 53 00 00                  	jmp qword ptr [rip + 0x53be] <EnterCriticalSection>
; data inside code section at 0x402e3e -- 0x402e40
0x402e3e:   90 90                                              |..              |
; function: DeleteCriticalSection at 0x402e40 -- 0x402e46
0x402e40:   ff 25 ae 53 00 00                  	jmp qword ptr [rip + 0x53ae] <DeleteCriticalSection>
; data inside code section at 0x402e46 -- 0x402e50
0x402e46:   90 90 0f 1f 84 00 00 00  00 00                     |..........      |
; function: register_frame_ctor at 0x402e50 -- 0x402e5a
0x402e50:   55                                 	push rbp
0x402e51:   48 89 e5                           	mov rbp, rsp
0x402e54:   5d                                 	pop rbp
0x402e55:   e9 d6 e6 ff ff                     	jmp 0x401530 <__gcc_register_frame>
; data inside code section at 0x402e5a -- 0x402e88
0x402e5a:   90 90 90 90 90 90 ff ff  ff ff ff ff ff ff 50 2e   |..............P.|
0x402e6a:   40 00 00 00 00 00 00 00  00 00 00 00 00 00 ff ff   |@...............|
0x402e7a:   ff ff ff ff ff ff 00 00  00 00 00 00 00 00         |..............  |

;;
;; Data Segment
;;

; section: .data
0x403000:   0a 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x403010:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x403020:   d6 7b e8 61 68 6f cc 63  f2 6b f6 74 be 34 de 66   |.{.aho.c.k.t.4.f|
0x403030:   da 79 d6 7b 68 5f 68 6f  f2 6d f2 6b c4 34 be 34   |.y.{h_ho.m.k.4.4|
0x403040:   66 79 da 79 be 62 68 5f  d8 33 f2 6d d2 5f c4 34   |fy.y.bh_.3.m._.4|
0x403050:   dc 6c 66 79 ea 69 be 62  f0 6e d8 33 be 75 d2 5f   |.lfy.i.b.n.3.u._|
0x403060:   d2 78 dc 6c e6 5f ea 69  be 69 f0 6e e6 73 be 75   |.x.l._.i.i.n.s.u|
0x403070:   6e 5f d2 78 d2 73 e6 5f  d8 37 be 69 d8 69 e6 73   |n_.x.s._.7.i.i.s|
0x403080:   be 6c 6e 5f c4 6c d2 73  66 5f d8 37 e8 62 d8 69   |.ln_.l.sf_.7.b.i|
0x403090:   e8 33 be 6c 66 74 c4 6c  e4 74 66 5f fa 33 e8 62   |.3.lft.l.tf_.3.b|
0x4030a0:   61 63 74 66 7b 6f 6b 34  79 5f 6d 34 79 62 33 5f   |actf{ok4y_m4yb3_|   "actf{ok4y_m4yb3_linux_is_s7ill_b3tt3r}"
0x4030b0:   6c 69 6e 75 78 5f 69 73  5f 73 37 69 6c 6c 5f 62   |linux_is_s7ill_b|
0x4030c0:   33 74 74 33 72 7d 00                               |3tt3r}.         |
0x4030c7:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4030d7:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4030e7:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4030f7:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x403107:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x403117:   00 00 00 00 00 00 00 00  00 80 2e 40 00 00 00 00   |...........@....|
0x403127:   00 00 00 00 00 00 00 00  00 ff ff ff ff ff ff ff   |................|
0x403137:   ff 00 00 00 00 00 00 00  00 ff 00 00 00 00 00 00   |................|
0x403147:   00 00 00 00 00 00 00 00  00 02 00 00 00 00 00 00   |................|
0x403157:   00 00 00 00 00 00 00 00  00 ff ff ff ff 00 00 00   |................|
0x403167:   00 00 00 00 00 00 00 00  00 70 2d 40 00 00 00 00   |.........p-@....|
0x403177:   00 80 2d 40 00 00 00 00  00 32 a2 df 2d 99 2b 00   |..-@.....2..-.+.|
0x403187:   00 00 00 00 00 00 00 00  00 cd 5d 20 d2 66 d4 ff   |..........] .f..|
0x403197:   ff 00 00 00 00 00 00 00  00 ??                     |.........?      |
; section: .rdata
0x404000:   57 65 6c 63 6f 6d 65 20  74 6f 20 74 68 65 20 73   |Welcome to the s|   "Welcome to the superior rev challenge compiled for the superior operating system!"
0x404010:   75 70 65 72 69 6f 72 20  72 65 76 20 63 68 61 6c   |uperior rev chal|
0x404020:   6c 65 6e 67 65 20 63 6f  6d 70 69 6c 65 64 20 66   |lenge compiled f|
0x404030:   6f 72 20 74 68 65 20 73  75 70 65 72 69 6f 72 20   |or the superior |
0x404040:   6f 70 65 72 61 74 69 6e  67 20 73 79 73 74 65 6d   |operating system|
0x404050:   21 00                                              |!.              |
0x404052:   00 00 00 00 00 00                                  |......          |
0x404058:   57 68 61 74 27 73 20 74  68 65 20 73 75 70 65 72   |What's the super|   "What's the superior flag for this superior rev challenge?"
0x404068:   69 6f 72 20 66 6c 61 67  20 66 6f 72 20 74 68 69   |ior flag for thi|
0x404078:   73 20 73 75 70 65 72 69  6f 72 20 72 65 76 20 63   |s superior rev c|
0x404088:   68 61 6c 6c 65 6e 67 65  3f 00                     |hallenge?.      |
0x404092:   00 00 00 00 00 00                                  |......          |
0x404098:   59 6f 75 72 20 66 6c 61  67 20 69 73 20 77 61 79   |Your flag is way|   "Your flag is way too different from my superior flag!"
0x4040a8:   20 74 6f 6f 20 64 69 66  66 65 72 65 6e 74 20 66   | too different f|
0x4040b8:   72 6f 6d 20 6d 79 20 73  75 70 65 72 69 6f 72 20   |rom my superior |
0x4040c8:   66 6c 61 67 21 00                                  |flag!.          |
0x4040ce:   00 00                                              |..              |
0x4040d0:   4d 61 79 62 65 20 69 66  20 79 6f 75 20 73 70 65   |Maybe if you spe|   "Maybe if you spent more time using the superior operating system you would actually get the flag."
0x4040e0:   6e 74 20 6d 6f 72 65 20  74 69 6d 65 20 75 73 69   |nt more time usi|
0x4040f0:   6e 67 20 74 68 65 20 73  75 70 65 72 69 6f 72 20   |ng the superior |
0x404100:   6f 70 65 72 61 74 69 6e  67 20 73 79 73 74 65 6d   |operating system|
0x404110:   20 79 6f 75 20 77 6f 75  6c 64 20 61 63 74 75 61   | you would actua|
0x404120:   6c 6c 79 20 67 65 74 20  74 68 65 20 66 6c 61 67   |lly get the flag|
0x404130:   2e 00                                              |..              |
0x404132:   4f 68 20 77 6f 77 20 61  20 66 65 6c 6c 6f 77 20   |Oh wow a fellow |   "Oh wow a fellow windows user!"
0x404142:   77 69 6e 64 6f 77 73 20  75 73 65 72 21 00         |windows user!.  |
0x404150:   40 75 40 00 00 00 00 00  60 70 40 00 00 00 00 00   |@u@.....`p@.....|
0x404160:   a0 1a 40 00 00 00 00 00  00 00 00 00 00 00 00 00   |..@.............|
0x404170:   41 72 67 75 6d 65 6e 74  20 64 6f 6d 61 69 6e 20   |Argument domain |   "Argument domain error (DOMAIN)"
0x404180:   65 72 72 6f 72 20 28 44  4f 4d 41 49 4e 29 00      |error (DOMAIN). |
0x40418f:   41 72 67 75 6d 65 6e 74  20 73 69 6e 67 75 6c 61   |Argument singula|   "Argument singularity (SIGN)"
0x40419f:   72 69 74 79 20 28 53 49  47 4e 29 00               |rity (SIGN).    |
0x4041ab:   00 00 00 00 00                                     |.....           |
0x4041b0:   4f 76 65 72 66 6c 6f 77  20 72 61 6e 67 65 20 65   |Overflow range e|   "Overflow range error (OVERFLOW)"
0x4041c0:   72 72 6f 72 20 28 4f 56  45 52 46 4c 4f 57 29 00   |rror (OVERFLOW).|
0x4041d0:   50 61 72 74 69 61 6c 20  6c 6f 73 73 20 6f 66 20   |Partial loss of |   "Partial loss of significance (PLOSS)"
0x4041e0:   73 69 67 6e 69 66 69 63  61 6e 63 65 20 28 50 4c   |significance (PL|
0x4041f0:   4f 53 53 29 00                                     |OSS).           |
0x4041f5:   00 00 00                                           |...             |
0x4041f8:   54 6f 74 61 6c 20 6c 6f  73 73 20 6f 66 20 73 69   |Total loss of si|   "Total loss of significance (TLOSS)"
0x404208:   67 6e 69 66 69 63 61 6e  63 65 20 28 54 4c 4f 53   |gnificance (TLOS|
0x404218:   53 29 00                                           |S).             |
0x40421b:   00 00 00 00 00                                     |.....           |
0x404220:   54 68 65 20 72 65 73 75  6c 74 20 69 73 20 74 6f   |The result is to|   "The result is too small to be represented (UNDERFLOW)"
0x404230:   6f 20 73 6d 61 6c 6c 20  74 6f 20 62 65 20 72 65   |o small to be re|
0x404240:   70 72 65 73 65 6e 74 65  64 20 28 55 4e 44 45 52   |presented (UNDER|
0x404250:   46 4c 4f 57 29 00                                  |FLOW).          |
0x404256:   55 6e 6b 6e 6f 77 6e 20  65 72 72 6f 72 00         |Unknown error.  |   "Unknown error"
0x404264:   00 00 00 00                                        |....            |
0x404268:   5f 6d 61 74 68 65 72 72  28 29 3a 20 25 73 20 69   |_matherr(): %s i|   "_matherr(): %s in %s(%g, %g)  (retval=%g)\n"
0x404278:   6e 20 25 73 28 25 67 2c  20 25 67 29 20 20 28 72   |n %s(%g, %g)  (r|
0x404288:   65 74 76 61 6c 3d 25 67  29 0a 00                  |etval=%g)..     |
0x404293:   00 cc d9 ff ff 1d d9 ff  ff 80 d9 ff ff 8c d9 ff   |................|
0x4042a3:   ff 9c d9 ff ff ac d9 ff  ff bc d9 ff ff            |.............   |
0x4042b0:   4d 69 6e 67 77 2d 77 36  34 20 72 75 6e 74 69 6d   |Mingw-w64 runtim|   "Mingw-w64 runtime failure:\n"
0x4042c0:   65 20 66 61 69 6c 75 72  65 3a 0a 00               |e failure:..    |
0x4042cc:   00 00 00 00                                        |....            |
0x4042d0:   41 64 64 72 65 73 73 20  25 70 20 68 61 73 20 6e   |Address %p has n|   "Address %p has no image-section"
0x4042e0:   6f 20 69 6d 61 67 65 2d  73 65 63 74 69 6f 6e 00   |o image-section.|
0x4042f0:   20 20 56 69 72 74 75 61  6c 51 75 65 72 79 20 66   |  VirtualQuery f|   "  VirtualQuery failed for %d bytes at address %p"
0x404300:   61 69 6c 65 64 20 66 6f  72 20 25 64 20 62 79 74   |ailed for %d byt|
0x404310:   65 73 20 61 74 20 61 64  64 72 65 73 73 20 25 70   |es at address %p|
0x404320:   00                                                 |.               |
0x404321:   00 00 00 00 00 00 00                               |.......         |
0x404328:   20 20 56 69 72 74 75 61  6c 50 72 6f 74 65 63 74   |  VirtualProtect|   "  VirtualProtect failed with code 0x%x"
0x404338:   20 66 61 69 6c 65 64 20  77 69 74 68 20 63 6f 64   | failed with cod|
0x404348:   65 20 30 78 25 78 00                               |e 0x%x.         |
0x40434f:   00                                                 |.               |
0x404350:   20 20 55 6e 6b 6e 6f 77  6e 20 70 73 65 75 64 6f   |  Unknown pseudo|   "  Unknown pseudo relocation protocol version %d.\n"
0x404360:   20 72 65 6c 6f 63 61 74  69 6f 6e 20 70 72 6f 74   | relocation prot|
0x404370:   6f 63 6f 6c 20 76 65 72  73 69 6f 6e 20 25 64 2e   |ocol version %d.|
0x404380:   0a 00                                              |..              |
0x404382:   00 00 00 00 00 00                                  |......          |
0x404388:   20 20 55 6e 6b 6e 6f 77  6e 20 70 73 65 75 64 6f   |  Unknown pseudo|   "  Unknown pseudo relocation bit size %d.\n"
0x404398:   20 72 65 6c 6f 63 61 74  69 6f 6e 20 62 69 74 20   | relocation bit |
0x4043a8:   73 69 7a 65 20 25 64 2e  0a 00                     |size %d...      |
0x4043b2:   00 00 00 00 00 00 00 00  00 00 00 00 00 00         |..............  |
0x4043c0:   2e 70 64 61 74 61 00                               |.pdata.         |   ".pdata"
0x4043c7:   00 00 00 00 00 00 00 00  00 50 31 40 00 00 00 00   |.........P1@....|
0x4043d7:   00 00 00 00 00 00 00 00  00 60 31 40 00 00 00 00   |.........`1@....|
0x4043e7:   00 00 00 00 00 00 00 00  00 60 2e 40 00 00 00 00   |.........`.@....|
0x4043f7:   00 00 00 00 00 00 00 00  00 10 49 40 00 00 00 00   |..........I@....|
0x404407:   00 00 00 00 00 00 00 00  00 10 49 40 00 00 00 00   |..........I@....|
0x404417:   00 00 00 00 00 00 00 00  00 60 41 40 00 00 00 00   |.........`A@....|
0x404427:   00 00 00 00 00 00 00 00  00 00 00 40 00 00 00 00   |...........@....|
0x404437:   00 00 00 00 00 00 00 00  00 cc 82 40 00 00 00 00   |...........@....|
0x404447:   00 00 00 00 00 00 00 00  00 f4 82 40 00 00 00 00   |...........@....|
0x404457:   00 00 00 00 00 00 00 00  00 0c 83 40 00 00 00 00   |...........@....|
0x404467:   00 00 00 00 00 00 00 00  00 24 83 40 00 00 00 00   |.........$.@....|
0x404477:   00 00 00 00 00 00 00 00  00 40 76 40 00 00 00 00   |.........@v@....|
0x404487:   00 00 00 00 00 00 00 00  00 88 79 40 00 00 00 00   |..........y@....|
0x404497:   00 00 00 00 00 00 00 00  00 80 79 40 00 00 00 00   |..........y@....|
0x4044a7:   00 00 00 00 00 00 00 00  00 70 79 40 00 00 00 00   |.........py@....|
0x4044b7:   00 00 00 00 00 00 00 00  00 78 79 40 00 00 00 00   |.........xy@....|
0x4044c7:   00 00 00 00 00 00 00 00  00 00 90 40 00 00 00 00   |...........@....|
0x4044d7:   00 00 00 00 00 00 00 00  00 10 90 40 00 00 00 00   |...........@....|
0x4044e7:   00 00 00 00 00 00 00 00  00 18 90 40 00 00 00 00   |...........@....|
0x4044f7:   00 00 00 00 00 00 00 00  00 30 90 40 00 00 00 00   |.........0.@....|
0x404507:   00 00 00 00 00 00 00 00  00 40 70 40 00 00 00 00   |.........@p@....|
0x404517:   00 00 00 00 00 00 00 00  00 30 76 40 00 00 00 00   |.........0v@....|
0x404527:   00 00 00 00 00 00 00 00  00 e0 23 40 00 00 00 00   |..........#@....|
0x404537:   00 00 00 00 00 00 00 00  00 80 1b 40 00 00 00 00   |...........@....|
0x404547:   00 00 00 00 00 00 00 00  00 e0 75 40 00 00 00 00   |..........u@....|
0x404557:   00 00 00 00 00 00 00 00  00 10 76 40 00 00 00 00   |..........v@....|
0x404567:   00 00 00 00 00 00 00 00  00 50 70 40 00 00 00 00   |.........Pp@....|
0x404577:   00 00 00 00 00 00 00 00  00 f8 75 40 00 00 00 00   |..........u@....|
0x404587:   00 00 00 00 00 00 00 00  00 f4 75 40 00 00 00 00   |..........u@....|
0x404597:   00 00 00 00 00 00 00 00  00 f0 75 40 00 00 00 00   |..........u@....|
0x4045a7:   00 00 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |.........GCC: (G|
0x4045b7:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x4045c7:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x4045d7:   4e 55 29 20 37 2e 33 2d  77 69 6e 33 32 20 32 30   |NU) 7.3-win32 20|
0x4045e7:   31 38 30 33 31 32 00 00  00 47 43 43 3a 20 28 47   |180312...GCC: (G|
0x4045f7:   4e 55 29 20 37 2e 33 2d  77 69 6e 33 32 20 32 30   |NU) 7.3-win32 20|
0x404607:   31 38 30 33 31 32 00 00  00 47 43 43 3a 20 28 47   |180312...GCC: (G|
0x404617:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x404627:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x404637:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x404647:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x404657:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x404667:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x404677:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x404687:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x404697:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x4046a7:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x4046b7:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x4046c7:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x4046d7:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x4046e7:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x4046f7:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x404707:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x404717:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x404727:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x404737:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x404747:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x404757:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x404767:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x404777:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x404787:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x404797:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x4047a7:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x4047b7:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x4047c7:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x4047d7:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x4047e7:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x4047f7:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x404807:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x404817:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x404827:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x404837:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x404847:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x404857:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x404867:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x404877:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x404887:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x404897:   4e 55 29 20 37 2e 33 2d  77 69 6e 33 32 20 32 30   |NU) 7.3-win32 20|
0x4048a7:   31 38 30 33 31 32 00 00  00 47 43 43 3a 20 28 47   |180312...GCC: (G|
0x4048b7:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x4048c7:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x4048d7:   4e 55 29 20 36 2e 33 2e  30 20 32 30 31 37 30 34   |NU) 6.3.0 201704|
0x4048e7:   31 35 00 00 00 00 00 00  00 47 43 43 3a 20 28 47   |15.......GCC: (G|
0x4048f7:   4e 55 29 20 37 2e 33 2d  77 69 6e 33 32 20 32 30   |NU) 7.3-win32 20|
0x404907:   31 38 30 33 31 32 00 00  00 ??                     |180312...?      |
; section: .pdata
0x405000:   00 10 00 00 01 10 00 00  00 60 00 00 10 10 00 00   |.........`......|
0x405010:   51 11 00 00 04 60 00 00  60 11 00 00 a9 11 00 00   |Q....`..`.......|
0x405020:   0c 60 00 00 b0 11 00 00  ce 14 00 00 14 60 00 00   |.`...........`..|
0x405030:   d0 14 00 00 f2 14 00 00  28 60 00 00 00 15 00 00   |........(`......|
0x405040:   22 15 00 00 48 60 00 00  30 15 00 00 41 15 00 00   |"...H`..0...A...|
0x405050:   68 60 00 00 50 15 00 00  56 15 00 00 70 60 00 00   |h`..P...V...p`..|
0x405060:   60 15 00 00 d7 15 00 00  78 60 00 00 d7 15 00 00   |`.......x`......|
0x405070:   cb 16 00 00 80 60 00 00  d0 16 00 00 7d 17 00 00   |.....`......}...|
0x405080:   8c 60 00 00 80 17 00 00  99 17 00 00 94 60 00 00   |.`...........`..|
0x405090:   a0 17 00 00 d5 17 00 00  9c 60 00 00 e0 17 00 00   |.........`......|
0x4050a0:   46 18 00 00 a4 60 00 00  50 18 00 00 6f 18 00 00   |F....`..P...o...|
0x4050b0:   b0 60 00 00 70 18 00 00  77 18 00 00 b4 60 00 00   |.`..p...w....`..|
0x4050c0:   80 18 00 00 83 18 00 00  b8 60 00 00 90 18 00 00   |.........`......|
0x4050d0:   66 19 00 00 bc 60 00 00  70 19 00 00 6b 1a 00 00   |f....`..p...k...|
0x4050e0:   cc 60 00 00 70 1a 00 00  9f 1a 00 00 dc 60 00 00   |.`..p........`..|
0x4050f0:   a0 1a 00 00 09 1b 00 00  e4 60 00 00 10 1b 00 00   |.........`......|
0x405100:   13 1b 00 00 f0 60 00 00  20 1b 00 00 61 1b 00 00   |.....`.. ...a...|
0x405110:   f4 60 00 00 70 1b 00 00  7c 1b 00 00 fc 60 00 00   |.`..p...|....`..|
0x405120:   80 1b 00 00 6c 1c 00 00  00 61 00 00 70 1c 00 00   |....l....a..p...|
0x405130:   73 1c 00 00 18 61 00 00  80 1c 00 00 84 1c 00 00   |s....a..........|
0x405140:   1c 61 00 00 90 1c 00 00  94 1c 00 00 20 61 00 00   |.a.......... a..|
0x405150:   a0 1c 00 00 01 1d 00 00  24 61 00 00 10 1d 00 00   |........$a......|
0x405160:   78 1e 00 00 30 61 00 00  80 1e 00 00 4b 21 00 00   |x...0a......K!..|
0x405170:   44 61 00 00 50 21 00 00  e8 22 00 00 5c 61 00 00   |Da..P!..."..\a..|
0x405180:   f0 22 00 00 dc 23 00 00  64 61 00 00 e0 23 00 00   |."...#..da...#..|
0x405190:   b2 25 00 00 74 61 00 00  c0 25 00 00 2a 26 00 00   |.%..ta...%..*&..|
0x4051a0:   7c 61 00 00 30 26 00 00  af 26 00 00 8c 61 00 00   ||a..0&...&...a..|
0x4051b0:   b0 26 00 00 4c 27 00 00  9c 61 00 00 50 27 00 00   |.&..L'...a..P'..|
0x4051c0:   2a 28 00 00 a4 61 00 00  30 28 00 00 4e 28 00 00   |*(...a..0(..N(..|
0x4051d0:   ac 61 00 00 50 28 00 00  62 28 00 00 b0 61 00 00   |.a..P(..b(...a..|
0x4051e0:   70 28 00 00 b5 28 00 00  b4 61 00 00 c0 28 00 00   |p(...(...a...(..|
0x4051f0:   4b 29 00 00 b8 61 00 00  50 29 00 00 d7 29 00 00   |K)...a..P)...)..|
0x405200:   c4 61 00 00 e0 29 00 00  1e 2a 00 00 cc 61 00 00   |.a...)...*...a..|
0x405210:   20 2a 00 00 92 2a 00 00  d4 61 00 00 a0 2a 00 00   | *...*...a...*..|
0x405220:   d6 2a 00 00 dc 61 00 00  e0 2a 00 00 71 2b 00 00   |.*...a...*..q+..|
0x405230:   e4 61 00 00 80 2b 00 00  4a 2c 00 00 ec 61 00 00   |.a...+..J,...a..|
0x405240:   70 2d 00 00 78 2d 00 00  f4 61 00 00 80 2d 00 00   |p-..x-...a...-..|
0x405250:   8b 2d 00 00 f8 61 00 00  50 2e 00 00 5a 2e 00 00   |.-...a..P...Z...|
0x405260:   fc 61 00 00 ??                                     |.a..?           |
; section: .xdata
0x406000:   01 00 00 00 01 04 01 00  04 42 00 00 01 04 01 00   |.........B......|
0x406010:   04 62 00 00 01 0f 08 00  0f 01 13 00 08 30 07 60   |.b...........0.`|
0x406020:   06 70 05 50 04 c0 02 d0  09 04 01 00 04 42 00 00   |.p.P.........B..|
0x406030:   60 2d 00 00 01 00 00 00  d4 14 00 00 ec 14 00 00   |`-..............|
0x406040:   e0 23 00 00 ec 14 00 00  09 04 01 00 04 42 00 00   |.#...........B..|
0x406050:   60 2d 00 00 01 00 00 00  04 15 00 00 1c 15 00 00   |`-..............|
0x406060:   e0 23 00 00 1c 15 00 00  01 04 02 05 04 03 01 50   |.#.............P|
0x406070:   01 04 02 05 04 03 01 50  01 04 02 05 04 03 01 50   |.......P.......P|
0x406080:   01 08 03 05 08 52 04 03  01 50 00 00 01 05 02 00   |.....R...P......|
0x406090:   05 52 01 30 01 04 01 00  04 42 00 00 01 04 01 00   |.R.0.....B......|
0x4060a0:   04 42 00 00 01 06 03 00  06 42 02 30 01 60 00 00   |.B.......B.0.`..|
0x4060b0:   01 00 00 00 01 00 00 00  01 00 00 00 01 0a 06 00   |................|
0x4060c0:   0a 52 06 30 05 60 04 70  03 50 02 c0 01 0a 05 05   |.R.0.`.p.P......|
0x4060d0:   0a d2 06 03 03 30 02 60  01 50 00 00 01 04 01 00   |.....0.`.P......|
0x4060e0:   04 42 00 00 01 06 03 00  06 42 02 30 01 60 00 00   |.B.......B.0.`..|
0x4060f0:   01 00 00 00 01 04 01 00  04 a2 00 00 01 00 00 00   |................|
0x406100:   01 16 09 00 16 88 06 00  10 78 05 00 0b 68 04 00   |.........x...h..|
0x406110:   06 e2 02 30 01 60 00 00  01 00 00 00 01 00 00 00   |...0.`..........|
0x406120:   01 00 00 00 01 06 03 00  06 62 02 30 01 60 00 00   |.........b.0.`..|
0x406130:   01 0c 07 00 0c a2 08 30  07 60 06 70 05 50 04 c0   |.......0.`.p.P..|
0x406140:   02 d0 00 00 01 18 0a 85  18 03 10 62 0c 30 0b 60   |...........b.0.`|
0x406150:   0a 70 09 c0 07 d0 05 e0  03 f0 01 50 01 04 01 00   |.p.........P....|
0x406160:   04 42 00 00 01 0a 06 00  0a 32 06 30 05 60 04 70   |.B.......2.0.`.p|
0x406170:   03 50 02 c0 01 05 02 00  05 32 01 30 01 08 05 00   |.P.......2.0....|
0x406180:   08 42 04 30 03 60 02 70  01 50 00 00 01 08 05 00   |.B.0.`.p.P......|
0x406190:   08 42 04 30 03 60 02 70  01 50 00 00 01 05 02 00   |.B.0.`.p.P......|
0x4061a0:   05 32 01 30 01 05 02 00  05 32 01 30 01 00 00 00   |.2.0.....2.0....|
0x4061b0:   01 00 00 00 01 00 00 00  01 07 04 00 07 32 03 30   |.............2.0|
0x4061c0:   02 60 01 70 01 04 01 00  04 42 00 00 01 04 01 00   |.`.p.....B......|
0x4061d0:   04 42 00 00 01 04 01 00  04 42 00 00 01 04 01 00   |.B.......B......|
0x4061e0:   04 42 00 00 01 04 01 00  04 42 00 00 01 04 01 00   |.B.......B......|
0x4061f0:   04 42 00 00 01 00 00 00  01 00 00 00 01 04 02 05   |.B..............|
0x406200:   04 03 01 50 ??                                     |...P?           |
; section: .idata
0x408000:   3c 80 00 00 00 00 00 00  00 00 00 00 50 87 00 00   |<...........P...|
0x408010:   f4 81 00 00 fc 80 00 00  00 00 00 00 00 00 00 00   |................|
0x408020:   d8 87 00 00 b4 82 00 00  00 00 00 00 00 00 00 00   |................|
0x408030:   00 00 00 00 00 00 00 00  00 00 00 00 ac 83 00 00   |................|
0x408040:   00 00 00 00 c4 83 00 00  00 00 00 00 dc 83 00 00   |................|
0x408050:   00 00 00 00 f0 83 00 00  00 00 00 00 06 84 00 00   |................|
0x408060:   00 00 00 00 1c 84 00 00  00 00 00 00 2c 84 00 00   |............,...|
0x408070:   00 00 00 00 3e 84 00 00  00 00 00 00 58 84 00 00   |....>.......X...|
0x408080:   00 00 00 00 68 84 00 00  00 00 00 00 84 84 00 00   |....h...........|
0x408090:   00 00 00 00 9c 84 00 00  00 00 00 00 b6 84 00 00   |................|
0x4080a0:   00 00 00 00 cc 84 00 00  00 00 00 00 e0 84 00 00   |................|
0x4080b0:   00 00 00 00 fa 84 00 00  00 00 00 00 0e 85 00 00   |................|
0x4080c0:   00 00 00 00 2c 85 00 00  00 00 00 00 34 85 00 00   |....,.......4...|
0x4080d0:   00 00 00 00 48 85 00 00  00 00 00 00 56 85 00 00   |....H.......V...|
0x4080e0:   00 00 00 00 72 85 00 00  00 00 00 00 84 85 00 00   |....r...........|
0x4080f0:   00 00 00 00 00 00 00 00  00 00 00 00 94 85 00 00   |................|
0x408100:   00 00 00 00 ac 85 00 00  00 00 00 00 ba 85 00 00   |................|
0x408110:   00 00 00 00 ca 85 00 00  00 00 00 00 d6 85 00 00   |................|
0x408120:   00 00 00 00 e4 85 00 00  00 00 00 00 f4 85 00 00   |................|
0x408130:   00 00 00 00 06 86 00 00  00 00 00 00 1a 86 00 00   |................|
0x408140:   00 00 00 00 24 86 00 00  00 00 00 00 32 86 00 00   |....$.......2...|
0x408150:   00 00 00 00 3c 86 00 00  00 00 00 00 46 86 00 00   |....<.......F...|
0x408160:   00 00 00 00 52 86 00 00  00 00 00 00 5a 86 00 00   |....R.......Z...|
0x408170:   00 00 00 00 64 86 00 00  00 00 00 00 6e 86 00 00   |....d.......n...|
0x408180:   00 00 00 00 76 86 00 00  00 00 00 00 80 86 00 00   |....v...........|
0x408190:   00 00 00 00 88 86 00 00  00 00 00 00 90 86 00 00   |................|
0x4081a0:   00 00 00 00 9a 86 00 00  00 00 00 00 a2 86 00 00   |................|
0x4081b0:   00 00 00 00 ac 86 00 00  00 00 00 00 b6 86 00 00   |................|
0x4081c0:   00 00 00 00 c0 86 00 00  00 00 00 00 c8 86 00 00   |................|
0x4081d0:   00 00 00 00 d2 86 00 00  00 00 00 00 dc 86 00 00   |................|
0x4081e0:   00 00 00 00 e6 86 00 00  00 00 00 00 00 00 00 00   |................|
0x4081f0:   00 00 00 00 ac 83 00 00  00 00 00 00 c4 83 00 00   |................|
0x408200:   00 00 00 00 dc 83 00 00  00 00 00 00 f0 83 00 00   |................|
0x408210:   00 00 00 00 06 84 00 00  00 00 00 00 1c 84 00 00   |................|
0x408220:   00 00 00 00 2c 84 00 00  00 00 00 00 3e 84 00 00   |....,.......>...|
0x408230:   00 00 00 00 58 84 00 00  00 00 00 00 68 84 00 00   |....X.......h...|
0x408240:   00 00 00 00 84 84 00 00  00 00 00 00 9c 84 00 00   |................|
0x408250:   00 00 00 00 b6 84 00 00  00 00 00 00 cc 84 00 00   |................|
0x408260:   00 00 00 00 e0 84 00 00  00 00 00 00 fa 84 00 00   |................|
0x408270:   00 00 00 00 0e 85 00 00  00 00 00 00 2c 85 00 00   |............,...|
0x408280:   00 00 00 00 34 85 00 00  00 00 00 00 48 85 00 00   |....4.......H...|
0x408290:   00 00 00 00 56 85 00 00  00 00 00 00 72 85 00 00   |....V.......r...|
0x4082a0:   00 00 00 00 84 85 00 00  00 00 00 00 00 00 00 00   |................|
0x4082b0:   00 00 00 00 94 85 00 00  00 00 00 00 ac 85 00 00   |................|
0x4082c0:   00 00 00 00 ba 85 00 00  00 00 00 00 ca 85 00 00   |................|
0x4082d0:   00 00 00 00 d6 85 00 00  00 00 00 00 e4 85 00 00   |................|
0x4082e0:   00 00 00 00 f4 85 00 00  00 00 00 00 06 86 00 00   |................|
0x4082f0:   00 00 00 00 1a 86 00 00  00 00 00 00 24 86 00 00   |............$...|
0x408300:   00 00 00 00 32 86 00 00  00 00 00 00 3c 86 00 00   |....2.......<...|
0x408310:   00 00 00 00 46 86 00 00  00 00 00 00 52 86 00 00   |....F.......R...|
0x408320:   00 00 00 00 5a 86 00 00  00 00 00 00 64 86 00 00   |....Z.......d...|
0x408330:   00 00 00 00 6e 86 00 00  00 00 00 00 76 86 00 00   |....n.......v...|
0x408340:   00 00 00 00 80 86 00 00  00 00 00 00 88 86 00 00   |................|
0x408350:   00 00 00 00 90 86 00 00  00 00 00 00 9a 86 00 00   |................|
0x408360:   00 00 00 00 a2 86 00 00  00 00 00 00 ac 86 00 00   |................|
0x408370:   00 00 00 00 b6 86 00 00  00 00 00 00 c0 86 00 00   |................|
0x408380:   00 00 00 00 c8 86 00 00  00 00 00 00 d2 86 00 00   |................|
0x408390:   00 00 00 00 dc 86 00 00  00 00 00 00 e6 86 00 00   |................|
0x4083a0:   00 00 00 00 00 00 00 00  00 00 00 00 d9 00 44 65   |..............De|
0x4083b0:   6c 65 74 65 43 72 69 74  69 63 61 6c 53 65 63 74   |leteCriticalSect|
0x4083c0:   69 6f 6e 00 fa 00 45 6e  74 65 72 43 72 69 74 69   |ion...EnterCriti|
0x4083d0:   63 61 6c 53 65 63 74 69  6f 6e 00 00 cf 01 47 65   |calSection....Ge|
0x4083e0:   74 43 75 72 72 65 6e 74  50 72 6f 63 65 73 73 00   |tCurrentProcess.|
0x4083f0:   d0 01 47 65 74 43 75 72  72 65 6e 74 50 72 6f 63   |..GetCurrentProc|
0x408400:   65 73 73 49 64 00 d4 01  47 65 74 43 75 72 72 65   |essId...GetCurre|
0x408410:   6e 74 54 68 72 65 61 64  49 64 00 00 12 02 47 65   |ntThreadId....Ge|
0x408420:   74 4c 61 73 74 45 72 72  6f 72 00 00 75 02 47 65   |tLastError..u.Ge|
0x408430:   74 53 74 61 72 74 75 70  49 6e 66 6f 41 00 8c 02   |tStartupInfoA...|
0x408440:   47 65 74 53 79 73 74 65  6d 54 69 6d 65 41 73 46   |GetSystemTimeAsF|
0x408450:   69 6c 65 54 69 6d 65 00  a7 02 47 65 74 54 69 63   |ileTime...GetTic|
0x408460:   6b 43 6f 75 6e 74 00 00  fb 02 49 6e 69 74 69 61   |kCount....Initia|
0x408470:   6c 69 7a 65 43 72 69 74  69 63 61 6c 53 65 63 74   |lizeCriticalSect|
0x408480:   69 6f 6e 00 4d 03 4c 65  61 76 65 43 72 69 74 69   |ion.M.LeaveCriti|
0x408490:   63 61 6c 53 65 63 74 69  6f 6e 00 00 bf 03 51 75   |calSection....Qu|
0x4084a0:   65 72 79 50 65 72 66 6f  72 6d 61 6e 63 65 43 6f   |eryPerformanceCo|
0x4084b0:   75 6e 74 65 72 00 06 04  52 74 6c 41 64 64 46 75   |unter...RtlAddFu|
0x4084c0:   6e 63 74 69 6f 6e 54 61  62 6c 65 00 07 04 52 74   |nctionTable...Rt|
0x4084d0:   6c 43 61 70 74 75 72 65  43 6f 6e 74 65 78 74 00   |lCaptureContext.|
0x4084e0:   0e 04 52 74 6c 4c 6f 6f  6b 75 70 46 75 6e 63 74   |..RtlLookupFunct|
0x4084f0:   69 6f 6e 45 6e 74 72 79  00 00 15 04 52 74 6c 56   |ionEntry....RtlV|
0x408500:   69 72 74 75 61 6c 55 6e  77 69 6e 64 00 00 a4 04   |irtualUnwind....|
0x408510:   53 65 74 55 6e 68 61 6e  64 6c 65 64 45 78 63 65   |SetUnhandledExce|
0x408520:   70 74 69 6f 6e 46 69 6c  74 65 72 00 b1 04 53 6c   |ptionFilter...Sl|
0x408530:   65 65 70 00 bf 04 54 65  72 6d 69 6e 61 74 65 50   |eep...TerminateP|
0x408540:   72 6f 63 65 73 73 00 00  c6 04 54 6c 73 47 65 74   |rocess....TlsGet|
0x408550:   56 61 6c 75 65 00 d3 04  55 6e 68 61 6e 64 6c 65   |Value...Unhandle|
0x408560:   64 45 78 63 65 70 74 69  6f 6e 46 69 6c 74 65 72   |dExceptionFilter|
0x408570:   00 00 f1 04 56 69 72 74  75 61 6c 50 72 6f 74 65   |....VirtualProte|
0x408580:   63 74 00 00 f3 04 56 69  72 74 75 61 6c 51 75 65   |ct....VirtualQue|
0x408590:   72 79 00 00 38 00 5f 5f  43 5f 73 70 65 63 69 66   |ry..8.__C_specif|
0x4085a0:   69 63 5f 68 61 6e 64 6c  65 72 00 00 4f 00 5f 5f   |ic_handler..O.__|
0x4085b0:   64 6c 6c 6f 6e 65 78 69  74 00 52 00 5f 5f 67 65   |dllonexit.R.__ge|
0x4085c0:   74 6d 61 69 6e 61 72 67  73 00 53 00 5f 5f 69 6e   |tmainargs.S.__in|
0x4085d0:   69 74 65 6e 76 00 54 00  5f 5f 69 6f 62 5f 66 75   |itenv.T.__iob_fu|
0x4085e0:   6e 63 00 00 5b 00 5f 5f  6c 63 6f 6e 76 5f 69 6e   |nc..[.__lconv_in|
0x4085f0:   69 74 00 00 61 00 5f 5f  73 65 74 5f 61 70 70 5f   |it..a.__set_app_|
0x408600:   74 79 70 65 00 00 63 00  5f 5f 73 65 74 75 73 65   |type..c.__setuse|
0x408610:   72 6d 61 74 68 65 72 72  00 00 72 00 5f 61 63 6d   |rmatherr..r._acm|
0x408620:   64 6c 6e 00 79 00 5f 61  6d 73 67 5f 65 78 69 74   |dln.y._amsg_exit|
0x408630:   00 00 8b 00 5f 63 65 78  69 74 00 00 dc 00 5f 66   |...._cexit...._f|
0x408640:   6d 6f 64 65 00 00 19 01  5f 69 6e 69 74 74 65 72   |mode...._initter|
0x408650:   6d 00 7f 01 5f 6c 6f 63  6b 00 24 02 5f 6f 6e 65   |m..._lock.$._one|
0x408660:   78 69 74 00 c5 02 5f 75  6e 6c 6f 63 6b 00 81 03   |xit..._unlock...|
0x408670:   61 62 6f 72 74 00 92 03  63 61 6c 6c 6f 63 00 00   |abort...calloc..|
0x408680:   9f 03 65 78 69 74 00 00  a9 03 66 67 65 74 73 00   |..exit....fgets.|
0x408690:   b2 03 66 70 72 69 6e 74  66 00 b9 03 66 72 65 65   |..fprintf...free|
0x4086a0:   00 00 c5 03 66 77 72 69  74 65 00 00 f3 03 6d 61   |....fwrite....ma|
0x4086b0:   6c 6c 6f 63 00 00 fb 03  6d 65 6d 63 70 79 00 00   |lloc....memcpy..|
0x4086c0:   08 04 70 75 74 73 00 00  19 04 73 69 67 6e 61 6c   |..puts....signal|
0x4086d0:   00 00 2e 04 73 74 72 6c  65 6e 00 00 31 04 73 74   |....strlen..1.st|
0x4086e0:   72 6e 63 6d 70 00 50 04  76 66 70 72 69 6e 74 66   |rncmp.P.vfprintf|
0x4086f0:   00 00 00 00 00 80 00 00  00 80 00 00 00 80 00 00   |................|
0x408700:   00 80 00 00 00 80 00 00  00 80 00 00 00 80 00 00   |................|
0x408710:   00 80 00 00 00 80 00 00  00 80 00 00 00 80 00 00   |................|
0x408720:   00 80 00 00 00 80 00 00  00 80 00 00 00 80 00 00   |................|
0x408730:   00 80 00 00 00 80 00 00  00 80 00 00 00 80 00 00   |................|
0x408740:   00 80 00 00 00 80 00 00  00 80 00 00 00 80 00 00   |................|
0x408750:   4b 45 52 4e 45 4c 33 32  2e 64 6c 6c 00 00 00 00   |KERNEL32.dll....|
0x408760:   14 80 00 00 14 80 00 00  14 80 00 00 14 80 00 00   |................|
0x408770:   14 80 00 00 14 80 00 00  14 80 00 00 14 80 00 00   |................|
0x408780:   14 80 00 00 14 80 00 00  14 80 00 00 14 80 00 00   |................|
0x408790:   14 80 00 00 14 80 00 00  14 80 00 00 14 80 00 00   |................|
0x4087a0:   14 80 00 00 14 80 00 00  14 80 00 00 14 80 00 00   |................|
0x4087b0:   14 80 00 00 14 80 00 00  14 80 00 00 14 80 00 00   |................|
0x4087c0:   14 80 00 00 14 80 00 00  14 80 00 00 14 80 00 00   |................|
0x4087d0:   14 80 00 00 14 80 00 00  6d 73 76 63 72 74 2e 64   |........msvcrt.d|
0x4087e0:   6c 6c 00 00 ??                                     |ll..?           |
; section: .CRT
0x409000:   00 00 00 00 00 00 00 00  60 11 40 00 00 00 00 00   |........`.@.....|
0x409010:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x409020:   10 10 40 00 00 00 00 00  70 18 40 00 00 00 00 00   |..@.....p.@.....|
0x409030:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x409040:   a0 1a 40 00 00 00 00 00  70 1a 40 00 00 00 00 00   |..@.....p.@.....|
0x409050:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x409060:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .tls
0x40a000:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x40a010:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x40a020:   00 a0 40 00 00 00 00 00  60 a0 40 00 00 00 00 00   |..@.....`.@.....|
0x40a030:   fc 75 40 00 00 00 00 00  40 90 40 00 00 00 00 00   |.u@.....@.@.....|
0x40a040:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x40a050:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x40a060:   00 00 00 00 00 00 00 00  ??                        |........?       |
