;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2020 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2020-04-16 09:50:14
;; Architecture: x86-64
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x4006a0 -- 0x4006b7
0x4006a0:   48 83 ec 08                     	sub rsp, 8
0x4006a4:   48 8b 05 4d 19 20 00            	mov rax, qword ptr [rip + 0x20194d]
0x4006ab:   48 85 c0                        	test rax, rax
0x4006ae:   74 02                           	je 0x4006b2 <_init+0x12>
0x4006b0:   ff d0                           	call rax <__gmon_start__>
0x4006b2:   48 83 c4 08                     	add rsp, 8
0x4006b6:   c3                              	ret 
; section: .plt
; data inside code section at 0x4006c0 -- 0x4006d0
0x4006c0:   ff 35 42 19 20 00 ff 25  44 19 20 00 0f 1f 40 00   |.5B. ..%D. ...@.|
; function: function_4006d0 at 0x4006d0 -- 0x4006d6
0x4006d0:   ff 25 42 19 20 00               	jmp qword ptr [rip + 0x201942] <puts>
; data inside code section at 0x4006d6 -- 0x4006e0
0x4006d6:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_4006e0 at 0x4006e0 -- 0x4006e6
0x4006e0:   ff 25 3a 19 20 00               	jmp qword ptr [rip + 0x20193a] <strlen>
; data inside code section at 0x4006e6 -- 0x4006f0
0x4006e6:   68 01 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_4006f0 at 0x4006f0 -- 0x4006f6
0x4006f0:   ff 25 32 19 20 00               	jmp qword ptr [rip + 0x201932] <__stack_chk_fail>
; data inside code section at 0x4006f6 -- 0x400700
0x4006f6:   68 02 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; function: function_400700 at 0x400700 -- 0x400706
0x400700:   ff 25 2a 19 20 00               	jmp qword ptr [rip + 0x20192a] <setresgid>
; data inside code section at 0x400706 -- 0x400710
0x400706:   68 03 00 00 00 e9 b0 ff  ff ff                     |h.........      |
; function: function_400710 at 0x400710 -- 0x400716
0x400710:   ff 25 22 19 20 00               	jmp qword ptr [rip + 0x201922] <strchr>
; data inside code section at 0x400716 -- 0x400720
0x400716:   68 04 00 00 00 e9 a0 ff  ff ff                     |h.........      |
; function: function_400720 at 0x400720 -- 0x400726
0x400720:   ff 25 1a 19 20 00               	jmp qword ptr [rip + 0x20191a] <printf>
; data inside code section at 0x400726 -- 0x400730
0x400726:   68 05 00 00 00 e9 90 ff  ff ff                     |h.........      |
; function: function_400730 at 0x400730 -- 0x400736
0x400730:   ff 25 12 19 20 00               	jmp qword ptr [rip + 0x201912] <fgets>
; data inside code section at 0x400736 -- 0x400740
0x400736:   68 06 00 00 00 e9 80 ff  ff ff                     |h.........      |
; function: function_400740 at 0x400740 -- 0x400746
0x400740:   ff 25 0a 19 20 00               	jmp qword ptr [rip + 0x20190a] <strcmp>
; data inside code section at 0x400746 -- 0x400750
0x400746:   68 07 00 00 00 e9 70 ff  ff ff                     |h.....p...      |
; function: function_400750 at 0x400750 -- 0x400756
0x400750:   ff 25 02 19 20 00               	jmp qword ptr [rip + 0x201902] <sscanf>
; data inside code section at 0x400756 -- 0x400760
0x400756:   68 08 00 00 00 e9 60 ff  ff ff                     |h.....`...      |
; function: function_400760 at 0x400760 -- 0x400766
0x400760:   ff 25 fa 18 20 00               	jmp qword ptr [rip + 0x2018fa] <getegid>
; data inside code section at 0x400766 -- 0x400770
0x400766:   68 09 00 00 00 e9 50 ff  ff ff                     |h.....P...      |
; function: function_400770 at 0x400770 -- 0x400776
0x400770:   ff 25 f2 18 20 00               	jmp qword ptr [rip + 0x2018f2] <fopen>
; data inside code section at 0x400776 -- 0x400780
0x400776:   68 0a 00 00 00 e9 40 ff  ff ff                     |h.....@...      |
; function: function_400780 at 0x400780 -- 0x400786
0x400780:   ff 25 ea 18 20 00               	jmp qword ptr [rip + 0x2018ea] <exit>
; data inside code section at 0x400786 -- 0x400790
0x400786:   68 0b 00 00 00 e9 30 ff  ff ff                     |h.....0...      |
; section: .text
; function: _start at 0x400790 -- 0x4007bb
0x400790:   31 ed                           	xor ebp, ebp
0x400792:   49 89 d1                        	mov r9, rdx
0x400795:   5e                              	pop rsi
0x400796:   48 89 e2                        	mov rdx, rsp
0x400799:   48 83 e4 f0                     	and rsp, 0xfffffffffffffff0
0x40079d:   50                              	push rax
0x40079e:   54                              	push rsp
0x40079f:   49 c7 c0 50 0c 40 00            	mov r8, 0x400c50
0x4007a6:   48 c7 c1 e0 0b 40 00            	mov rcx, 0x400be0
0x4007ad:   48 c7 c7 8e 09 40 00            	mov rdi, 0x40098e
0x4007b4:   ff 15 36 18 20 00               	call qword ptr [rip + 0x201836] <__libc_start_main>
0x4007ba:   f4                              	hlt 
; data inside code section at 0x4007bb -- 0x4007c0
0x4007bb:   0f 1f 44 00 00                                     |..D..           |
; function: _dl_relocate_static_pie at 0x4007c0 -- 0x4007c2
0x4007c0:   f3 c3                           	ret 
; data inside code section at 0x4007c2 -- 0x4007d0
0x4007c2:   66 2e 0f 1f 84 00 00 00  00 00 0f 1f 40 00         |f...........@.  |
; function: deregister_tm_clones at 0x4007d0 -- 0x4007fa
0x4007d0:   55                              	push rbp
0x4007d1:   b8 a8 20 60 00                  	mov eax, 0x6020a8
0x4007d6:   48 3d a8 20 60 00               	cmp rax, 0x6020a8
0x4007dc:   48 89 e5                        	mov rbp, rsp
0x4007df:   74 17                           	je 0x4007f8 <deregister_tm_clones+0x28>
0x4007e1:   b8 00 00 00 00                  	mov eax, 0
0x4007e6:   48 85 c0                        	test rax, rax
0x4007e9:   74 0d                           	je 0x4007f8 <deregister_tm_clones+0x28>
0x4007eb:   5d                              	pop rbp
0x4007ec:   bf a8 20 60 00                  	mov edi, 0x6020a8
0x4007f1:   ff e0                           	jmp rax
; data inside code section at 0x4007f3 -- 0x4007f8
0x4007f3:   0f 1f 44 00 00                                     |..D..           |
0x4007f8:   5d                              	pop rbp
0x4007f9:   c3                              	ret 
; data inside code section at 0x4007fa -- 0x400800
0x4007fa:   66 0f 1f 44 00 00                                  |f..D..          |
; function: register_tm_clones at 0x400800 -- 0x40083a
0x400800:   be a8 20 60 00                  	mov esi, 0x6020a8
0x400805:   55                              	push rbp
0x400806:   48 81 ee a8 20 60 00            	sub rsi, 0x6020a8
0x40080d:   48 89 e5                        	mov rbp, rsp
0x400810:   48 c1 fe 03                     	sar rsi, 3
0x400814:   48 89 f0                        	mov rax, rsi
0x400817:   48 c1 e8 3f                     	shr rax, 0x3f
0x40081b:   48 01 c6                        	add rsi, rax
0x40081e:   48 d1 fe                        	sar rsi, 1
0x400821:   74 15                           	je 0x400838 <register_tm_clones+0x38>
0x400823:   b8 00 00 00 00                  	mov eax, 0
0x400828:   48 85 c0                        	test rax, rax
0x40082b:   74 0b                           	je 0x400838 <register_tm_clones+0x38>
0x40082d:   5d                              	pop rbp
0x40082e:   bf a8 20 60 00                  	mov edi, 0x6020a8
0x400833:   ff e0                           	jmp rax
; data inside code section at 0x400835 -- 0x400838
0x400835:   0f 1f 00                                           |...             |
0x400838:   5d                              	pop rbp
0x400839:   c3                              	ret 
; data inside code section at 0x40083a -- 0x400840
0x40083a:   66 0f 1f 44 00 00                                  |f..D..          |
; function: __do_global_dtors_aux at 0x400840 -- 0x400862
0x400840:   80 3d 71 18 20 00 00            	cmp byte ptr [rip + 0x201871], 0
0x400847:   75 17                           	jne 0x400860 <__do_global_dtors_aux+0x20>
0x400849:   55                              	push rbp
0x40084a:   48 89 e5                        	mov rbp, rsp
0x40084d:   e8 7e ff ff ff                  	call 0x4007d0 <deregister_tm_clones>
0x400852:   c6 05 5f 18 20 00 01            	mov byte ptr [rip + 0x20185f], 1
0x400859:   5d                              	pop rbp
0x40085a:   c3                              	ret 
; data inside code section at 0x40085b -- 0x400860
0x40085b:   0f 1f 44 00 00                                     |..D..           |
0x400860:   f3 c3                           	ret 
; data inside code section at 0x400862 -- 0x400870
0x400862:   0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: frame_dummy at 0x400870 -- 0x400877
0x400870:   55                              	push rbp
0x400871:   48 89 e5                        	mov rbp, rsp
0x400874:   5d                              	pop rbp
0x400875:   eb 89                           	jmp 0x400800 <register_tm_clones>
; function: print_flag at 0x400877 -- 0x40093e
0x400877:   55                              	push rbp
0x400878:   48 89 e5                        	mov rbp, rsp
0x40087b:   48 81 ec a0 00 00 00            	sub rsp, 0xa0
0x400882:   64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x40088b:   48 89 45 f8                     	mov qword ptr [rbp - 8], rax
0x40088f:   31 c0                           	xor eax, eax
0x400891:   e8 ca fe ff ff                  	call 0x400760 <getegid>
0x400896:   89 85 64 ff ff ff               	mov dword ptr [rbp - 0x9c], eax
0x40089c:   8b 95 64 ff ff ff               	mov edx, dword ptr [rbp - 0x9c]
0x4008a2:   8b 8d 64 ff ff ff               	mov ecx, dword ptr [rbp - 0x9c]
0x4008a8:   8b 85 64 ff ff ff               	mov eax, dword ptr [rbp - 0x9c]
0x4008ae:   89 ce                           	mov esi, ecx
0x4008b0:   89 c7                           	mov edi, eax
0x4008b2:   e8 49 fe ff ff                  	call 0x400700 <setresgid>
0x4008b7:   48 8d 35 aa 03 00 00            	lea rsi, [rip + 0x3aa]
0x4008be:   48 8d 3d a5 03 00 00            	lea rdi, [rip + 0x3a5]
0x4008c5:   e8 a6 fe ff ff                  	call 0x400770 <fopen>
0x4008ca:   48 89 85 68 ff ff ff            	mov qword ptr [rbp - 0x98], rax
0x4008d1:   48 83 bd 68 ff ff ff 00         	cmp qword ptr [rbp - 0x98], 0
0x4008d9:   75 16                           	jne 0x4008f1 <print_flag+0x7a>
0x4008db:   48 8d 3d 91 03 00 00            	lea rdi, [rip + 0x391]
0x4008e2:   e8 e9 fd ff ff                  	call 0x4006d0 <puts>
0x4008e7:   bf 01 00 00 00                  	mov edi, 1
0x4008ec:   e8 8f fe ff ff                  	call 0x400780 <exit>
0x4008f1:   48 8b 95 68 ff ff ff            	mov rdx, qword ptr [rbp - 0x98]
0x4008f8:   48 8d 85 70 ff ff ff            	lea rax, [rbp - 0x90]
0x4008ff:   be 80 00 00 00                  	mov esi, 0x80
0x400904:   48 89 c7                        	mov rdi, rax
0x400907:   e8 24 fe ff ff                  	call 0x400730 <fgets>
0x40090c:   48 8d 85 70 ff ff ff            	lea rax, [rbp - 0x90]
0x400913:   48 89 c6                        	mov rsi, rax
0x400916:   48 8d 3d 6d 03 00 00            	lea rdi, [rip + 0x36d]
0x40091d:   b8 00 00 00 00                  	mov eax, 0
0x400922:   e8 f9 fd ff ff                  	call 0x400720 <printf>
0x400927:   90                              	nop 
0x400928:   48 8b 45 f8                     	mov rax, qword ptr [rbp - 8]
0x40092c:   64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x400935:   74 05                           	je 0x40093c <print_flag+0xc5>
0x400937:   e8 b4 fd ff ff                  	call 0x4006f0 <__stack_chk_fail>
0x40093c:   c9                              	leave 
0x40093d:   c3                              	ret 
; function: string_to_int at 0x40093e -- 0x40096d
0x40093e:   55                              	push rbp
0x40093f:   48 89 e5                        	mov rbp, rsp
0x400942:   48 83 ec 10                     	sub rsp, 0x10
0x400946:   48 89 7d f8                     	mov qword ptr [rbp - 8], rdi
0x40094a:   48 89 75 f0                     	mov qword ptr [rbp - 0x10], rsi
0x40094e:   48 8b 55 f0                     	mov rdx, qword ptr [rbp - 0x10]
0x400952:   48 8b 45 f8                     	mov rax, qword ptr [rbp - 8]
0x400956:   48 8d 35 30 03 00 00            	lea rsi, [rip + 0x330]
0x40095d:   48 89 c7                        	mov rdi, rax
0x400960:   b8 00 00 00 00                  	mov eax, 0
0x400965:   e8 e6 fd ff ff                  	call 0x400750 <sscanf>
0x40096a:   90                              	nop 
0x40096b:   c9                              	leave 
0x40096c:   c3                              	ret 
; function: is_invalid at 0x40096d -- 0x40098e
0x40096d:   55                              	push rbp
0x40096e:   48 89 e5                        	mov rbp, rsp
0x400971:   89 7d fc                        	mov dword ptr [rbp - 4], edi
0x400974:   83 7d fc 00                     	cmp dword ptr [rbp - 4], 0
0x400978:   78 06                           	js 0x400980 <is_invalid+0x13>
0x40097a:   83 7d fc 09                     	cmp dword ptr [rbp - 4], 9
0x40097e:   7e 07                           	jle 0x400987 <is_invalid+0x1a>
0x400980:   b8 01 00 00 00                  	mov eax, 1
0x400985:   eb 05                           	jmp 0x40098c <is_invalid+0x1f>
0x400987:   b8 00 00 00 00                  	mov eax, 0
0x40098c:   5d                              	pop rbp
0x40098d:   c3                              	ret 
; function: main at 0x40098e -- 0x400bdd
0x40098e:   55                              	push rbp
0x40098f:   48 89 e5                        	mov rbp, rsp
0x400992:   48 81 ec c0 00 00 00            	sub rsp, 0xc0
0x400999:   89 bd 4c ff ff ff               	mov dword ptr [rbp - 0xb4], edi
0x40099f:   48 89 b5 40 ff ff ff            	mov qword ptr [rbp - 0xc0], rsi
0x4009a6:   64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x4009af:   48 89 45 f8                     	mov qword ptr [rbp - 8], rax
0x4009b3:   31 c0                           	xor eax, eax
0x4009b5:   48 8d 3d d4 02 00 00            	lea rdi, [rip + 0x2d4]
0x4009bc:   e8 0f fd ff ff                  	call 0x4006d0 <puts>
0x4009c1:   48 8d 3d 10 03 00 00            	lea rdi, [rip + 0x310]
0x4009c8:   e8 03 fd ff ff                  	call 0x4006d0 <puts>
0x4009cd:   83 bd 4c ff ff ff 05            	cmp dword ptr [rbp - 0xb4], 5
0x4009d4:   74 16                           	je 0x4009ec <main+0x5e>
0x4009d6:   48 8d 3d 2b 03 00 00            	lea rdi, [rip + 0x32b]
0x4009dd:   e8 ee fc ff ff                  	call 0x4006d0 <puts>
0x4009e2:   b8 01 00 00 00                  	mov eax, 1
0x4009e7:   e9 db 01 00 00                  	jmp 0x400bc7 <main+0x239>
0x4009ec:   48 8b 85 40 ff ff ff            	mov rax, qword ptr [rbp - 0xc0]
0x4009f3:   48 83 c0 08                     	add rax, 8
0x4009f7:   48 8b 00                        	mov rax, qword ptr [rax]
0x4009fa:   48 8d 95 54 ff ff ff            	lea rdx, [rbp - 0xac]
0x400a01:   48 89 d6                        	mov rsi, rdx
0x400a04:   48 89 c7                        	mov rdi, rax
0x400a07:   e8 32 ff ff ff                  	call 0x40093e <string_to_int>
0x400a0c:   48 8b 85 40 ff ff ff            	mov rax, qword ptr [rbp - 0xc0]
0x400a13:   48 83 c0 10                     	add rax, 0x10
0x400a17:   48 8b 00                        	mov rax, qword ptr [rax]
0x400a1a:   48 8d 95 58 ff ff ff            	lea rdx, [rbp - 0xa8]
0x400a21:   48 89 d6                        	mov rsi, rdx
0x400a24:   48 89 c7                        	mov rdi, rax
0x400a27:   e8 12 ff ff ff                  	call 0x40093e <string_to_int>
0x400a2c:   48 8b 85 40 ff ff ff            	mov rax, qword ptr [rbp - 0xc0]
0x400a33:   48 83 c0 18                     	add rax, 0x18
0x400a37:   48 8b 00                        	mov rax, qword ptr [rax]
0x400a3a:   48 8d 95 5c ff ff ff            	lea rdx, [rbp - 0xa4]
0x400a41:   48 89 d6                        	mov rsi, rdx
0x400a44:   48 89 c7                        	mov rdi, rax
0x400a47:   e8 f2 fe ff ff                  	call 0x40093e <string_to_int>
0x400a4c:   8b 85 54 ff ff ff               	mov eax, dword ptr [rbp - 0xac]
0x400a52:   89 c7                           	mov edi, eax
0x400a54:   e8 14 ff ff ff                  	call 0x40096d <is_invalid>
0x400a59:   85 c0                           	test eax, eax
0x400a5b:   75 6d                           	jne 0x400aca <main+0x13c>
0x400a5d:   8b 85 58 ff ff ff               	mov eax, dword ptr [rbp - 0xa8]
0x400a63:   89 c7                           	mov edi, eax
0x400a65:   e8 03 ff ff ff                  	call 0x40096d <is_invalid>
0x400a6a:   85 c0                           	test eax, eax
0x400a6c:   75 5c                           	jne 0x400aca <main+0x13c>
0x400a6e:   8b 85 5c ff ff ff               	mov eax, dword ptr [rbp - 0xa4]
0x400a74:   89 c7                           	mov edi, eax
0x400a76:   e8 f2 fe ff ff                  	call 0x40096d <is_invalid>
0x400a7b:   85 c0                           	test eax, eax
0x400a7d:   75 4b                           	jne 0x400aca <main+0x13c>
0x400a7f:   8b 85 58 ff ff ff               	mov eax, dword ptr [rbp - 0xa8]
0x400a85:   6b c8 64                        	imul ecx, eax, 0x64
0x400a88:   8b 95 54 ff ff ff               	mov edx, dword ptr [rbp - 0xac]
0x400a8e:   89 d0                           	mov eax, edx
0x400a90:   c1 e0 02                        	shl eax, 2
0x400a93:   01 d0                           	add eax, edx
0x400a95:   01 c0                           	add eax, eax
0x400a97:   8d 14 01                        	lea edx, [rcx + rax]
0x400a9a:   8b 85 5c ff ff ff               	mov eax, dword ptr [rbp - 0xa4]
0x400aa0:   01 d0                           	add eax, edx
0x400aa2:   3d a4 03 00 00                  	cmp eax, 0x3a4
0x400aa7:   75 21                           	jne 0x400aca <main+0x13c>
0x400aa9:   48 8b 85 40 ff ff ff            	mov rax, qword ptr [rbp - 0xc0]
0x400ab0:   48 83 c0 20                     	add rax, 0x20
0x400ab4:   48 8b 00                        	mov rax, qword ptr [rax]
0x400ab7:   48 8d 35 8b 02 00 00            	lea rsi, [rip + 0x28b]
0x400abe:   48 89 c7                        	mov rdi, rax
0x400ac1:   e8 7a fc ff ff                  	call 0x400740 <strcmp>
0x400ac6:   85 c0                           	test eax, eax
0x400ac8:   74 16                           	je 0x400ae0 <main+0x152>
0x400aca:   48 8d 3d 87 02 00 00            	lea rdi, [rip + 0x287]
0x400ad1:   e8 fa fb ff ff                  	call 0x4006d0 <puts>
0x400ad6:   b8 01 00 00 00                  	mov eax, 1
0x400adb:   e9 e7 00 00 00                  	jmp 0x400bc7 <main+0x239>
0x400ae0:   48 8d 3d a9 02 00 00            	lea rdi, [rip + 0x2a9]
0x400ae7:   e8 e4 fb ff ff                  	call 0x4006d0 <puts>
0x400aec:   48 8b 15 bd 15 20 00            	mov rdx, qword ptr [rip + 0x2015bd]
0x400af3:   48 8d 85 70 ff ff ff            	lea rax, [rbp - 0x90]
0x400afa:   be 80 00 00 00                  	mov esi, 0x80
0x400aff:   48 89 c7                        	mov rdi, rax
0x400b02:   e8 29 fc ff ff                  	call 0x400730 <fgets>
0x400b07:   48 8d 85 70 ff ff ff            	lea rax, [rbp - 0x90]
0x400b0e:   be 0a 00 00 00                  	mov esi, 0xa
0x400b13:   48 89 c7                        	mov rdi, rax
0x400b16:   e8 f5 fb ff ff                  	call 0x400710 <strchr>
0x400b1b:   48 89 85 68 ff ff ff            	mov qword ptr [rbp - 0x98], rax
0x400b22:   48 83 bd 68 ff ff ff 00         	cmp qword ptr [rbp - 0x98], 0
0x400b2a:   74 0a                           	je 0x400b36 <main+0x1a8>
0x400b2c:   48 8b 85 68 ff ff ff            	mov rax, qword ptr [rbp - 0x98]
0x400b33:   c6 00 00                        	mov byte ptr [rax], 0
0x400b36:   48 8d 85 70 ff ff ff            	lea rax, [rbp - 0x90]
0x400b3d:   48 89 c7                        	mov rdi, rax
0x400b40:   e8 9b fb ff ff                  	call 0x4006e0 <strlen>
0x400b45:   89 85 64 ff ff ff               	mov dword ptr [rbp - 0x9c], eax
0x400b4b:   c7 85 60 ff ff ff 00 00 00 00   	mov dword ptr [rbp - 0xa0], 0
0x400b55:   eb 47                           	jmp 0x400b9e <main+0x210>
0x400b57:   8b 85 60 ff ff ff               	mov eax, dword ptr [rbp - 0xa0]
0x400b5d:   48 98                           	cdqe 
0x400b5f:   0f b6 84 05 70 ff ff ff         	movzx eax, byte ptr [rbp + rax - 0x90]
0x400b67:   83 f0 2a                        	xor eax, 0x2a
0x400b6a:   89 c1                           	mov ecx, eax
0x400b6c:   8b 85 60 ff ff ff               	mov eax, dword ptr [rbp - 0xa0]
0x400b72:   48 63 d0                        	movsxd rdx, eax
0x400b75:   48 8d 05 14 15 20 00            	lea rax, [rip + 0x201514]
0x400b7c:   0f b6 04 02                     	movzx eax, byte ptr [rdx + rax]
0x400b80:   38 c1                           	cmp cl, al
0x400b82:   74 13                           	je 0x400b97 <main+0x209>
0x400b84:   48 8d 3d 3d 02 00 00            	lea rdi, [rip + 0x23d]
0x400b8b:   e8 40 fb ff ff                  	call 0x4006d0 <puts>
0x400b90:   b8 01 00 00 00                  	mov eax, 1
0x400b95:   eb 30                           	jmp 0x400bc7 <main+0x239>
0x400b97:   83 85 60 ff ff ff 01            	add dword ptr [rbp - 0xa0], 1
0x400b9e:   8b 85 60 ff ff ff               	mov eax, dword ptr [rbp - 0xa0]
0x400ba4:   3b 85 64 ff ff ff               	cmp eax, dword ptr [rbp - 0x9c]
0x400baa:   7e ab                           	jle 0x400b57 <main+0x1c9>
0x400bac:   48 8d 3d 3d 02 00 00            	lea rdi, [rip + 0x23d]
0x400bb3:   e8 18 fb ff ff                  	call 0x4006d0 <puts>
0x400bb8:   b8 00 00 00 00                  	mov eax, 0
0x400bbd:   e8 b5 fc ff ff                  	call 0x400877 <print_flag>
0x400bc2:   b8 00 00 00 00                  	mov eax, 0
0x400bc7:   48 8b 4d f8                     	mov rcx, qword ptr [rbp - 8]
0x400bcb:   64 48 33 0c 25 28 00 00 00      	xor rcx, qword ptr fs:[0x28]
0x400bd4:   74 05                           	je 0x400bdb <main+0x24d>
0x400bd6:   e8 15 fb ff ff                  	call 0x4006f0 <__stack_chk_fail>
0x400bdb:   c9                              	leave 
0x400bdc:   c3                              	ret 
; data inside code section at 0x400bdd -- 0x400be0
0x400bdd:   0f 1f 00                                           |...             |
; function: __libc_csu_init at 0x400be0 -- 0x400c45
0x400be0:   41 57                           	push r15
0x400be2:   41 56                           	push r14
0x400be4:   49 89 d7                        	mov r15, rdx
0x400be7:   41 55                           	push r13
0x400be9:   41 54                           	push r12
0x400beb:   4c 8d 25 1e 12 20 00            	lea r12, [rip + 0x20121e]
0x400bf2:   55                              	push rbp
0x400bf3:   48 8d 2d 1e 12 20 00            	lea rbp, [rip + 0x20121e]
0x400bfa:   53                              	push rbx
0x400bfb:   41 89 fd                        	mov r13d, edi
0x400bfe:   49 89 f6                        	mov r14, rsi
0x400c01:   4c 29 e5                        	sub rbp, r12
0x400c04:   48 83 ec 08                     	sub rsp, 8
0x400c08:   48 c1 fd 03                     	sar rbp, 3
0x400c0c:   e8 8f fa ff ff                  	call 0x4006a0 <_init>
0x400c11:   48 85 ed                        	test rbp, rbp
0x400c14:   74 20                           	je 0x400c36 <__libc_csu_init+0x56>
0x400c16:   31 db                           	xor ebx, ebx
0x400c18:   0f 1f 84 00 00 00 00 00         	nop dword ptr [rax + rax]
0x400c20:   4c 89 fa                        	mov rdx, r15
0x400c23:   4c 89 f6                        	mov rsi, r14
0x400c26:   44 89 ef                        	mov edi, r13d
0x400c29:   41 ff 14 dc                     	call qword ptr [r12 + rbx*8]
0x400c2d:   48 83 c3 01                     	add rbx, 1
0x400c31:   48 39 dd                        	cmp rbp, rbx
0x400c34:   75 ea                           	jne 0x400c20 <__libc_csu_init+0x40>
0x400c36:   48 83 c4 08                     	add rsp, 8
0x400c3a:   5b                              	pop rbx
0x400c3b:   5d                              	pop rbp
0x400c3c:   41 5c                           	pop r12
0x400c3e:   41 5d                           	pop r13
0x400c40:   41 5e                           	pop r14
0x400c42:   41 5f                           	pop r15
0x400c44:   c3                              	ret 
; data inside code section at 0x400c45 -- 0x400c50
0x400c45:   90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: __libc_csu_fini at 0x400c50 -- 0x400c52
0x400c50:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x400c54 -- 0x400c5d
0x400c54:   48 83 ec 08                     	sub rsp, 8
0x400c58:   48 83 c4 08                     	add rsp, 8
0x400c5c:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x400238:   2f 6c 69 62 36 34 2f 6c  64 2d 6c 69 6e 75 78 2d   |/lib64/ld-linux-|
0x400248:   78 38 36 2d 36 34 2e 73  6f 2e 32 00 04            |x86-64.so.2..   |
; section: .gnu.hash
0x400298:   02 00 00 00 0f 00 00 00  01 00 00 00 06 00 00 00   |................|
0x4002a8:   00 00 20 00 80 00 00 00  00 00 00 00 0f 00 00 00   |.. .............|
0x4002b8:   67 55 61 10 ??                                     |gUa.?           |
; section: .dynsym
0x4002c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4002d0:   00 00 00 00 00 00 00 00  16 00 00 00 12 00 00 00   |................|
0x4002e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4002f0:   3f 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |?...............|
0x400300:   00 00 00 00 00 00 00 00  1b 00 00 00 12 00 00 00   |................|
0x400310:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400320:   46 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |F...............|
0x400330:   00 00 00 00 00 00 00 00  5f 00 00 00 12 00 00 00   |........_.......|
0x400340:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400350:   32 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |2...............|
0x400360:   00 00 00 00 00 00 00 00  6d 00 00 00 12 00 00 00   |........m.......|
0x400370:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400380:   39 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |9...............|
0x400390:   00 00 00 00 00 00 00 00  66 00 00 00 12 00 00 00   |........f.......|
0x4003a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4003b0:   95 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |.... ...........|
0x4003c0:   00 00 00 00 00 00 00 00  50 00 00 00 12 00 00 00   |........P.......|
0x4003d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4003e0:   57 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |W...............|
0x4003f0:   00 00 00 00 00 00 00 00  10 00 00 00 12 00 00 00   |................|
0x400400:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400410:   0b 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400420:   00 00 00 00 00 00 00 00  2c 00 00 00 11 00 18 00   |........,.......|
0x400430:   b0 20 60 00 00 00 00 00  08 00 00 00 00 00 00 00   |. `.............|
0x400440:   00                                                 |.               |
; section: .dynstr
0x400440:   00 6c 69 62 63 2e 73 6f  2e 36 00 65 78 69 74 00   |.libc.so.6.exit.|
0x400450:   66 6f 70 65 6e 00 70 75  74 73 00 5f 5f 73 74 61   |fopen.puts.__sta|
0x400460:   63 6b 5f 63 68 6b 5f 66  61 69 6c 00 73 74 64 69   |ck_chk_fail.stdi|
0x400470:   6e 00 70 72 69 6e 74 66  00 66 67 65 74 73 00 73   |n.printf.fgets.s|
0x400480:   74 72 6c 65 6e 00 73 65  74 72 65 73 67 69 64 00   |trlen.setresgid.|
0x400490:   73 73 63 61 6e 66 00 67  65 74 65 67 69 64 00 73   |sscanf.getegid.s|
0x4004a0:   74 72 63 68 72 00 73 74  72 63 6d 70 00 5f 5f 6c   |trchr.strcmp.__l|
0x4004b0:   69 62 63 5f 73 74 61 72  74 5f 6d 61 69 6e 00 47   |ibc_start_main.G|
0x4004c0:   4c 49 42 43 5f 32 2e 34  00 47 4c 49 42 43 5f 32   |LIBC_2.4.GLIBC_2|
0x4004d0:   2e 32 2e 35 00 5f 5f 67  6d 6f 6e 5f 73 74 61 72   |.2.5.__gmon_star|
0x4004e0:   74 5f 5f 00 00                                     |t__..           |
; section: .gnu.version
0x4004e4:   00 00 02 00 02 00 03 00  02 00 02 00 02 00 02 00   |................|
0x4004f4:   02 00 02 00 00 00 02 00  02 00 02 00 02 00 02 00   |................|
0x400504:   ??                                                 |?               |
; section: .gnu.version_r
0x400508:   01 00 02 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x400518:   14 69 69 0d 00 00 03 00  7f 00 00 00 10 00 00 00   |.ii.............|
0x400528:   75 1a 69 09 00 00 02 00  89 00 00 00 00 00 00 00   |u.i.............|
0x400538:   f0                                                 |.               |
; section: .rela.dyn
0x400538:   f0 1f 60 00 00 00 00 00  06 00 00 00 07 00 00 00   |..`.............|
0x400548:   00 00 00 00 00 00 00 00  f8 1f 60 00 00 00 00 00   |..........`.....|
0x400558:   06 00 00 00 0a 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400568:   b0 20 60 00 00 00 00 00  05 00 00 00 0f 00 00 00   |. `.............|
0x400578:   00 00 00 00 00 00 00 00  18                        |.........       |
; section: .rela.plt
0x400580:   18 20 60 00 00 00 00 00  07 00 00 00 01 00 00 00   |. `.............|
0x400590:   00 00 00 00 00 00 00 00  20 20 60 00 00 00 00 00   |........  `.....|
0x4005a0:   07 00 00 00 02 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4005b0:   28 20 60 00 00 00 00 00  07 00 00 00 03 00 00 00   |( `.............|
0x4005c0:   00 00 00 00 00 00 00 00  30 20 60 00 00 00 00 00   |........0 `.....|
0x4005d0:   07 00 00 00 04 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4005e0:   38 20 60 00 00 00 00 00  07 00 00 00 05 00 00 00   |8 `.............|
0x4005f0:   00 00 00 00 00 00 00 00  40 20 60 00 00 00 00 00   |........@ `.....|
0x400600:   07 00 00 00 06 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400610:   48 20 60 00 00 00 00 00  07 00 00 00 08 00 00 00   |H `.............|
0x400620:   00 00 00 00 00 00 00 00  50 20 60 00 00 00 00 00   |........P `.....|
0x400630:   07 00 00 00 09 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400640:   58 20 60 00 00 00 00 00  07 00 00 00 0b 00 00 00   |X `.............|
0x400650:   00 00 00 00 00 00 00 00  60 20 60 00 00 00 00 00   |........` `.....|
0x400660:   07 00 00 00 0c 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400670:   68 20 60 00 00 00 00 00  07 00 00 00 0d 00 00 00   |h `.............|
0x400680:   00 00 00 00 00 00 00 00  70 20 60 00 00 00 00 00   |........p `.....|
0x400690:   07 00 00 00 0e 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4006a0:   48                                                 |H               |
; section: .rodata
0x400c60:   01 00 02 00 00 00 00 00  72 00                     |........r.      |
0x400c6a:   66 6c 61 67 2e 74 78 74  00                        |flag.txt.       |   "flag.txt"
0x400c73:   43 61 6e 6e 6f 74 20 72  65 61 64 20 66 6c 61 67   |Cannot read flag|   "Cannot read flag file."
0x400c83:   20 66 69 6c 65 2e 00                               | file..         |
0x400c8a:   25 73 00                                           |%s.             |   "%s"
0x400c8d:   25 64 00                                           |%d.             |   "%d"
0x400c90:   53 6f 20 79 6f 75 20 66  69 67 75 72 65 64 20 6f   |So you figured o|   "So you figured out how to provide input and command line arguments."
0x400ca0:   75 74 20 68 6f 77 20 74  6f 20 70 72 6f 76 69 64   |ut how to provid|
0x400cb0:   65 20 69 6e 70 75 74 20  61 6e 64 20 63 6f 6d 6d   |e input and comm|
0x400cc0:   61 6e 64 20 6c 69 6e 65  20 61 72 67 75 6d 65 6e   |and line argumen|
0x400cd0:   74 73 2e 00                                        |ts..            |
0x400cd4:   00 00 00 00                                        |....            |
0x400cd8:   42 75 74 20 63 61 6e 20  79 6f 75 20 66 69 67 75   |But can you figu|   "But can you figure out what input to provide?"
0x400ce8:   72 65 20 6f 75 74 20 77  68 61 74 20 69 6e 70 75   |re out what inpu|
0x400cf8:   74 20 74 6f 20 70 72 6f  76 69 64 65 3f 00         |t to provide?.  |
0x400d06:   00 00                                              |..              |
0x400d08:   4d 61 6b 65 20 73 75 72  65 20 79 6f 75 20 68 61   |Make sure you ha|   "Make sure you have the correct amount of command line arguments!"
0x400d18:   76 65 20 74 68 65 20 63  6f 72 72 65 63 74 20 61   |ve the correct a|
0x400d28:   6d 6f 75 6e 74 20 6f 66  20 63 6f 6d 6d 61 6e 64   |mount of command|
0x400d38:   20 6c 69 6e 65 20 61 72  67 75 6d 65 6e 74 73 21   | line arguments!|
0x400d48:   00                                                 |.               |
0x400d49:   63 68 69 63 6b 65 6e 00                            |chicken.        |   "chicken"
0x400d51:   00 00 00 00 00 00 00                               |.......         |
0x400d58:   44 6f 6e 27 74 20 74 72  79 20 74 6f 20 67 75 65   |Don't try to gue|   "Don't try to guess the arguments, it won't work."
0x400d68:   73 73 20 74 68 65 20 61  72 67 75 6d 65 6e 74 73   |ss the arguments|
0x400d78:   2c 20 69 74 20 77 6f 6e  27 74 20 77 6f 72 6b 2e   |, it won't work.|
0x400d88:   00                                                 |.               |
0x400d89:   00 00 00 00 00 00 00                               |.......         |
0x400d90:   57 65 6c 6c 2c 20 79 6f  75 20 66 6f 75 6e 64 20   |Well, you found |   "Well, you found the arguments, but what's the password?"
0x400da0:   74 68 65 20 61 72 67 75  6d 65 6e 74 73 2c 20 62   |the arguments, b|
0x400db0:   75 74 20 77 68 61 74 27  73 20 74 68 65 20 70 61   |ut what's the pa|
0x400dc0:   73 73 77 6f 72 64 3f 00                            |ssword?.        |
0x400dc8:   49 27 6d 20 73 75 72 65  20 69 74 27 73 20 6a 75   |I'm sure it's ju|   "I'm sure it's just a typo. Try again."
0x400dd8:   73 74 20 61 20 74 79 70  6f 2e 20 54 72 79 20 61   |st a typo. Try a|
0x400de8:   67 61 69 6e 2e 00                                  |gain..          |
0x400dee:   00 00                                              |..              |
0x400df0:   47 6f 6f 64 20 6a 6f 62  21 20 59 6f 75 27 72 65   |Good job! You're|   "Good job! You're ready to move on to bigger and badder rev!"
0x400e00:   20 72 65 61 64 79 20 74  6f 20 6d 6f 76 65 20 6f   | ready to move o|
0x400e10:   6e 20 74 6f 20 62 69 67  67 65 72 20 61 6e 64 20   |n to bigger and |
0x400e20:   62 61 64 64 65 72 20 72  65 76 21 00               |badder rev!.    |
0x400e2c:   01                                                 |.               |
; section: .eh_frame_hdr
0x400e2c:   01 1b 03 3b 50 00 00 00  09 00 00 00 94 f8 ff ff   |...;P...........|
0x400e3c:   ac 00 00 00 64 f9 ff ff  6c 00 00 00 94 f9 ff ff   |....d...l.......|
0x400e4c:   98 00 00 00 4b fa ff ff  d4 00 00 00 12 fb ff ff   |....K...........|
0x400e5c:   f4 00 00 00 41 fb ff ff  14 01 00 00 62 fb ff ff   |....A.......b...|
0x400e6c:   34 01 00 00 b4 fd ff ff  54 01 00 00 24 fe ff ff   |4.......T...$...|
0x400e7c:   9c 01 00 00 14                                     |.....           |
; section: .eh_frame
0x400e80:   14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x400e90:   1b 0c 07 08 90 01 07 10  10 00 00 00 1c 00 00 00   |................|
0x400ea0:   f0 f8 ff ff 2b 00 00 00  00 00 00 00 14 00 00 00   |....+...........|
0x400eb0:   00 00 00 00 01 7a 52 00  01 78 10 01 1b 0c 07 08   |.....zR..x......|
0x400ec0:   90 01 00 00 10 00 00 00  1c 00 00 00 f4 f8 ff ff   |................|
0x400ed0:   02 00 00 00 00 00 00 00  24 00 00 00 30 00 00 00   |........$...0...|
0x400ee0:   e0 f7 ff ff d0 00 00 00  00 0e 10 46 0e 18 4a 0f   |...........F..J.|
0x400ef0:   0b 77 08 80 00 3f 1a 3b  2a 33 24 22 00 00 00 00   |.w...?.;*3$"....|
0x400f00:   1c 00 00 00 58 00 00 00  6f f9 ff ff c7 00 00 00   |....X...o.......|
0x400f10:   00 41 0e 10 86 02 43 0d  06 02 c2 0c 07 08 00 00   |.A....C.........|
0x400f20:   1c 00 00 00 78 00 00 00  16 fa ff ff 2f 00 00 00   |....x......./...|
0x400f30:   00 41 0e 10 86 02 43 0d  06 6a 0c 07 08 00 00 00   |.A....C..j......|
0x400f40:   1c 00 00 00 98 00 00 00  25 fa ff ff 21 00 00 00   |........%...!...|
0x400f50:   00 41 0e 10 86 02 43 0d  06 5c 0c 07 08 00 00 00   |.A....C..\......|
0x400f60:   1c 00 00 00 b8 00 00 00  26 fa ff ff 4f 02 00 00   |........&...O...|
0x400f70:   00 41 0e 10 86 02 43 0d  06 03 4a 02 0c 07 08 00   |.A....C...J.....|
0x400f80:   44 00 00 00 d8 00 00 00  58 fc ff ff 65 00 00 00   |D.......X...e...|
0x400f90:   00 42 0e 10 8f 02 42 0e  18 8e 03 45 0e 20 8d 04   |.B....B....E. ..|
0x400fa0:   42 0e 28 8c 05 48 0e 30  86 06 48 0e 38 83 07 4d   |B.(..H.0..H.8..M|
0x400fb0:   0e 40 72 0e 38 41 0e 30  41 0e 28 42 0e 20 42 0e   |.@r.8A.0A.(B. B.|
0x400fc0:   18 42 0e 10 42 0e 08 00  10 00 00 00 20 01 00 00   |.B..B....... ...|
0x400fd0:   80 fc ff ff 02 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400fe0:   ??                                                 |?               |
; section: .init_array
0x601e10:   70 08 40 00 00 00 00 00  40                        |p.@.....@       |
; section: .fini_array
0x601e18:   40 08 40 00 00 00 00 00  01                        |@.@......       |
; section: .dynamic
0x601e20:   01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x601e30:   0c 00 00 00 00 00 00 00  a0 06 40 00 00 00 00 00   |..........@.....|
0x601e40:   0d 00 00 00 00 00 00 00  54 0c 40 00 00 00 00 00   |........T.@.....|
0x601e50:   19 00 00 00 00 00 00 00  10 1e 60 00 00 00 00 00   |..........`.....|
0x601e60:   1b 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x601e70:   1a 00 00 00 00 00 00 00  18 1e 60 00 00 00 00 00   |..........`.....|
0x601e80:   1c 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x601e90:   f5 fe ff 6f 00 00 00 00  98 02 40 00 00 00 00 00   |...o......@.....|
0x601ea0:   05 00 00 00 00 00 00 00  40 04 40 00 00 00 00 00   |........@.@.....|
0x601eb0:   06 00 00 00 00 00 00 00  c0 02 40 00 00 00 00 00   |..........@.....|
0x601ec0:   0a 00 00 00 00 00 00 00  a4 00 00 00 00 00 00 00   |................|
0x601ed0:   0b 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x601ee0:   15 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x601ef0:   03 00 00 00 00 00 00 00  00 20 60 00 00 00 00 00   |......... `.....|
0x601f00:   02 00 00 00 00 00 00 00  20 01 00 00 00 00 00 00   |........ .......|
0x601f10:   14 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x601f20:   17 00 00 00 00 00 00 00  80 05 40 00 00 00 00 00   |..........@.....|
0x601f30:   07 00 00 00 00 00 00 00  38 05 40 00 00 00 00 00   |........8.@.....|
0x601f40:   08 00 00 00 00 00 00 00  48 00 00 00 00 00 00 00   |........H.......|
0x601f50:   09 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x601f60:   fe ff ff 6f 00 00 00 00  08 05 40 00 00 00 00 00   |...o......@.....|
0x601f70:   ff ff ff 6f 00 00 00 00  01 00 00 00 00 00 00 00   |...o............|
0x601f80:   f0 ff ff 6f 00 00 00 00  e4 04 40 00 00 00 00 00   |...o......@.....|
0x601f90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x601fa0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x601fb0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x601fc0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x601fd0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x601fe0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x601ff0:   00                                                 |.               |
; section: .got
0x601ff0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x602000:   20                                                 |                |
; section: .got.plt
0x602000:   20 1e 60 00 00 00 00 00  00 00 00 00 00 00 00 00   | .`.............|
0x602010:   00 00 00 00 00 00 00 00  d6 06 40 00 00 00 00 00   |..........@.....|
0x602020:   e6 06 40 00 00 00 00 00  f6 06 40 00 00 00 00 00   |..@.......@.....|
0x602030:   06 07 40 00 00 00 00 00  16 07 40 00 00 00 00 00   |..@.......@.....|
0x602040:   26 07 40 00 00 00 00 00  36 07 40 00 00 00 00 00   |&.@.....6.@.....|
0x602050:   46 07 40 00 00 00 00 00  56 07 40 00 00 00 00 00   |F.@.....V.@.....|
0x602060:   66 07 40 00 00 00 00 00  76 07 40 00 00 00 00 00   |f.@.....v.@.....|
0x602070:   86 07 40 00 00 00 00 00  ??                        |..@.....?       |
; section: .data
0x602080:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x602090:   5a 46 4f 4b 59 4f 0a 4d  43 5c 4f 0a 4c 46 4b 4d   |ZFOKYO.MC\O.LFKM|   "ZFOKYO\nMC\\O\nLFKM*"
0x6020a0:   2a ??                                              |*?              |
